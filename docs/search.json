[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this blog"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "blog",
    "section": "",
    "text": "news\n\n\ncode\n\n\nanalysis\n\n\n\n\n\n\n\n\n\n\n\nSep 22, 2022\n\n\nHarlow Malloc\n\n\n\n\n\n\n  \n\n\n\n\n\n\n\n\n\n\nnews\n\n\n\n\n\n\n\n\n\n\n\nSep 19, 2022\n\n\nTristan O’Malley\n\n\n\n\n\n\n  \n\n\n\n\n\n\n\n\n\n\nknime\n\n\nlinear regression\n\n\nlow-code\n\n\n\n\nPredicting the average prices of pumpkins in American cities using Linear Regression and Knime Analytics\n\n\n\n\n\n\nJan 5, 2022\n\n\nLeonard Mutambanengwe\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nArthur Danda introduces classification using the popular breast cancer dataset\n\n\n\n\n\n\nJul 1, 2021\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nmarkdown\n\n\n\n\nHenrica Makulu writes on data science resumes..\n\n\n\n\n\n\nJun 17, 2021\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDivine Saungweme explores pipelines, cv and hyperparameter tuning in SKLearn.\n\n\n\n\n\n\nJun 8, 2021\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDivine Saungweme explores pipelines, cv and hyperparameter tuning in SKLearn.\n\n\n\n\n\n\nJun 1, 2021\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nLINEAR REGRESSION TUTORIAL BY RUVIMBO MAMBINGE\n\n\n\n\n\n\nMay 21, 2021\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nmarkdown\n\n\n\n\nHenrica Makulu discusses how one can start their data journey..\n\n\n\n\n\n\nFeb 28, 2021\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nmarkdown\n\n\n\n\nHenrica Makulu writes on the difference between data science and data analytics\n\n\n\n\n\n\nJan 21, 2021\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nmarkdown\n\n\n\n\nLeo Dzingirai breaks down what data science is to get you started on your journey…\n\n\n\n\n\n\nJan 1, 2021\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/2021-01-01-An-Introduction-to-Data-Science.html",
    "href": "posts/2021-01-01-An-Introduction-to-Data-Science.html",
    "title": "An Introduction to Data Science",
    "section": "",
    "text": "New to Data Science? Join us on the journey to appreciating this field and its potential for impacting our landscape.\nLeo Dzingirai answers fundamental questions about data science in the presentation (pdf and video) at DSZ learning series - Google Drive\nFollow the DSZ Blog as the community shares knowledge on their interests and projects in data science."
  },
  {
    "objectID": "posts/2021-01-21-data-science-vs-data-analytics.html",
    "href": "posts/2021-01-21-data-science-vs-data-analytics.html",
    "title": "The Difference Between Data Science, Data Analytics and Big Data",
    "section": "",
    "text": "The world of data has taken us by storm and many are interested in the field of data science. However, this has led to some throwing terms around without knowing their actual meanings. In this article, we explain the difference between Data Science, Data Analytics, and Big Data. We explain what they actually mean so that next time you use the terms with a better technical understanding.\nContinue reading here…"
  },
  {
    "objectID": "posts/2021-02-28-how-to-get-into-data-science-data-analytics.html",
    "href": "posts/2021-02-28-how-to-get-into-data-science-data-analytics.html",
    "title": "How to get into data science or data analytics",
    "section": "",
    "text": "In the previous data science article we distinguished between data analytics and data science. A lot of people do get confused about the difference between the two terms so let’s reiterate it here before we dive in. Data science is the overarching term of the overall field. Data analytics (or analysis) is a subset of data science. Generally, data science finds insights from data through programming and machine learning (or building models) whereas data analytics finds insights from data without necessarily getting into programming or machine learning. In this article, we will use the term ‘data science’ bearing in mind that data analytics is included in that term.\nContinue reading here…"
  },
  {
    "objectID": "posts/2021-05-21-linear-regression-walkthrough-with-seoul-bike-sharing-dataset-and-google-colab.html",
    "href": "posts/2021-05-21-linear-regression-walkthrough-with-seoul-bike-sharing-dataset-and-google-colab.html",
    "title": "Linear Regression Walkthrough with Seoul Bike Sharing Dataset and Google Colab",
    "section": "",
    "text": "Import Data\nImporting Data is a processing of allowing one to move data from its location to your notebook. From here data is being imported from google drive to the current notebook.\n\n!pip install -U -q PyDrive\nfrom pydrive.auth import GoogleAuth\nfrom pydrive.drive import GoogleDrive\nfrom google.colab import auth\nfrom oauth2client.client import GoogleCredentials\n# Authenticate and create the PyDrive client.\nauth.authenticate_user()\ngauth = GoogleAuth()\ngauth.credentials = GoogleCredentials.get_application_default()\ndrive = GoogleDrive(gauth)\n\n\nlink = 'https://drive.google.com/file/d/1CPx8P4n8Tu6Da2QMJzkUIEsiEm79AJXy/view?usp=sharing' # The shareable link\n\nPreview the first five rows of the train set\n\n# to get the id part of the file \n# id = link.split(\"/\")[-2] \n  \ndownloaded = drive.CreateFile({'id':id})  \ndownloaded.GetContentFile('SeoulBikeData.csv')   \n  \ndf = pd.read_csv('SeoulBikeData.csv' , encoding='mac_roman',)\ndf.head(10)\n\n\n\n\n\n  \n    \n      \n      Date\n      Rented Bike Count\n      Hour\n      Temperature(∞C)\n      Humidity(%)\n      Wind speed (m/s)\n      Visibility (10m)\n      Dew point temperature(∞C)\n      Solar Radiation (MJ/m2)\n      Rainfall(mm)\n      Snowfall (cm)\n      Seasons\n      Holiday\n      Functioning Day\n    \n  \n  \n    \n      0\n      01/12/2017\n      254\n      0\n      -5.2\n      37\n      2.2\n      2000\n      -17.6\n      0.00\n      0.0\n      0.0\n      Winter\n      No Holiday\n      Yes\n    \n    \n      1\n      01/12/2017\n      204\n      1\n      -5.5\n      38\n      0.8\n      2000\n      -17.6\n      0.00\n      0.0\n      0.0\n      Winter\n      No Holiday\n      Yes\n    \n    \n      2\n      01/12/2017\n      173\n      2\n      -6.0\n      39\n      1.0\n      2000\n      -17.7\n      0.00\n      0.0\n      0.0\n      Winter\n      No Holiday\n      Yes\n    \n    \n      3\n      01/12/2017\n      107\n      3\n      -6.2\n      40\n      0.9\n      2000\n      -17.6\n      0.00\n      0.0\n      0.0\n      Winter\n      No Holiday\n      Yes\n    \n    \n      4\n      01/12/2017\n      78\n      4\n      -6.0\n      36\n      2.3\n      2000\n      -18.6\n      0.00\n      0.0\n      0.0\n      Winter\n      No Holiday\n      Yes\n    \n    \n      5\n      01/12/2017\n      100\n      5\n      -6.4\n      37\n      1.5\n      2000\n      -18.7\n      0.00\n      0.0\n      0.0\n      Winter\n      No Holiday\n      Yes\n    \n    \n      6\n      01/12/2017\n      181\n      6\n      -6.6\n      35\n      1.3\n      2000\n      -19.5\n      0.00\n      0.0\n      0.0\n      Winter\n      No Holiday\n      Yes\n    \n    \n      7\n      01/12/2017\n      460\n      7\n      -7.4\n      38\n      0.9\n      2000\n      -19.3\n      0.00\n      0.0\n      0.0\n      Winter\n      No Holiday\n      Yes\n    \n    \n      8\n      01/12/2017\n      930\n      8\n      -7.6\n      37\n      1.1\n      2000\n      -19.8\n      0.01\n      0.0\n      0.0\n      Winter\n      No Holiday\n      Yes\n    \n    \n      9\n      01/12/2017\n      490\n      9\n      -6.5\n      27\n      0.5\n      1928\n      -22.4\n      0.23\n      0.0\n      0.0\n      Winter\n      No Holiday\n      Yes\n    \n  \n\n\n\n\n\n# Check the shape of the train set\ndf.shape\n\n(8760, 14)\n\n\n\n#Description of data\nprint(df.info())\n\n<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 8760 entries, 0 to 8759\nData columns (total 14 columns):\n #   Column                     Non-Null Count  Dtype  \n---  ------                     --------------  -----  \n 0   Date                       8760 non-null   object \n 1   Rented Bike Count          8760 non-null   int64  \n 2   Hour                       8760 non-null   int64  \n 3   Temperature(∞C)            8760 non-null   float64\n 4   Humidity(%)                8760 non-null   int64  \n 5   Wind speed (m/s)           8760 non-null   float64\n 6   Visibility (10m)           8760 non-null   int64  \n 7   Dew point temperature(∞C)  8760 non-null   float64\n 8   Solar Radiation (MJ/m2)    8760 non-null   float64\n 9   Rainfall(mm)               8760 non-null   float64\n 10  Snowfall (cm)              8760 non-null   float64\n 11  Seasons                    8760 non-null   object \n 12  Holiday                    8760 non-null   object \n 13  Functioning Day            8760 non-null   object \ndtypes: float64(6), int64(4), object(4)\nmemory usage: 958.2+ KB\nNone\n\n\n\ndf.describe()\n\n\n\n\n\n  \n    \n      \n      Rented Bike Count\n      Hour\n      Temperature(∞C)\n      Humidity(%)\n      Wind speed (m/s)\n      Visibility (10m)\n      Dew point temperature(∞C)\n      Solar Radiation (MJ/m2)\n      Rainfall(mm)\n      Snowfall (cm)\n    \n  \n  \n    \n      count\n      8760.000000\n      8760.000000\n      8760.000000\n      8760.000000\n      8760.000000\n      8760.000000\n      8760.000000\n      8760.000000\n      8760.000000\n      8760.000000\n    \n    \n      mean\n      704.602055\n      11.500000\n      12.882922\n      58.226256\n      1.724909\n      1436.825799\n      4.073813\n      0.569111\n      0.148687\n      0.075068\n    \n    \n      std\n      644.997468\n      6.922582\n      11.944825\n      20.362413\n      1.036300\n      608.298712\n      13.060369\n      0.868746\n      1.128193\n      0.436746\n    \n    \n      min\n      0.000000\n      0.000000\n      -17.800000\n      0.000000\n      0.000000\n      27.000000\n      -30.600000\n      0.000000\n      0.000000\n      0.000000\n    \n    \n      25%\n      191.000000\n      5.750000\n      3.500000\n      42.000000\n      0.900000\n      940.000000\n      -4.700000\n      0.000000\n      0.000000\n      0.000000\n    \n    \n      50%\n      504.500000\n      11.500000\n      13.700000\n      57.000000\n      1.500000\n      1698.000000\n      5.100000\n      0.010000\n      0.000000\n      0.000000\n    \n    \n      75%\n      1065.250000\n      17.250000\n      22.500000\n      74.000000\n      2.300000\n      2000.000000\n      14.800000\n      0.930000\n      0.000000\n      0.000000\n    \n    \n      max\n      3556.000000\n      23.000000\n      39.400000\n      98.000000\n      7.400000\n      2000.000000\n      27.200000\n      3.520000\n      35.000000\n      8.800000\n    \n  \n\n\n\n\n\ndf.describe(include=['O'])\n\n\n\n\n\n  \n    \n      \n      Date\n      Seasons\n      Holiday\n      Functioning Day\n    \n  \n  \n    \n      count\n      8760\n      8760\n      8760\n      8760\n    \n    \n      unique\n      365\n      4\n      2\n      2\n    \n    \n      top\n      13/11/2018\n      Summer\n      No Holiday\n      Yes\n    \n    \n      freq\n      24\n      2208\n      8328\n      8465\n    \n  \n\n\n\n\nCheck whether there are null values in the data set.\n\ndf.isnull().sum()\n\nDate                         0\nRented Bike Count            0\nHour                         0\nTemperature(∞C)              0\nHumidity(%)                  0\nWind speed (m/s)             0\nVisibility (10m)             0\nDew point temperature(∞C)    0\nSolar Radiation (MJ/m2)      0\nRainfall(mm)                 0\nSnowfall (cm)                0\nSeasons                      0\nHoliday                      0\nFunctioning Day              0\ndtype: int64\n\n\n\n\nData preparation\nThis where we transform our raw data.\n\nConvert Categorical values to numeric using Label Encoder conversion\nConvert Date to a Date format that brings out insights when visualisation is done and makes it easy for algorithms to understand and brings out insights when visualisation is done.\nOne Hot Encoding conversion, creating dummy variables to convert categorical into numeric values\n\n\n#import preprocessing module\nfrom sklearn.preprocessing import LabelEncoder\n\n\n# Label Encoder conversion\nle = LabelEncoder()\ndf[\"Holiday\"] = le.fit_transform(df[\"Holiday\"])\ndf[\"Functioning Day\"] = le.fit_transform(df[\"Functioning Day\"])\n\n\ndf.head()\n\n\n\n\n\n  \n    \n      \n      Date\n      Rented Bike Count\n      Hour\n      Temperature(∞C)\n      Humidity(%)\n      Wind speed (m/s)\n      Visibility (10m)\n      Dew point temperature(∞C)\n      Solar Radiation (MJ/m2)\n      Rainfall(mm)\n      Snowfall (cm)\n      Seasons\n      Holiday\n      Functioning Day\n    \n  \n  \n    \n      0\n      01/12/2017\n      254\n      0\n      -5.2\n      37\n      2.2\n      2000\n      -17.6\n      0.0\n      0.0\n      0.0\n      Winter\n      1\n      1\n    \n    \n      1\n      01/12/2017\n      204\n      1\n      -5.5\n      38\n      0.8\n      2000\n      -17.6\n      0.0\n      0.0\n      0.0\n      Winter\n      1\n      1\n    \n    \n      2\n      01/12/2017\n      173\n      2\n      -6.0\n      39\n      1.0\n      2000\n      -17.7\n      0.0\n      0.0\n      0.0\n      Winter\n      1\n      1\n    \n    \n      3\n      01/12/2017\n      107\n      3\n      -6.2\n      40\n      0.9\n      2000\n      -17.6\n      0.0\n      0.0\n      0.0\n      Winter\n      1\n      1\n    \n    \n      4\n      01/12/2017\n      78\n      4\n      -6.0\n      36\n      2.3\n      2000\n      -18.6\n      0.0\n      0.0\n      0.0\n      Winter\n      1\n      1\n    \n  \n\n\n\n\n\ndf['Date'] = pd.to_datetime(df['Date'])\ndf = df.assign(\n               day=df.Date.dt.day,\n               month=df.Date.dt.month,\n               year=df.Date.dt.year)\n\n\ndf.head()\n\n\n\n\n\n  \n    \n      \n      Date\n      Rented Bike Count\n      Hour\n      Temperature(∞C)\n      Humidity(%)\n      Wind speed (m/s)\n      Visibility (10m)\n      Dew point temperature(∞C)\n      Solar Radiation (MJ/m2)\n      Rainfall(mm)\n      Snowfall (cm)\n      Seasons\n      Holiday\n      Functioning Day\n      day\n      month\n      year\n    \n  \n  \n    \n      0\n      2017-01-12\n      254\n      0\n      -5.2\n      37\n      2.2\n      2000\n      -17.6\n      0.0\n      0.0\n      0.0\n      Winter\n      1\n      1\n      12\n      1\n      2017\n    \n    \n      1\n      2017-01-12\n      204\n      1\n      -5.5\n      38\n      0.8\n      2000\n      -17.6\n      0.0\n      0.0\n      0.0\n      Winter\n      1\n      1\n      12\n      1\n      2017\n    \n    \n      2\n      2017-01-12\n      173\n      2\n      -6.0\n      39\n      1.0\n      2000\n      -17.7\n      0.0\n      0.0\n      0.0\n      Winter\n      1\n      1\n      12\n      1\n      2017\n    \n    \n      3\n      2017-01-12\n      107\n      3\n      -6.2\n      40\n      0.9\n      2000\n      -17.6\n      0.0\n      0.0\n      0.0\n      Winter\n      1\n      1\n      12\n      1\n      2017\n    \n    \n      4\n      2017-01-12\n      78\n      4\n      -6.0\n      36\n      2.3\n      2000\n      -18.6\n      0.0\n      0.0\n      0.0\n      Winter\n      1\n      1\n      12\n      1\n      2017\n    \n  \n\n\n\n\n\n# One Hot Encoding conversion, creating dummy variables to convert categorical into numeric values\n\nSeasons = list(df.select_dtypes(include=['object']).columns)\ndummies = pd.get_dummies(df[Seasons], prefix=Seasons)\ndf.drop(Seasons, axis=1, inplace = True)\n\ndf = pd.concat([df, dummies], axis = 1)\n\n\ndf.head()\n\n\n\n\n\n  \n    \n      \n      Date\n      Rented Bike Count\n      Hour\n      Temperature(∞C)\n      Humidity(%)\n      Wind speed (m/s)\n      Visibility (10m)\n      Dew point temperature(∞C)\n      Solar Radiation (MJ/m2)\n      Rainfall(mm)\n      Snowfall (cm)\n      Holiday\n      Functioning Day\n      day\n      month\n      year\n      Seasons_Autumn\n      Seasons_Spring\n      Seasons_Summer\n      Seasons_Winter\n    \n  \n  \n    \n      0\n      2017-01-12\n      254\n      0\n      -5.2\n      37\n      2.2\n      2000\n      -17.6\n      0.0\n      0.0\n      0.0\n      1\n      1\n      12\n      1\n      2017\n      0\n      0\n      0\n      1\n    \n    \n      1\n      2017-01-12\n      204\n      1\n      -5.5\n      38\n      0.8\n      2000\n      -17.6\n      0.0\n      0.0\n      0.0\n      1\n      1\n      12\n      1\n      2017\n      0\n      0\n      0\n      1\n    \n    \n      2\n      2017-01-12\n      173\n      2\n      -6.0\n      39\n      1.0\n      2000\n      -17.7\n      0.0\n      0.0\n      0.0\n      1\n      1\n      12\n      1\n      2017\n      0\n      0\n      0\n      1\n    \n    \n      3\n      2017-01-12\n      107\n      3\n      -6.2\n      40\n      0.9\n      2000\n      -17.6\n      0.0\n      0.0\n      0.0\n      1\n      1\n      12\n      1\n      2017\n      0\n      0\n      0\n      1\n    \n    \n      4\n      2017-01-12\n      78\n      4\n      -6.0\n      36\n      2.3\n      2000\n      -18.6\n      0.0\n      0.0\n      0.0\n      1\n      1\n      12\n      1\n      2017\n      0\n      0\n      0\n      1\n    \n  \n\n\n\n\n\ndf=df.drop(['Date'], axis=1)\n\n\ndf.head(20)\n\n\n\n\n\n  \n    \n      \n      Rented Bike Count\n      Hour\n      Temperature(∞C)\n      Humidity(%)\n      Wind speed (m/s)\n      Visibility (10m)\n      Dew point temperature(∞C)\n      Solar Radiation (MJ/m2)\n      Rainfall(mm)\n      Snowfall (cm)\n      Holiday\n      Functioning Day\n      day\n      month\n      year\n      Seasons_Autumn\n      Seasons_Spring\n      Seasons_Summer\n      Seasons_Winter\n    \n  \n  \n    \n      0\n      254\n      0\n      -5.2\n      37\n      2.2\n      2000\n      -17.6\n      0.00\n      0.0\n      0.0\n      1\n      1\n      12\n      1\n      2017\n      0\n      0\n      0\n      1\n    \n    \n      1\n      204\n      1\n      -5.5\n      38\n      0.8\n      2000\n      -17.6\n      0.00\n      0.0\n      0.0\n      1\n      1\n      12\n      1\n      2017\n      0\n      0\n      0\n      1\n    \n    \n      2\n      173\n      2\n      -6.0\n      39\n      1.0\n      2000\n      -17.7\n      0.00\n      0.0\n      0.0\n      1\n      1\n      12\n      1\n      2017\n      0\n      0\n      0\n      1\n    \n    \n      3\n      107\n      3\n      -6.2\n      40\n      0.9\n      2000\n      -17.6\n      0.00\n      0.0\n      0.0\n      1\n      1\n      12\n      1\n      2017\n      0\n      0\n      0\n      1\n    \n    \n      4\n      78\n      4\n      -6.0\n      36\n      2.3\n      2000\n      -18.6\n      0.00\n      0.0\n      0.0\n      1\n      1\n      12\n      1\n      2017\n      0\n      0\n      0\n      1\n    \n    \n      5\n      100\n      5\n      -6.4\n      37\n      1.5\n      2000\n      -18.7\n      0.00\n      0.0\n      0.0\n      1\n      1\n      12\n      1\n      2017\n      0\n      0\n      0\n      1\n    \n    \n      6\n      181\n      6\n      -6.6\n      35\n      1.3\n      2000\n      -19.5\n      0.00\n      0.0\n      0.0\n      1\n      1\n      12\n      1\n      2017\n      0\n      0\n      0\n      1\n    \n    \n      7\n      460\n      7\n      -7.4\n      38\n      0.9\n      2000\n      -19.3\n      0.00\n      0.0\n      0.0\n      1\n      1\n      12\n      1\n      2017\n      0\n      0\n      0\n      1\n    \n    \n      8\n      930\n      8\n      -7.6\n      37\n      1.1\n      2000\n      -19.8\n      0.01\n      0.0\n      0.0\n      1\n      1\n      12\n      1\n      2017\n      0\n      0\n      0\n      1\n    \n    \n      9\n      490\n      9\n      -6.5\n      27\n      0.5\n      1928\n      -22.4\n      0.23\n      0.0\n      0.0\n      1\n      1\n      12\n      1\n      2017\n      0\n      0\n      0\n      1\n    \n    \n      10\n      339\n      10\n      -3.5\n      24\n      1.2\n      1996\n      -21.2\n      0.65\n      0.0\n      0.0\n      1\n      1\n      12\n      1\n      2017\n      0\n      0\n      0\n      1\n    \n    \n      11\n      360\n      11\n      -0.5\n      21\n      1.3\n      1936\n      -20.2\n      0.94\n      0.0\n      0.0\n      1\n      1\n      12\n      1\n      2017\n      0\n      0\n      0\n      1\n    \n    \n      12\n      449\n      12\n      1.7\n      23\n      1.4\n      2000\n      -17.2\n      1.11\n      0.0\n      0.0\n      1\n      1\n      12\n      1\n      2017\n      0\n      0\n      0\n      1\n    \n    \n      13\n      451\n      13\n      2.4\n      25\n      1.6\n      2000\n      -15.6\n      1.16\n      0.0\n      0.0\n      1\n      1\n      12\n      1\n      2017\n      0\n      0\n      0\n      1\n    \n    \n      14\n      447\n      14\n      3.0\n      26\n      2.0\n      2000\n      -14.6\n      1.01\n      0.0\n      0.0\n      1\n      1\n      12\n      1\n      2017\n      0\n      0\n      0\n      1\n    \n    \n      15\n      463\n      15\n      2.1\n      36\n      3.2\n      2000\n      -11.4\n      0.54\n      0.0\n      0.0\n      1\n      1\n      12\n      1\n      2017\n      0\n      0\n      0\n      1\n    \n    \n      16\n      484\n      16\n      1.2\n      54\n      4.2\n      793\n      -7.0\n      0.24\n      0.0\n      0.0\n      1\n      1\n      12\n      1\n      2017\n      0\n      0\n      0\n      1\n    \n    \n      17\n      555\n      17\n      0.8\n      58\n      1.6\n      2000\n      -6.5\n      0.08\n      0.0\n      0.0\n      1\n      1\n      12\n      1\n      2017\n      0\n      0\n      0\n      1\n    \n    \n      18\n      862\n      18\n      0.6\n      66\n      1.4\n      2000\n      -5.0\n      0.00\n      0.0\n      0.0\n      1\n      1\n      12\n      1\n      2017\n      0\n      0\n      0\n      1\n    \n    \n      19\n      600\n      19\n      0.0\n      77\n      1.7\n      2000\n      -3.5\n      0.00\n      0.0\n      0.0\n      1\n      1\n      12\n      1\n      2017\n      0\n      0\n      0\n      1\n    \n  \n\n\n\n\n\n# Look at correlation with target. Correlation explains how one or more variables are related to each other.\n# Here we checking how the target variable relates to other variables.\ncorr_matrix = df.corr()\ncorr_matrix[\"Rented Bike Count\"].sort_values(ascending=False)\n\nRented Bike Count            1.000000\nTemperature(∞C)              0.538558\nHour                         0.410257\nDew point temperature(∞C)    0.379788\nSeasons_Summer               0.296549\nSolar Radiation (MJ/m2)      0.261837\nyear                         0.215162\nFunctioning Day              0.203943\nVisibility (10m)             0.199280\nWind speed (m/s)             0.121108\nSeasons_Autumn               0.102753\nHoliday                      0.072338\nmonth                        0.070861\nday                          0.046849\nSeasons_Spring               0.022888\nRainfall(mm)                -0.123074\nSnowfall (cm)               -0.141804\nHumidity(%)                 -0.199780\nSeasons_Winter              -0.424925\nName: Rented Bike Count, dtype: float64\n\n\n\n#Separate training features from target\nX_train = df.drop(['Rented Bike Count', 'Humidity(%)', 'Seasons_Winter', 'Snowfall (cm)',\n                   'Rainfall(mm)', 'Holiday','month','day','Seasons_Spring'], axis=1)\n          \ny_train = df['Rented Bike Count']\n\n\n# Split train_data\nfrom sklearn.model_selection import train_test_split\n\ntrain_X, test_X, train_y, test_y = train_test_split(\n    X_train, y_train, test_size=0.3)\ntrain_X.shape\n\n(6132, 10)\n\n\nCreate a Model\n\nUsed Linear Regression to create the model.\n\n\n#import regression algorithm here\nfrom sklearn.linear_model import LinearRegression\n\n# create models\nlg_model = LinearRegression()\n\n#fitting the models\nlg_model.fit(X_train, y_train)\n\nLinearRegression()\n\n\n\n\nTrain the Model\n\n# import evaluation metrics\nfrom sklearn import metrics\n\n# evaluate the model\nlg_y_pred = lg_model.predict(test_X)\n\n# print the coefficients\nprint(lg_model.intercept_)\nprint(lg_model.coef_)\n\n-37427.781096961895\n[ 2.64280800e+01  5.71179303e+01  1.47637751e+01  4.79006794e-02\n -2.66713058e+01 -8.01931235e+01  9.37059471e+02  1.79459806e+01\n  1.82507218e+02 -4.70284541e+01]\n\n\n\n# pair the feature names with the coefficients\nlist(zip(X_train, lg_model.coef_))\n\n[('Hour', 26.4280800075682),\n ('Temperature(∞C)', 57.11793034670109),\n ('Wind speed (m/s)', 14.763775070526737),\n ('Visibility (10m)', 0.0479006793964835),\n ('Dew point temperature(∞C)', -26.67130584610349),\n ('Solar Radiation (MJ/m2)', -80.19312354619825),\n ('Functioning Day', 937.0594705456832),\n ('year', 17.945980589708437),\n ('Seasons_Autumn', 182.50721754158653),\n ('Seasons_Summer', -47.02845406960871)]\n\n\n\nEvaluation\n\n# Get Mean Absolute Error, Root Mean Squared Error\nprint('Mean Absolute Error:', metrics.mean_absolute_error(test_y, lg_y_pred))\nprint('Root Mean Squared Error:', np.sqrt(metrics.mean_squared_error(test_y, lg_y_pred)))\n\nMean Absolute Error: 333.6620242647687\nRoot Mean Squared Error: 442.28942454735244\n\n\nItems with a higher coeffcient have better chances of bikes being hired\n\n#Calculating coefficients\nfrom pandas import Series, DataFrame\n\ncoeff = DataFrame(X_train.columns)\ncoeff['Coefficient Estimate']= Series(lg_model.coef_) \ncoeff\n\n\n\n\n\n  \n    \n      \n      0\n      Coefficient Estimate\n    \n  \n  \n    \n      0\n      Hour\n      26.428080\n    \n    \n      1\n      Temperature(∞C)\n      57.117930\n    \n    \n      2\n      Wind speed (m/s)\n      14.763775\n    \n    \n      3\n      Visibility (10m)\n      0.047901\n    \n    \n      4\n      Dew point temperature(∞C)\n      -26.671306\n    \n    \n      5\n      Solar Radiation (MJ/m2)\n      -80.193124\n    \n    \n      6\n      Functioning Day\n      937.059471\n    \n    \n      7\n      year\n      17.945981\n    \n    \n      8\n      Seasons_Autumn\n      182.507218\n    \n    \n      9\n      Seasons_Summer\n      -47.028454\n    \n  \n\n\n\n\n\n\nMODEL EVALUATION\n\n#Calculating r-square\nlg_model.score(test_X, test_y)\n\n0.5139926793868411\n\n\n\n\nMaking Predictions\n\ny_pred = lg_model.predict(test_X)\n\n\ndf = pd.DataFrame({'Actual': test_y, 'Predicted': y_pred})\ndf.head(10)\n\n\n\n\n\n  \n    \n      \n      Actual\n      Predicted\n    \n  \n  \n    \n      3771\n      249\n      432.883930\n    \n    \n      2680\n      752\n      856.066439\n    \n    \n      4280\n      2194\n      796.015953\n    \n    \n      1409\n      178\n      591.771773\n    \n    \n      340\n      69\n      -165.616933\n    \n    \n      8140\n      107\n      376.548148\n    \n    \n      4900\n      375\n      858.975057\n    \n    \n      1352\n      322\n      -198.832826\n    \n    \n      6117\n      1337\n      1271.321273\n    \n    \n      299\n      251\n      127.903183"
  },
  {
    "objectID": "posts/2021-06-01-of-pipelines-cross-validation-and-hyperparameter-tuning-a-tutorial-using-scikit-learn-part-1.html",
    "href": "posts/2021-06-01-of-pipelines-cross-validation-and-hyperparameter-tuning-a-tutorial-using-scikit-learn-part-1.html",
    "title": "Of Pipelines, Cross Validation and Hyperparameter Tuning - A tutorial using Scikit-Learn Part 1",
    "section": "",
    "text": "In this episode, I’ll be demonstrating how powerful some 3 Sci-Kit-Learn features are and how we can use these features to prepare data, to choose models and to fine-tune the model without breaking any sweat because of the simplicity and automation.\nThe features are: - Transformation Pipelines - Cross Validation - And last but not least, Hyperparameter Tuning with Grid Search and Randomized Search\nWe will discover how these features can help us and why they are really worth putting in your Data science tool-kit.\nWe wil be using the Titanic dataset from Kaggle Competitions (Hope this episode won’t be a disaster too like the Titanic :)\nBefore we begin, if you are using a backward version of Sci-Kit-Learn you may have problems in importing some packages. In this tutorial, I am using version ‘0.21.3’.\nYou can use the following piece of code to see the version\n\nimport sklearn\nsklearn.__version__\n\n'0.21.3'\n\n\nLet’s import the common imports\n\nimport numpy as np\nimport pandas as pd\nnp.random.seed(42)  # To get a stable output across all runs\n\nWith the Titanic dataset, we have to create a model that predicts which passengers survived the Titanic shipwreck. We have to predict what sort of people were likely survive using the Passenger information e.g name, gender, passenger class, etc….. So, now let’s load the data…\n\ntrain_data = pd.read_csv('train.csv')\ntest_data = pd.read_csv('test.csv')\n\nThe data has already been split into Training and Testing data\nSince this is a Kaggle Competition dataset, there are no labels in the Test data (with the attribute name ‘Survived’). We will just compile our predictions into a csv file (in respect of Kaggles’ formating) , upload the predictions (as a csv file) to Kaggle and see our final score.\n\ntrain_data.head()\n\n\n\n\n\n  \n    \n      \n      PassengerId\n      Survived\n      Pclass\n      Name\n      Sex\n      Age\n      SibSp\n      Parch\n      Ticket\n      Fare\n      Cabin\n      Embarked\n    \n  \n  \n    \n      0\n      1\n      0\n      3\n      Braund, Mr. Owen Harris\n      male\n      22.0\n      1\n      0\n      A/5 21171\n      7.2500\n      NaN\n      S\n    \n    \n      1\n      2\n      1\n      1\n      Cumings, Mrs. John Bradley (Florence Briggs Th...\n      female\n      38.0\n      1\n      0\n      PC 17599\n      71.2833\n      C85\n      C\n    \n    \n      2\n      3\n      1\n      3\n      Heikkinen, Miss. Laina\n      female\n      26.0\n      0\n      0\n      STON/O2. 3101282\n      7.9250\n      NaN\n      S\n    \n    \n      3\n      4\n      1\n      1\n      Futrelle, Mrs. Jacques Heath (Lily May Peel)\n      female\n      35.0\n      1\n      0\n      113803\n      53.1000\n      C123\n      S\n    \n    \n      4\n      5\n      0\n      3\n      Allen, Mr. William Henry\n      male\n      35.0\n      0\n      0\n      373450\n      8.0500\n      NaN\n      S\n    \n  \n\n\n\n\nSome insight about the data\nThe attributes have the following meaning: * Survived: that’s the target, 0 means the passenger did not survive, while 1 means he/she survived. * Pclass: passenger class. * Name, Sex, Age: self-explanatory * SibSp: how many siblings & spouses of the passenger aboard the Titanic. * Parch: how many children & parents of the passenger aboard the Titanic. * Ticket: ticket id * Fare: price paid (in pounds) * Cabin: passenger’s cabin number * Embarked: where the passenger embarked the Titanic\nLet’s check for any missing data\n\ntrain_data.info()\n\n<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 891 entries, 0 to 890\nData columns (total 12 columns):\nPassengerId    891 non-null int64\nSurvived       891 non-null int64\nPclass         891 non-null int64\nName           891 non-null object\nSex            891 non-null object\nAge            714 non-null float64\nSibSp          891 non-null int64\nParch          891 non-null int64\nTicket         891 non-null object\nFare           891 non-null float64\nCabin          204 non-null object\nEmbarked       889 non-null object\ndtypes: float64(2), int64(5), object(5)\nmemory usage: 83.7+ KB\n\n\nAs we can see, the attributes: Age, Cabin and Embarked have some null values and Cabin has the most null values.\nWe will not be using Cabin in this tutorial and we will also not use the Name and Ticket attributes.\nWe can easily use the Age and the Embarked attributes so we will transform them later.\nLet take a sneak peak at the numerical attributes\n\ntrain_data.describe()\n\n\n\n\n\n  \n    \n      \n      PassengerId\n      Survived\n      Pclass\n      Age\n      SibSp\n      Parch\n      Fare\n    \n  \n  \n    \n      count\n      891.000000\n      891.000000\n      891.000000\n      714.000000\n      891.000000\n      891.000000\n      891.000000\n    \n    \n      mean\n      446.000000\n      0.383838\n      2.308642\n      29.699118\n      0.523008\n      0.381594\n      32.204208\n    \n    \n      std\n      257.353842\n      0.486592\n      0.836071\n      14.526497\n      1.102743\n      0.806057\n      49.693429\n    \n    \n      min\n      1.000000\n      0.000000\n      1.000000\n      0.420000\n      0.000000\n      0.000000\n      0.000000\n    \n    \n      25%\n      223.500000\n      0.000000\n      2.000000\n      20.125000\n      0.000000\n      0.000000\n      7.910400\n    \n    \n      50%\n      446.000000\n      0.000000\n      3.000000\n      28.000000\n      0.000000\n      0.000000\n      14.454200\n    \n    \n      75%\n      668.500000\n      1.000000\n      3.000000\n      38.000000\n      1.000000\n      0.000000\n      31.000000\n    \n    \n      max\n      891.000000\n      1.000000\n      3.000000\n      80.000000\n      8.000000\n      6.000000\n      512.329200\n    \n  \n\n\n\n\nLet also take a sneak peak at the categorial attributes\n\ntrain_data['Survived'].value_counts()\n\n0    549\n1    342\nName: Survived, dtype: int64\n\n\n\ntrain_data['Pclass'].value_counts()\n\n3    491\n1    216\n2    184\nName: Pclass, dtype: int64\n\n\n\ntrain_data['Sex'].value_counts()\n\nmale      577\nfemale    314\nName: Sex, dtype: int64\n\n\n\ntrain_data['Embarked'].value_counts()\n\nS    644\nC    168\nQ     77\nName: Embarked, dtype: int64\n\n\nThe Embarked attribute tells us where the passenger embarked: C=Cherbourg, Q=Queenstown, S=Southampton.\n\ntrain_data_copy = train_data.copy()\n# Use the \"copy()\" function call to avoid changing the original data (which in this case is \"train_data\")\n# We have to poke around with transformations using the copy of train_data and see what we can archieve\n\ntrain_data_copy.head()\n\n\n\n\n\n  \n    \n      \n      PassengerId\n      Survived\n      Pclass\n      Name\n      Sex\n      Age\n      SibSp\n      Parch\n      Ticket\n      Fare\n      Cabin\n      Embarked\n    \n  \n  \n    \n      0\n      1\n      0\n      3\n      Braund, Mr. Owen Harris\n      male\n      22.0\n      1\n      0\n      A/5 21171\n      7.2500\n      NaN\n      S\n    \n    \n      1\n      2\n      1\n      1\n      Cumings, Mrs. John Bradley (Florence Briggs Th...\n      female\n      38.0\n      1\n      0\n      PC 17599\n      71.2833\n      C85\n      C\n    \n    \n      2\n      3\n      1\n      3\n      Heikkinen, Miss. Laina\n      female\n      26.0\n      0\n      0\n      STON/O2. 3101282\n      7.9250\n      NaN\n      S\n    \n    \n      3\n      4\n      1\n      1\n      Futrelle, Mrs. Jacques Heath (Lily May Peel)\n      female\n      35.0\n      1\n      0\n      113803\n      53.1000\n      C123\n      S\n    \n    \n      4\n      5\n      0\n      3\n      Allen, Mr. William Henry\n      male\n      35.0\n      0\n      0\n      373450\n      8.0500\n      NaN\n      S\n    \n  \n\n\n\n\nLet’s start using Transformations.\nUsing the “so-called” regular way we would need to deal with the NaN values first\n\nfrom sklearn.base import BaseEstimator, TransformerMixin\n\n# Inspired from stackoverflow.com/questions/25239958\nclass MostFrequentImputer(BaseEstimator, TransformerMixin):\n    def fit(self, X, y=None):\n        self.most_frequent_ = pd.Series([X[c].value_counts().index[0] for c in X],\n                                        index=X.columns)\n        return self\n    def transform(self, X, y=None):\n        return X.fillna(self.most_frequent_)\n\nThe class transforms both numerical and categorial (object) data. It replaces the NaN values in the data with the most frequent value in the Data Attribute. For example, If we had NaN values in the Sex attribute, we would replace the NaN values with the most frequent value in the Sex attribute (which in this case is Male).\nWe will use our Transformer Class (MostFrequentImputer) on categorial attributes. We will use Simple Imputer for numerical attributes. Let’s start with numerical attributes\n\nfrom sklearn.impute import SimpleImputer\nimpute = SimpleImputer(strategy='median')\n# Setting strategy to median indicates that we want to convert the NaN values to the median of the numerical attribute\n\n\nimpute.fit(train_data_copy[[\"Age\"]])\ntrain_data_copy[[\"Age\"]] = impute.transform(train_data_copy[[\"Age\"]])\ntrain_data_copy.info()\n\n<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 891 entries, 0 to 890\nData columns (total 12 columns):\nPassengerId    891 non-null int64\nSurvived       891 non-null int64\nPclass         891 non-null int64\nName           891 non-null object\nSex            891 non-null object\nAge            891 non-null float64\nSibSp          891 non-null int64\nParch          891 non-null int64\nTicket         891 non-null object\nFare           891 non-null float64\nCabin          204 non-null object\nEmbarked       889 non-null object\ndtypes: float64(2), int64(5), object(5)\nmemory usage: 83.7+ KB\n\n\nAs we can see, the values from our imputed attribute (Age) are now 891, the NaN values in the attribute have been wiped off from existance.\nNow, let’s impute the categorial attributes with our Transform Class\n\ncat_impute = MostFrequentImputer()\ncat_impute.fit(train_data_copy[[\"Embarked\"]])\ntrain_data_copy[[\"Embarked\"]] = cat_impute.transform(train_data_copy[[\"Embarked\"]])\ntrain_data_copy.info()\n\n<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 891 entries, 0 to 890\nData columns (total 12 columns):\nPassengerId    891 non-null int64\nSurvived       891 non-null int64\nPclass         891 non-null int64\nName           891 non-null object\nSex            891 non-null object\nAge            891 non-null float64\nSibSp          891 non-null int64\nParch          891 non-null int64\nTicket         891 non-null object\nFare           891 non-null float64\nCabin          204 non-null object\nEmbarked       891 non-null object\ndtypes: float64(2), int64(5), object(5)\nmemory usage: 83.7+ KB\n\n\nWell, what do you know?. Now, only the Cabin attribute is left (because we didn’t include it in our transformation). We are not going to use it along with Name and Ticket, so let’s just drop these attributes\n\ntrain_data_copy.drop(['Name', 'Cabin', 'Ticket'], axis=1, inplace=True)\n\nPhew!!, we have finally got rid of the NaN values so what’s next. We want to scale the Numerical Attributes (some algorithms work better with scaled data). For categories we have to convert the categories from strings to usable numbers.\n\nfrom sklearn.preprocessing import StandardScaler\n\nnum_attribs = [\"Age\", \"SibSp\", \"Parch\", \"Fare\", \"Pclass\"]\n# Pclass is a category but it's already in numerical so scaling it would be a good idea than labeling it in this case\nscaler = StandardScaler()\ntrain_data_copy[num_attribs] = scaler.fit_transform(train_data_copy[num_attribs])\ntrain_data_copy.head()\n\n\n\n\n\n  \n    \n      \n      PassengerId\n      Survived\n      Pclass\n      Sex\n      Age\n      SibSp\n      Parch\n      Fare\n      Embarked\n    \n  \n  \n    \n      0\n      1\n      0\n      0.827377\n      male\n      -0.565736\n      0.432793\n      -0.473674\n      -0.502445\n      S\n    \n    \n      1\n      2\n      1\n      -1.566107\n      female\n      0.663861\n      0.432793\n      -0.473674\n      0.786845\n      C\n    \n    \n      2\n      3\n      1\n      0.827377\n      female\n      -0.258337\n      -0.474545\n      -0.473674\n      -0.488854\n      S\n    \n    \n      3\n      4\n      1\n      -1.566107\n      female\n      0.433312\n      0.432793\n      -0.473674\n      0.420730\n      S\n    \n    \n      4\n      5\n      0\n      0.827377\n      male\n      0.433312\n      -0.474545\n      -0.473674\n      -0.486337\n      S\n    \n  \n\n\n\n\nThe selected attributes have been scaled, Now our models can predict much better, Now what’s left is tagging numerical labels to our Categorial attributes\n\nfrom sklearn.preprocessing import LabelEncoder\n\nlabeler = LabelEncoder()\nfor cats in [\"Sex\", \"Embarked\"]: # cats is just short for categories, not actual cats ;)\n    train_data_copy[cats] = labeler.fit_transform(train_data_copy[cats])\n\n\ntrain_data_copy.head()\n\n\n\n\n\n  \n    \n      \n      PassengerId\n      Survived\n      Pclass\n      Sex\n      Age\n      SibSp\n      Parch\n      Fare\n      Embarked\n    \n  \n  \n    \n      0\n      1\n      0\n      0.827377\n      1\n      -0.565736\n      0.432793\n      -0.473674\n      -0.502445\n      2\n    \n    \n      1\n      2\n      1\n      -1.566107\n      0\n      0.663861\n      0.432793\n      -0.473674\n      0.786845\n      0\n    \n    \n      2\n      3\n      1\n      0.827377\n      0\n      -0.258337\n      -0.474545\n      -0.473674\n      -0.488854\n      2\n    \n    \n      3\n      4\n      1\n      -1.566107\n      0\n      0.433312\n      0.432793\n      -0.473674\n      0.420730\n      2\n    \n    \n      4\n      5\n      0\n      0.827377\n      1\n      0.433312\n      -0.474545\n      -0.473674\n      -0.486337\n      2\n    \n  \n\n\n\n\nFinally we have finished preparing our data. What a lot of tiring work that was, Good news, you don’t have to tire yourself with this tedious technique.\nPipelines coming to the rescue…\nWhy should I care about Pipelines ????\nAs we have seen (and coded as well), we have many transformations that need to be executed in the right order, for example: We cannot scale data whilst we still have NaN values in the data (You end up getting many frustrating errors).\nPipelines take all the transformations and bind them together inorder to prepare/transform the data in the right order. All we should do is specify the order of executions by putting the transformation packages in the right order.\nSo how do go about setting up these so-called Pipelines, let’s dive right into the Pipeline…\n\nfrom sklearn.pipeline import Pipeline # how ironic, importing Pipeline from pipeline ;)\nfrom sklearn.preprocessing import OneHotEncoder\n# In this one we will use OneHotEncoder instead of LabelEncoder as OneHotEncoder tends to do a better job than LabelEncoder\n\n# We will make 2 Pipelines, one for Numerical Attributes and the other for Categorial Attributes\n\nnum_pipeline = Pipeline([\n    ('imputer', SimpleImputer(strategy='median')),\n    # The name \"imputer\" can be set to any string e.g \"impute\" or \"whatever\"\n    ('scaler', StandardScaler())\n])\n\n# I had already imported these packages before so there's no need for repetition\n\ncat_pipeline = Pipeline([\n    ('imputer', MostFrequentImputer()), # from the class we had made earlier\n    ('encoding', OneHotEncoder(sparse=False))\n    # Setting sparse to False prevents the OneHotEncoder from returning a Scipy sparse matrix\n])\n\nThere is even a much faster way of setting up a Pipeline. Sometimes we may have no need of naming each step taken in preprocessing. Using “make_pipeline”, we can save time although we would sacrifice some features a general Pipeline offers. You can use the following code below to set up the faster-to-setup Pipeline (although we are not going to use it, we will just stick to the general pipeline).\n\nfrom sklearn.pipeline import make_pipeline\n\nnum_small_pipeline = make_pipeline(SimpleImputer(strategy='median'), StandardScaler())\ncat_small_pipeline = make_pipeline(MostFrequentImputer(), OneHotEncoder(sparse=False))\n\n# It's easy as that\n\nMore about OneHotEncoder\nA OneHotEncoder creates binary columns (attributes) from the category\nWhat does that mean??\nFor example: The Embarked category. The attributes in the category Embarked are: S; C; and Q.\nWe get 3 columns for this category (because it has 3 attributes stated earlier)\nIf the passenger embarked from S, the S column will have 1 (making it hot and also representing True) and the other columns (C and Q) will have 0 (making them cold and also representing False)\nIf the passenger embarked from C, the C column will have 1 (making it hot and also representing True) and the other columns (S and Q) will have 0 (making them cold and also representing False)\n…..\nSo we will have extra columns..\n\n# So we must seperate the train_data into 'Data' and 'Target'\n# Only the 'Data' needs to be transformed with our Pipeline\n\ntrain_set = train_data.drop('Survived', axis=1)\ny_train = train_data['Survived']\n\nNow that we have made our Pipelines, we will combine them with ColumnTransformer\n\nfrom sklearn.compose import ColumnTransformer\n\nfull_pipeline = ColumnTransformer([\n    ('num_pipeline', num_pipeline, [\"Age\", \"SibSp\", \"Parch\", \"Fare\"]),\n    # We just choose the numerical attributes we want\n    ('cat_pipeline', cat_pipeline, [\"Pclass\", \"Sex\", \"Embarked\"])\n    # Here, we just choose the categorial attributes we want and here Pclass works better as a category than a number\n])\n\nX_train = full_pipeline.fit_transform(train_set)\n\n# The transformation returns our data as a numpy array\n# Only the attributes of numbers and categories that we have specified in the full_pipeline (which are just 7) will\n# be present in the data so there is really no need of dropping attributes like we did before in our \"Regular\n# Transformation\" detour because they have been automatically dropped.\n\nX_train[:5] # Our numpy array's head, Similar with Pandas .head() function call :)\n# Voila...\n\narray([[-0.56573646,  0.43279337, -0.47367361, -0.50244517,  0.        ,\n         0.        ,  1.        ,  0.        ,  1.        ,  0.        ,\n         0.        ,  1.        ],\n       [ 0.66386103,  0.43279337, -0.47367361,  0.78684529,  1.        ,\n         0.        ,  0.        ,  1.        ,  0.        ,  1.        ,\n         0.        ,  0.        ],\n       [-0.25833709, -0.4745452 , -0.47367361, -0.48885426,  0.        ,\n         0.        ,  1.        ,  1.        ,  0.        ,  0.        ,\n         0.        ,  1.        ],\n       [ 0.4333115 ,  0.43279337, -0.47367361,  0.42073024,  1.        ,\n         0.        ,  0.        ,  1.        ,  0.        ,  0.        ,\n         0.        ,  1.        ],\n       [ 0.4333115 , -0.4745452 , -0.47367361, -0.48633742,  0.        ,\n         0.        ,  1.        ,  0.        ,  1.        ,  0.        ,\n         0.        ,  1.        ]])\n\n\n\n# As you saw, Pipelines are easily managable than the whole transformation process we had earlier and Pipelines also\n# take less time to set up\n\n# Let's see how our data looks like as a DataFrame\n\n# Pclass: 1, 2, 3\n# Sex: Female, Male\n# Embarked: S,C, Q\n\ncolumns = [\"Age\", \"SibSp\", \"Parch\", \"Fare\", 'Pclass-1', 'Pclass-2', 'Pclass-3', \n           'Sex-Female', 'Sex-Male', 'Embarked-C', 'Embarked-Q', 'Embarked-S']\n\npd.DataFrame(X_train, columns=columns).head()\n\n\n\n\n\n  \n    \n      \n      Age\n      SibSp\n      Parch\n      Fare\n      Pclass-1\n      Pclass-2\n      Pclass-3\n      Sex-Female\n      Sex-Male\n      Embarked-C\n      Embarked-Q\n      Embarked-S\n    \n  \n  \n    \n      0\n      -0.565736\n      0.432793\n      -0.473674\n      -0.502445\n      0.0\n      0.0\n      1.0\n      0.0\n      1.0\n      0.0\n      0.0\n      1.0\n    \n    \n      1\n      0.663861\n      0.432793\n      -0.473674\n      0.786845\n      1.0\n      0.0\n      0.0\n      1.0\n      0.0\n      1.0\n      0.0\n      0.0\n    \n    \n      2\n      -0.258337\n      -0.474545\n      -0.473674\n      -0.488854\n      0.0\n      0.0\n      1.0\n      1.0\n      0.0\n      0.0\n      0.0\n      1.0\n    \n    \n      3\n      0.433312\n      0.432793\n      -0.473674\n      0.420730\n      1.0\n      0.0\n      0.0\n      1.0\n      0.0\n      0.0\n      0.0\n      1.0\n    \n    \n      4\n      0.433312\n      -0.474545\n      -0.473674\n      -0.486337\n      0.0\n      0.0\n      1.0\n      0.0\n      1.0\n      0.0\n      0.0\n      1.0\n    \n  \n\n\n\n\n\n# We will start by using the Stochastic Gradient Descent Classifier\nfrom sklearn.linear_model import SGDClassifier\n\nsgd_clf = SGDClassifier(random_state=42)\nsgd_clf.fit(X_train, y_train)\n\nSGDClassifier(alpha=0.0001, average=False, class_weight=None,\n              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,\n              l1_ratio=0.15, learning_rate='optimal', loss='hinge',\n              max_iter=1000, n_iter_no_change=5, n_jobs=None, penalty='l2',\n              power_t=0.5, random_state=42, shuffle=True, tol=0.001,\n              validation_fraction=0.1, verbose=0, warm_start=False)\n\n\n\nX_test = full_pipeline.transform(test_data)\npredictions = sgd_clf.predict(X_test)\n\n\n#We convert our predictions to a csv file\npredictions_df = pd.DataFrame(predictions)\npredictions_df.to_csv('predictions.csv')\n\n# Then you can submit the csv file\n\n\nBut, Wait a minute!!……\nHow can we get an idea of how our model performs, What if it turns out be very aweful. Luckily we don’t have to rely on guess-work.\nLet’s try predicting the training data\n\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.metrics import accuracy_score\n\ndt_clf = DecisionTreeClassifier().fit(X_train, y_train)\ndt_pred = dt_clf.predict(X_train)\naccuracy_score(y_train, dt_pred)\n\n0.9797979797979798\n\n\nBefore you smile in satisfaction, those numbers are biased. The model is simply overfitting\nPredicting the train data mostly results in Models overfitting the data (as we have seen), So how can we get a reliable score without worring about overfitting…\nWe can can use Cross Validation\n\ndef scores(score):\n    print(score)\n    print(f'\\nMean: {score.mean()}')\n    print(f'\\nStandard Deviation: {score.std()}')\n    print(f'\\nMaximum: {score.min()}')\n    print(f'Minimun: {score.max()}')\n\n\nfrom sklearn.model_selection import cross_val_score\n\ncvs = cross_val_score(sgd_clf, X_train, y_train, scoring='accuracy', cv=10)\n\nscores(cvs)\n\n[0.76666667 0.72222222 0.7752809  0.86516854 0.7752809  0.73033708\n 0.75280899 0.78651685 0.80898876 0.78409091]\n\nMean: 0.7767361820451708\n\nStandard Deviation: 0.03848773108423685\n\nMaximum: 0.7222222222222222\nMinimun: 0.8651685393258427\n\n\nSo what just happened, you may be wondering how we got the score\nThe cross_val_score randomly splits the training set into 10 distinct subsets called folds, then it trains and evaluates the model 10 times, picking a different fold for evaluation every time and training on the other 9 folds. The result is an array containing the 10 evaluation scores.\nThe “cv” parameter determines how many folds we want our cross_val_score function to have (which in this case is 10).\nNB. The cv should be greater than 1. cv > 1\nThe scoring parameter determines what kind of score we want to get, setting it to: - “accuracy” - gives us the accuracy score - “precision” - gives us the precision score - “recall” - gives us the recall score and - “f1” - gives us the f1 score…\ncross_val_score was adapted from StratifiedKFold, this is how it looks when using StratifiedKFold.\n\nfrom sklearn.model_selection import StratifiedKFold\nfrom sklearn.base import clone\n\nskfolds = StratifiedKFold(n_splits=10, random_state=42)\n\nfor train_index, test_index in skfolds.split(X_train, y_train):\n    clone_clf = clone(sgd_clf)\n    X_train_folds = X_train[train_index]\n    y_train_folds = (y_train[train_index])\n    X_test_fold = X_train[test_index]\n    y_test_fold = (y_train[test_index])\n\n    clone_clf.fit(X_train_folds, y_train_folds)\n    y_pred = clone_clf.predict(X_test_fold)\n    n_correct = sum(y_pred == y_test_fold)\n    print(n_correct / len(y_pred))\n\n0.7666666666666667\n0.7222222222222222\n0.7752808988764045\n0.8651685393258427\n0.7752808988764045\n0.7303370786516854\n0.7528089887640449\n0.7865168539325843\n0.8089887640449438\n0.7840909090909091\n\n\nIf we compare the results, they are pretty much the same, but using StratifiedKFold is a lot of work as compared to using cross_val_score.\nCross validation can be used to see how our model is able generalize data. If you do not have enough data to populate both the train and test sets, you can definitely use Cross Validation.\n\n# And if you would like to get some predictions so that you can compare them with the y_train set you can simply:\n\nfrom sklearn.model_selection import cross_val_predict\n\npredictions = cross_val_predict(sgd_clf, X_train, y_train, cv=10)\naccuracy_score(y_train, predictions)\n\n0.77665544332211\n\n\n\n# If you would like to get some Decision Functions you can simply:\n\npredictions = cross_val_predict(sgd_clf, X_train, y_train, cv=10, method='decision_function')\npredictions[:5]\n\narray([-2.80887674,  2.61659364, -0.13381379,  1.82152503, -2.71375558])\n\n\nIf you are using a model that supports “Prediction Probabilities” you can simple set the method hyperparameter to “predict_proba”\n\n# Let's try another model\nfrom sklearn.neighbors import KNeighborsClassifier\n\nknn_clf = KNeighborsClassifier(n_neighbors=10).fit(X_train, y_train)\ncross_val_score(knn_clf, X_train, y_train, scoring='accuracy', cv=10).mean()\n\n0.8069611848825332\n\n\nAs it turns out, the KNeighborsClassifier did a better job than the SGDClassifier, so it’s promising\nLet just try one last model\n\n# The other model\nfrom sklearn.ensemble import RandomForestClassifier\n\nrnd_clf = RandomForestClassifier(n_estimators=10, random_state=42).fit(X_train, y_train)\ncross_val_score(rnd_clf, X_train, y_train, scoring='accuracy', cv=10).mean()\n\n0.8115690614005221\n\n\nThe Random Forest Classifier did better than the other two but how can we optimise it, whilst also preventing overfitting\nWe can tweak the hyperparameters and see which ones get us somewhere…\n\n# A very simple way of tweaking the n_neighbors parameter in KNeighborsClassifier is this way:\n\nfor number in range(1, 12):\n    knn_looped = KNeighborsClassifier(n_neighbors=number).fit(X_train, y_train)\n    score = cross_val_score(knn_looped, X_train, y_train, scoring='accuracy', cv=10).mean()\n    print(number, score)\n\n1 0.7554752581999773\n2 0.7958001361933945\n3 0.7980603790716151\n4 0.8002698331630915\n5 0.80697366927704\n6 0.809170355237771\n7 0.8058631256384066\n8 0.7991212688684599\n9 0.7946646237657474\n10 0.8069611848825332\n11 0.7980101577573487\n\n\nSo, as we can see, putting the n_neighbors as 6 tends to give us a higher accuracy score\nBut what can we do if we a lot of hyperparameters in the model that we need to test out and we need a much organised way of doing it.\nWe can use GridSearchCV\n\nfrom sklearn.model_selection import GridSearchCV\n\nparams = [\n    {'n_estimators': [100, 200, 300], 'max_features': [8, 9, 10, 11]}\n]\n# These are the parameters that we put in Random Forest model and test each and every combination\n# So we have 12 combinations...\n\nrnd_clf = RandomForestClassifier(random_state=42)\ngrid_rnd_clf = GridSearchCV(rnd_clf, params, cv=3, return_train_score=True, scoring='accuracy', verbose=2)\n\n# The grid search takes the algorithm, parameters, folds/cv (number of trainings)\n\n# The grid search undergoes cross validation, similar with the cross_val_score that we talked about earlier, it goes on...\n# ... cross validating each and every combination we assigned it to\n\n# So with the number of folds as 3, we can conclude that we will have 36 runs\n# {(3 n_estimators) * (4 max_features) * (3 cv)} => 3 * 4 * 3 => 36\n\n# 'verbose' gives us details of the runs, such as the time taken, etc, increasing the value increases the details...\n\ngrid_rnd_clf.fit(X_train, y_train)\n\n# Fitting our Grid Search Model make take some time, maybe a few seconds\n\nFitting 3 folds for each of 12 candidates, totalling 36 fits\n[CV] max_features=8, n_estimators=100 ................................\n\n\n[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n\n\n[CV] ................. max_features=8, n_estimators=100, total=   0.2s\n[CV] max_features=8, n_estimators=100 ................................\n\n\n[Parallel(n_jobs=1)]: Done   1 out of   1 | elapsed:    0.1s remaining:    0.0s\n\n\n[CV] ................. max_features=8, n_estimators=100, total=   0.2s\n[CV] max_features=8, n_estimators=100 ................................\n[CV] ................. max_features=8, n_estimators=100, total=   0.2s\n[CV] max_features=8, n_estimators=200 ................................\n[CV] ................. max_features=8, n_estimators=200, total=   0.4s\n[CV] max_features=8, n_estimators=200 ................................\n[CV] ................. max_features=8, n_estimators=200, total=   0.4s\n[CV] max_features=8, n_estimators=200 ................................\n[CV] ................. max_features=8, n_estimators=200, total=   0.5s\n[CV] max_features=8, n_estimators=300 ................................\n[CV] ................. max_features=8, n_estimators=300, total=   0.7s\n[CV] max_features=8, n_estimators=300 ................................\n[CV] ................. max_features=8, n_estimators=300, total=   0.7s\n[CV] max_features=8, n_estimators=300 ................................\n[CV] ................. max_features=8, n_estimators=300, total=   0.7s\n[CV] max_features=9, n_estimators=100 ................................\n[CV] ................. max_features=9, n_estimators=100, total=   0.2s\n[CV] max_features=9, n_estimators=100 ................................\n[CV] ................. max_features=9, n_estimators=100, total=   0.2s\n[CV] max_features=9, n_estimators=100 ................................\n[CV] ................. max_features=9, n_estimators=100, total=   0.2s\n[CV] max_features=9, n_estimators=200 ................................\n[CV] ................. max_features=9, n_estimators=200, total=   0.5s\n[CV] max_features=9, n_estimators=200 ................................\n[CV] ................. max_features=9, n_estimators=200, total=   0.6s\n[CV] max_features=9, n_estimators=200 ................................\n[CV] ................. max_features=9, n_estimators=200, total=   0.5s\n[CV] max_features=9, n_estimators=300 ................................\n[CV] ................. max_features=9, n_estimators=300, total=   0.7s\n[CV] max_features=9, n_estimators=300 ................................\n[CV] ................. max_features=9, n_estimators=300, total=   0.7s\n[CV] max_features=9, n_estimators=300 ................................\n[CV] ................. max_features=9, n_estimators=300, total=   0.7s\n[CV] max_features=10, n_estimators=100 ...............................\n[CV] ................ max_features=10, n_estimators=100, total=   0.3s\n[CV] max_features=10, n_estimators=100 ...............................\n[CV] ................ max_features=10, n_estimators=100, total=   0.2s\n[CV] max_features=10, n_estimators=100 ...............................\n[CV] ................ max_features=10, n_estimators=100, total=   0.3s\n[CV] max_features=10, n_estimators=200 ...............................\n[CV] ................ max_features=10, n_estimators=200, total=   0.5s\n[CV] max_features=10, n_estimators=200 ...............................\n[CV] ................ max_features=10, n_estimators=200, total=   0.6s\n[CV] max_features=10, n_estimators=200 ...............................\n[CV] ................ max_features=10, n_estimators=200, total=   0.5s\n[CV] max_features=10, n_estimators=300 ...............................\n[CV] ................ max_features=10, n_estimators=300, total=   0.9s\n[CV] max_features=10, n_estimators=300 ...............................\n[CV] ................ max_features=10, n_estimators=300, total=   0.8s\n[CV] max_features=10, n_estimators=300 ...............................\n[CV] ................ max_features=10, n_estimators=300, total=   0.7s\n[CV] max_features=11, n_estimators=100 ...............................\n[CV] ................ max_features=11, n_estimators=100, total=   0.2s\n[CV] max_features=11, n_estimators=100 ...............................\n[CV] ................ max_features=11, n_estimators=100, total=   0.2s\n[CV] max_features=11, n_estimators=100 ...............................\n[CV] ................ max_features=11, n_estimators=100, total=   0.3s\n[CV] max_features=11, n_estimators=200 ...............................\n[CV] ................ max_features=11, n_estimators=200, total=   0.5s\n[CV] max_features=11, n_estimators=200 ...............................\n[CV] ................ max_features=11, n_estimators=200, total=   0.6s\n[CV] max_features=11, n_estimators=200 ...............................\n[CV] ................ max_features=11, n_estimators=200, total=   0.5s\n[CV] max_features=11, n_estimators=300 ...............................\n[CV] ................ max_features=11, n_estimators=300, total=   0.9s\n[CV] max_features=11, n_estimators=300 ...............................\n[CV] ................ max_features=11, n_estimators=300, total=   1.0s\n[CV] max_features=11, n_estimators=300 ...............................\n[CV] ................ max_features=11, n_estimators=300, total=   0.8s\n\n\n[Parallel(n_jobs=1)]: Done  36 out of  36 | elapsed:   20.3s finished\n\n\nGridSearchCV(cv=3, error_score='raise-deprecating',\n             estimator=RandomForestClassifier(bootstrap=True, class_weight=None,\n                                              criterion='gini', max_depth=None,\n                                              max_features='auto',\n                                              max_leaf_nodes=None,\n                                              min_impurity_decrease=0.0,\n                                              min_impurity_split=None,\n                                              min_samples_leaf=1,\n                                              min_samples_split=2,\n                                              min_weight_fraction_leaf=0.0,\n                                              n_estimators='warn', n_jobs=None,\n                                              oob_score=False, random_state=42,\n                                              verbose=0, warm_start=False),\n             iid='warn', n_jobs=None,\n             param_grid=[{'max_features': [8, 9, 10, 11],\n                          'n_estimators': [100, 200, 300]}],\n             pre_dispatch='2*n_jobs', refit=True, return_train_score=True,\n             scoring='accuracy', verbose=2)\n\n\n\ngrid_rnd_clf.best_score_\n\n0.8092031425364759\n\n\n\n# Let's see the best combinations/parameters\ngrid_rnd_clf.best_params_\n\n{'max_features': 10, 'n_estimators': 200}\n\n\n\n# Let's see the whole parameters and their scores\ndata = grid_rnd_clf.cv_results_\nfor a, b in zip(data['mean_test_score'], data['params']):\n    print(a, b)\n\n0.8024691358024691 {'max_features': 8, 'n_estimators': 100}\n0.8035914702581369 {'max_features': 8, 'n_estimators': 200}\n0.8013468013468014 {'max_features': 8, 'n_estimators': 300}\n0.8013468013468014 {'max_features': 9, 'n_estimators': 100}\n0.8047138047138047 {'max_features': 9, 'n_estimators': 200}\n0.8047138047138047 {'max_features': 9, 'n_estimators': 300}\n0.8058361391694725 {'max_features': 10, 'n_estimators': 100}\n0.8092031425364759 {'max_features': 10, 'n_estimators': 200}\n0.8069584736251403 {'max_features': 10, 'n_estimators': 300}\n0.8058361391694725 {'max_features': 11, 'n_estimators': 100}\n0.8024691358024691 {'max_features': 11, 'n_estimators': 200}\n0.8058361391694725 {'max_features': 11, 'n_estimators': 300}\n\n\nIt seems as if our best Grid Search model is worse than the regular Random Forest Classifier that we made the first time. This is because we have used a cv of 3 on the Grid Search Random Forest Classifier and a cv of 10 on the Regular Random Forest Classifier. Let’s cross_val_score our best model and see how it does with a cv of 10…\n\nrnd_clf = grid_rnd_clf.best_estimator_ # grid_rnd_clf.best_estimator_ is our model\ncross_val_score(rnd_clf, X_train, y_train, cv=10, scoring='accuracy').mean()\n\n0.8227681307456589\n\n\nAs it turns out, the Grid Search Random Forest Classifier is actually better than the Regular Random Forest Classifier\nAnd if you are curious:\nRandomForestClassifier(random_state=42, n_estimators=200, max_features=10)\nand\ngrid_rnd_clf.best_estimator_\nProduce very slightly different results…\n\nfrom sklearn.model_selection import RandomizedSearchCV\nfrom scipy.stats import randint\n\nparam_distribs = {'n_estimators': randint(low=100, high=200), 'max_features': randint(low=6, high=11)}\n\n\nrnd_clf2 = RandomForestClassifier(random_state=42)\nrnd_search = RandomizedSearchCV(rnd_clf2, param_distributions = param_distribs, n_iter=10, cv=3, scoring='accuracy',\n                               random_state=42, verbose=2)\nrnd_search.fit(X_train, y_train)\n\n# Too much randomness on this one, Ehh :)\n\nFitting 3 folds for each of 10 candidates, totalling 30 fits\n[CV] max_features=9, n_estimators=192 ................................\n\n\n[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n\n\n[CV] ................. max_features=9, n_estimators=192, total=   0.5s\n[CV] max_features=9, n_estimators=192 ................................\n\n\n[Parallel(n_jobs=1)]: Done   1 out of   1 | elapsed:    0.4s remaining:    0.0s\n\n\n[CV] ................. max_features=9, n_estimators=192, total=   0.5s\n[CV] max_features=9, n_estimators=192 ................................\n[CV] ................. max_features=9, n_estimators=192, total=   0.5s\n[CV] max_features=8, n_estimators=171 ................................\n[CV] ................. max_features=8, n_estimators=171, total=   0.4s\n[CV] max_features=8, n_estimators=171 ................................\n[CV] ................. max_features=8, n_estimators=171, total=   0.4s\n[CV] max_features=8, n_estimators=171 ................................\n[CV] ................. max_features=8, n_estimators=171, total=   0.4s\n[CV] max_features=10, n_estimators=120 ...............................\n[CV] ................ max_features=10, n_estimators=120, total=   0.3s\n[CV] max_features=10, n_estimators=120 ...............................\n[CV] ................ max_features=10, n_estimators=120, total=   0.3s\n[CV] max_features=10, n_estimators=120 ...............................\n[CV] ................ max_features=10, n_estimators=120, total=   0.3s\n[CV] max_features=7, n_estimators=182 ................................\n[CV] ................. max_features=7, n_estimators=182, total=   0.4s\n[CV] max_features=7, n_estimators=182 ................................\n[CV] ................. max_features=7, n_estimators=182, total=   0.4s\n[CV] max_features=7, n_estimators=182 ................................\n[CV] ................. max_features=7, n_estimators=182, total=   0.4s\n[CV] max_features=8, n_estimators=174 ................................\n[CV] ................. max_features=8, n_estimators=174, total=   0.4s\n[CV] max_features=8, n_estimators=174 ................................\n[CV] ................. max_features=8, n_estimators=174, total=   0.4s\n[CV] max_features=8, n_estimators=174 ................................\n[CV] ................. max_features=8, n_estimators=174, total=   0.4s\n[CV] max_features=10, n_estimators=199 ...............................\n[CV] ................ max_features=10, n_estimators=199, total=   0.5s\n[CV] max_features=10, n_estimators=199 ...............................\n[CV] ................ max_features=10, n_estimators=199, total=   0.5s\n[CV] max_features=10, n_estimators=199 ...............................\n[CV] ................ max_features=10, n_estimators=199, total=   0.5s\n[CV] max_features=8, n_estimators=121 ................................\n[CV] ................. max_features=8, n_estimators=121, total=   0.3s\n[CV] max_features=8, n_estimators=121 ................................\n[CV] ................. max_features=8, n_estimators=121, total=   0.3s\n[CV] max_features=8, n_estimators=121 ................................\n[CV] ................. max_features=8, n_estimators=121, total=   0.3s\n[CV] max_features=10, n_estimators=101 ...............................\n[CV] ................ max_features=10, n_estimators=101, total=   0.4s\n[CV] max_features=10, n_estimators=101 ...............................\n[CV] ................ max_features=10, n_estimators=101, total=   0.2s\n[CV] max_features=10, n_estimators=101 ...............................\n[CV] ................ max_features=10, n_estimators=101, total=   0.4s\n[CV] max_features=9, n_estimators=129 ................................\n[CV] ................. max_features=9, n_estimators=129, total=   0.5s\n[CV] max_features=9, n_estimators=129 ................................\n[CV] ................. max_features=9, n_estimators=129, total=   0.3s\n[CV] max_features=9, n_estimators=129 ................................\n[CV] ................. max_features=9, n_estimators=129, total=   0.3s\n[CV] max_features=7, n_estimators=163 ................................\n[CV] ................. max_features=7, n_estimators=163, total=   0.4s\n[CV] max_features=7, n_estimators=163 ................................\n[CV] ................. max_features=7, n_estimators=163, total=   0.4s\n[CV] max_features=7, n_estimators=163 ................................\n[CV] ................. max_features=7, n_estimators=163, total=   0.4s\n\n\n[Parallel(n_jobs=1)]: Done  30 out of  30 | elapsed:   11.3s finished\n\n\nRandomizedSearchCV(cv=3, error_score='raise-deprecating',\n                   estimator=RandomForestClassifier(bootstrap=True,\n                                                    class_weight=None,\n                                                    criterion='gini',\n                                                    max_depth=None,\n                                                    max_features='auto',\n                                                    max_leaf_nodes=None,\n                                                    min_impurity_decrease=0.0,\n                                                    min_impurity_split=None,\n                                                    min_samples_leaf=1,\n                                                    min_samples_split=2,\n                                                    min_weight_fraction_leaf=0.0,\n                                                    n_estimators='warn',\n                                                    n_jobs=None,\n                                                    oob_sc...\n                                                    warm_start=False),\n                   iid='warn', n_iter=10, n_jobs=None,\n                   param_distributions={'max_features': <scipy.stats._distn_infrastructure.rv_frozen object at 0x000000000BB2F0C8>,\n                                        'n_estimators': <scipy.stats._distn_infrastructure.rv_frozen object at 0x000000000BB2FFC8>},\n                   pre_dispatch='2*n_jobs', random_state=42, refit=True,\n                   return_train_score=False, scoring='accuracy', verbose=2)\n\n\n\nRandomizedSearchCV takes a dictionary with the parameters, it takes random numbers between the low and high rating and picks randomly the combinations.\nSo the difference between GridSearchCV and RandomizedSearchCV is:\nWith GridSearchCV you specify the parameters that you want to combine but with RandomizedSearchCV, the model automatically picks random parameters between the specified limits (which are low and high)\n\nrnd_search.best_score_, rnd_search.best_params_\n\n(0.8103254769921436, {'max_features': 10, 'n_estimators': 120})\n\n\n\n# Let's see the whole parameters and their scores\ndata = rnd_search.cv_results_\nfor a, b in zip(data['mean_test_score'], data['params']):\n    print(a, b)\n\n0.8058361391694725 {'max_features': 9, 'n_estimators': 192}\n0.8002244668911336 {'max_features': 8, 'n_estimators': 171}\n0.8103254769921436 {'max_features': 10, 'n_estimators': 120}\n0.8002244668911336 {'max_features': 7, 'n_estimators': 182}\n0.8013468013468014 {'max_features': 8, 'n_estimators': 174}\n0.8092031425364759 {'max_features': 10, 'n_estimators': 199}\n0.8002244668911336 {'max_features': 8, 'n_estimators': 121}\n0.8058361391694725 {'max_features': 10, 'n_estimators': 101}\n0.8058361391694725 {'max_features': 9, 'n_estimators': 129}\n0.8024691358024691 {'max_features': 7, 'n_estimators': 163}\n\n\n\nrnd_clf = rnd_search.best_estimator_ # rnd_search.best_estimator_ is our model\ncross_val_score(rnd_clf, X_train, y_train, cv=10, scoring='accuracy').mean()\n\n0.824990352967881\n\n\nThe score from the cross_val_score is actually higher than that of GridSearch.\nThe RandomizedSearchCV and the GridSearchCV are great, each one in its own way.\nYou can try many comprehensive data manipulation techniques (e.g feature engineering) that can increase the accuracy of your model so that you can upload your predictions with a smile.\nFor now, Goodbye!\nCoding Is Fun But I’ve Gotta Run :)"
  },
  {
    "objectID": "posts/2021-06-08-of-pipelines-cross-validation-and-hyperparameter-tuning-a-tutorial-using-scikit-learn-part-2.html",
    "href": "posts/2021-06-08-of-pipelines-cross-validation-and-hyperparameter-tuning-a-tutorial-using-scikit-learn-part-2.html",
    "title": "Of Pipelines, Cross Validation and Hyperparameter Tuning - A tutorial using Scikit-Learn Part 2",
    "section": "",
    "text": "In this episode I will be giving you a ride deeper into the Sci-Kit-Learn features that we had talked about in the previous episode (the Part I of this episode). If you haven’t seen the previous episode, please make sure to visit it before this one. The previous episode is the foundation of this episode so visiting it will be to your advantage.\nSo we will continue with our features which were:\n- Transformation Pipelines\n- Cross Validation\n- Hyperparameter Tuning with Grid Search and Randomized Search\nWe will be digging a litte deeper into these features so let’s get started…\nAs usual, let’s import the common imports\n\nimport numpy as np\nimport pandas as pd\n\nnp.random.seed(42) # To stabilise the notebook's output across all runs\n\nSo that you know, in this episode we will not be using the Titanic dataset as we did in the previous one, rather, we will be using a Sci-Kit-Learn dataset to demonstrate some powerful implementations of the features that we stated earlier…\n\n# importing the dataset\nfrom sklearn.datasets import make_classification\n\n\n# loading the dataset\ndata = make_classification(n_samples=1000, n_features=10, random_state=42)\n\n# n_samples => the rows,  number of rows we want our data to have\n# n_features => the columns,  number of features/attributes we want our data to have\n\n\ndata\n\n(array([[ 0.96479937, -0.06644898,  0.98676805, ..., -1.2101605 ,\n         -0.62807677,  1.22727382],\n        [-0.91651053, -0.56639459, -1.00861409, ..., -0.98453405,\n          0.36389642,  0.20947008],\n        [-0.10948373, -0.43277388, -0.4576493 , ..., -0.2463834 ,\n         -1.05814521, -0.29737608],\n        ...,\n        [ 1.67463306,  1.75493307,  1.58615382, ...,  0.69272276,\n         -1.50384972,  0.22526412],\n        [-0.77860873, -0.83568901, -0.19484228, ..., -0.49735437,\n          2.47213818,  0.86718741],\n        [ 0.24845351, -1.0034389 ,  0.36046013, ...,  0.77323999,\n          0.1857344 ,  1.41641179]]),\n array([0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0,\n        1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1,\n        0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0,\n        0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1,\n        0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0,\n        0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0,\n        0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1,\n        0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0,\n        0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0,\n        0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1,\n        0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1,\n        0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0,\n        0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1,\n        1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1,\n        0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0,\n        0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0,\n        0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1,\n        0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0,\n        0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0,\n        1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1,\n        0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1,\n        0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0,\n        1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1,\n        0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1,\n        0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0,\n        0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1,\n        1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0,\n        0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1,\n        0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0,\n        1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0,\n        1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0,\n        1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0,\n        1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0,\n        0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1,\n        0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1,\n        1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0,\n        0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0,\n        0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0,\n        0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0,\n        0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1,\n        1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1,\n        0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1,\n        1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0,\n        0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0,\n        0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0,\n        0, 1, 1, 0, 0, 1, 1, 0, 0, 0]))\n\n\nAs we can see, we have two (2) arrays in our function, the first array has the “Data” and the other one has the “Labels”. We only have two “Label” categories, 0 and 1, so automatically, our model is going to be a binary classifier.\nWe need to split the data into two (2) groups, the Training set and the Test set. (Although others prefer including a third set called Validation set, we will not be doing that in this tutorial). We will use the train_test_split feature Sci-Kit-Learn provides.\n\nfrom sklearn.model_selection import train_test_split\n\nX, y = data[0], data[1]\n\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)\n\nLet’s make a function that quickly gives us a Cross Validation score and a Test Score so that we measure the accuracy of the models that we will be working on\n\nfrom sklearn.model_selection import cross_val_score\n\ndef cscore(model):\n    model.fit(X_train, y_train)\n    return cross_val_score(model, X_train, y_train, cv=10, scoring='accuracy').mean()\n    \ndef score(model):\n    model.fit(X_train, y_train)\n    return model.score(X_test, y_test)\n\nWe will be comparing two (2) models for this tutorial, the KNeighborsClassifier and the SGDClassifier\nSo let’s jump right in\n\nfrom sklearn.linear_model import SGDClassifier\n\nsgd_clf = SGDClassifier(tol=-np.infty, random_state=42)\ncscore(sgd_clf), score(sgd_clf)\n\n(0.8687109313955306, 0.83)\n\n\nIt’s not that much but it’s something, let’s see how the KNeighborsClassifier performs\n\nfrom sklearn.neighbors import KNeighborsClassifier\n\nknn_clf = KNeighborsClassifier(n_neighbors=10)\ncscore(knn_clf), score(knn_clf)\n\n(0.8536314267854352, 0.835)\n\n\nIt seems our KNeighborsClassifier performed less than the SGDClassifier on cross validation but did a tinny-tiny better on the test set. Let’s try searching for the optimal n_neighbors that can give us a much higher accuracy so that the performance of the model can be elevated.\n\n# We had already imported KNeighborsClassifier so there is really no need to do it again\n\nneighbors = range(1, 30)\nitems = []\nfor neighbor in neighbors:\n    knn_clf = KNeighborsClassifier(n_neighbors=neighbor)\n    items.append((cscore(knn_clf), score(knn_clf), neighbor))\n    \nsorted(items, reverse=True)\n\n[(0.8612263634942959, 0.82, 25),\n (0.8599755821222066, 0.835, 17),\n (0.8599605407094859, 0.83, 20),\n (0.8599601500234412, 0.83, 19),\n (0.8587255821222065, 0.815, 7),\n (0.858725191436162, 0.805, 12),\n (0.8587105407094858, 0.825, 21),\n (0.8587105407094858, 0.82, 23),\n (0.8587097593373965, 0.825, 16),\n (0.857460540709486, 0.82, 26),\n (0.8574439365525863, 0.845, 9),\n (0.8573972495702453, 0.825, 29),\n (0.8562097593373965, 0.835, 15),\n (0.8561947179246758, 0.82, 27),\n (0.8549917955930615, 0.82, 24),\n (0.8549597593373965, 0.845, 18),\n (0.8549597593373963, 0.82, 13),\n (0.8549447179246756, 0.82, 22),\n (0.8536947179246758, 0.815, 28),\n (0.8536468588842008, 0.83, 11),\n (0.8536314267854352, 0.835, 10),\n (0.8512093686513518, 0.82, 14),\n (0.8499126816690108, 0.8, 5),\n (0.8486935458665416, 0.82, 8),\n (0.846241014220972, 0.81, 6),\n (0.8399740193780278, 0.79, 3),\n (0.8387089779653071, 0.795, 4),\n (0.8049720659478042, 0.8, 1),\n (0.8025033208313799, 0.765, 2)]\n\n\n\nsorted(items, reverse=True)[0]\n\n(0.8612263634942959, 0.82, 25)\n\n\nOuch!!!, this best one we can find is actually no match for the SGDClassifier score\nHow else can we boost the performance of our model?\nLightbulb!, We will preprocess the data using Unsupervised preprocessing techniques\nLet’s start by using the KMeans Clustering algorithm to preprocess the data\nWait a minute…, How do we find the optimal n_clusters (number of clusters) for the algorithm to transform to?? We can’t merely rely on guess work, All you can guess is that WE CAN ALSO USE GRID SEARCH for data preprocessing. So how do we go about this questionable process??\n\nfrom sklearn.cluster import KMeans\nfrom sklearn.model_selection import GridSearchCV\nfrom sklearn.pipeline import Pipeline\nfrom sklearn.preprocessing import StandardScaler\n\npipeline1 = Pipeline([ \n    ('kmeans', KMeans(random_state=42)), # We first cluster the data,\n    ('scale', StandardScaler()), # scale it\n    ('knn_clf', KNeighborsClassifier()) # and then train the model\n])\n\nparams = dict(kmeans__n_clusters=range(2, 10), knn_clf__n_neighbors=range(1, 10))\n\nWe create a dictionary that contains the parameters we want to tune, in this case we have the params variable which is contains a dictionary.\nkmeans__n_clusters=range(2, 10) (Extracted from the code)\nThe kmeans is taken from the name that we gave our KMeans transformer in the Pipeline (which is ‘kmeans’)\nAfter that we have a double underscore, __ , it separates the model/KMeans transformer and the model hyperparameter.\nAfter the double underscore we put the name of our parameter we want to tune and assign it to the range of values we want to test.\nIf the range of values isn’t consistent, we make a list of the values, for example, [1, 10, 6, 4, 9] if we want to test these 5 (five) values only.\nAnd if the values are strings, we just make a list with the values, for example, if I were using a SVC model, I would assign the kernel parameter with the following values [‘sigmoid’, ‘linear’, ‘rbf’]\nNow let’s introduce GridSearchCV\n\ngrid_search1 = GridSearchCV(pipeline1, params, cv=10, verbose=5, scoring='accuracy')\ngrid_search1.fit(X_train, y_train)\n\nFitting 10 folds for each of 72 candidates, totalling 720 fits\n[CV] kmeans__n_clusters=2, knn_clf__n_neighbors=1 ....................\n\n\n[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n\n\n[CV]  kmeans__n_clusters=2, knn_clf__n_neighbors=1, score=0.827, total=   0.3s\n[CV] kmeans__n_clusters=2, knn_clf__n_neighbors=1 ....................\n[CV]  kmeans__n_clusters=2, knn_clf__n_neighbors=1, score=0.642, total=   0.1s\n[CV] kmeans__n_clusters=2, knn_clf__n_neighbors=1 ....................\n[CV]  kmeans__n_clusters=2, knn_clf__n_neighbors=1, score=0.750, total=   0.1s\n[CV] kmeans__n_clusters=2, knn_clf__n_neighbors=1 ....................\n\n\n[Parallel(n_jobs=1)]: Done   1 out of   1 | elapsed:    0.2s remaining:    0.0s\n[Parallel(n_jobs=1)]: Done   2 out of   2 | elapsed:    0.3s remaining:    0.0s\n[Parallel(n_jobs=1)]: Done   3 out of   3 | elapsed:    0.3s remaining:    0.0s\n\n\n[CV]  kmeans__n_clusters=2, knn_clf__n_neighbors=1, score=0.738, total=   0.1s\n[CV] kmeans__n_clusters=2, knn_clf__n_neighbors=1 ....................\n[CV]  kmeans__n_clusters=2, knn_clf__n_neighbors=1, score=0.750, total=   0.1s\n[CV] kmeans__n_clusters=2, knn_clf__n_neighbors=1 ....................\n[CV]  kmeans__n_clusters=2, knn_clf__n_neighbors=1, score=0.787, total=   0.1s\n[CV] kmeans__n_clusters=2, knn_clf__n_neighbors=1 ....................\n\n\n[Parallel(n_jobs=1)]: Done   4 out of   4 | elapsed:    0.5s remaining:    0.0s\n\n\n[CV]  kmeans__n_clusters=2, knn_clf__n_neighbors=1, score=0.787, total=   0.1s\n[CV] kmeans__n_clusters=2, knn_clf__n_neighbors=1 ....................\n[CV]  kmeans__n_clusters=2, knn_clf__n_neighbors=1, score=0.713, total=   0.1s\n[CV] kmeans__n_clusters=2, knn_clf__n_neighbors=1 ....................\n[CV]  kmeans__n_clusters=2, knn_clf__n_neighbors=1, score=0.772, total=   0.1s\n[CV] kmeans__n_clusters=2, knn_clf__n_neighbors=1 ....................\n[CV]  kmeans__n_clusters=2, knn_clf__n_neighbors=1, score=0.772, total=   0.1s\n[CV] kmeans__n_clusters=2, knn_clf__n_neighbors=2 ....................\n[CV]  kmeans__n_clusters=2, knn_clf__n_neighbors=2, score=0.815, total=   0.1s\n[CV] kmeans__n_clusters=2, knn_clf__n_neighbors=2 ....................\n[CV]  kmeans__n_clusters=2, knn_clf__n_neighbors=2, score=0.679, total=   0.1s\n[CV] kmeans__n_clusters=2, knn_clf__n_neighbors=2 ....................\n[CV]  kmeans__n_clusters=2, knn_clf__n_neighbors=2, score=0.725, total=   0.1s\n[CV] kmeans__n_clusters=2, knn_clf__n_neighbors=2 ....................\n[CV]  kmeans__n_clusters=2, knn_clf__n_neighbors=2, score=0.750, total=   0.1s\n[CV] kmeans__n_clusters=2, knn_clf__n_neighbors=2 ....................\n[CV]  kmeans__n_clusters=2, knn_clf__n_neighbors=2, score=0.800, total=   0.1s\n[CV] kmeans__n_clusters=2, knn_clf__n_neighbors=2 ....................\n[CV]  kmeans__n_clusters=2, knn_clf__n_neighbors=2, score=0.713, total=   0.1s\n[CV] kmeans__n_clusters=2, knn_clf__n_neighbors=2 ....................\n[CV]  kmeans__n_clusters=2, knn_clf__n_neighbors=2, score=0.787, total=   0.1s\n[CV] kmeans__n_clusters=2, knn_clf__n_neighbors=2 ....................\n[CV]  kmeans__n_clusters=2, knn_clf__n_neighbors=2, score=0.662, total=   0.1s\n[CV] kmeans__n_clusters=2, knn_clf__n_neighbors=2 ....................\n[CV]  kmeans__n_clusters=2, knn_clf__n_neighbors=2, score=0.759, total=   0.1s\n[CV] kmeans__n_clusters=2, knn_clf__n_neighbors=2 ....................\n[CV]  kmeans__n_clusters=2, knn_clf__n_neighbors=2, score=0.772, total=   0.1s\n[CV] kmeans__n_clusters=2, knn_clf__n_neighbors=3 ....................\n[CV]  kmeans__n_clusters=2, knn_clf__n_neighbors=3, score=0.840, total=   0.1s\n[CV] kmeans__n_clusters=2, knn_clf__n_neighbors=3 ....................\n[CV]  kmeans__n_clusters=2, knn_clf__n_neighbors=3, score=0.704, total=   0.1s\n[CV] kmeans__n_clusters=2, knn_clf__n_neighbors=3 ....................\n[CV]  kmeans__n_clusters=2, knn_clf__n_neighbors=3, score=0.750, total=   0.1s\n[CV] kmeans__n_clusters=2, knn_clf__n_neighbors=3 ....................\n[CV]  kmeans__n_clusters=2, knn_clf__n_neighbors=3, score=0.812, total=   0.1s\n[CV] kmeans__n_clusters=2, knn_clf__n_neighbors=3 ....................\n[CV]  kmeans__n_clusters=2, knn_clf__n_neighbors=3, score=0.825, total=   0.1s\n[CV] kmeans__n_clusters=2, knn_clf__n_neighbors=3 ....................\n[CV]  kmeans__n_clusters=2, knn_clf__n_neighbors=3, score=0.738, total=   0.1s\n[CV] kmeans__n_clusters=2, knn_clf__n_neighbors=3 ....................\n[CV]  kmeans__n_clusters=2, knn_clf__n_neighbors=3, score=0.812, total=   0.1s\n[CV] kmeans__n_clusters=2, knn_clf__n_neighbors=3 ....................\n[CV]  kmeans__n_clusters=2, knn_clf__n_neighbors=3, score=0.775, total=   0.1s\n[CV] kmeans__n_clusters=2, knn_clf__n_neighbors=3 ....................\n[CV]  kmeans__n_clusters=2, knn_clf__n_neighbors=3, score=0.734, total=   0.1s\n[CV] kmeans__n_clusters=2, knn_clf__n_neighbors=3 ....................\n[CV]  kmeans__n_clusters=2, knn_clf__n_neighbors=3, score=0.810, total=   0.1s\n[CV] kmeans__n_clusters=2, knn_clf__n_neighbors=4 ....................\n[CV]  kmeans__n_clusters=2, knn_clf__n_neighbors=4, score=0.852, total=   0.1s\n[CV] kmeans__n_clusters=2, knn_clf__n_neighbors=4 ....................\n[CV]  kmeans__n_clusters=2, knn_clf__n_neighbors=4, score=0.778, total=   0.1s\n[CV] kmeans__n_clusters=2, knn_clf__n_neighbors=4 ....................\n[CV]  kmeans__n_clusters=2, knn_clf__n_neighbors=4, score=0.775, total=   0.1s\n[CV] kmeans__n_clusters=2, knn_clf__n_neighbors=4 ....................\n[CV]  kmeans__n_clusters=2, knn_clf__n_neighbors=4, score=0.812, total=   0.1s\n[CV] kmeans__n_clusters=2, knn_clf__n_neighbors=4 ....................\n[CV]  kmeans__n_clusters=2, knn_clf__n_neighbors=4, score=0.812, total=   0.1s\n[CV] kmeans__n_clusters=2, knn_clf__n_neighbors=4 ....................\n[CV]  kmeans__n_clusters=2, knn_clf__n_neighbors=4, score=0.787, total=   0.1s\n[CV] kmeans__n_clusters=2, knn_clf__n_neighbors=4 ....................\n[CV]  kmeans__n_clusters=2, knn_clf__n_neighbors=4, score=0.825, total=   0.1s\n[CV] kmeans__n_clusters=2, knn_clf__n_neighbors=4 ....................\n[CV]  kmeans__n_clusters=2, knn_clf__n_neighbors=4, score=0.750, total=   0.1s\n[CV] kmeans__n_clusters=2, knn_clf__n_neighbors=4 ....................\n[CV]  kmeans__n_clusters=2, knn_clf__n_neighbors=4, score=0.797, total=   0.1s\n[CV] kmeans__n_clusters=2, knn_clf__n_neighbors=4 ....................\n[CV]  kmeans__n_clusters=2, knn_clf__n_neighbors=4, score=0.797, total=   0.1s\n[CV] kmeans__n_clusters=2, knn_clf__n_neighbors=5 ....................\n[CV]  kmeans__n_clusters=2, knn_clf__n_neighbors=5, score=0.852, total=   0.1s\n[CV] kmeans__n_clusters=2, knn_clf__n_neighbors=5 ....................\n[CV]  kmeans__n_clusters=2, knn_clf__n_neighbors=5, score=0.741, total=   0.1s\n[CV] kmeans__n_clusters=2, knn_clf__n_neighbors=5 ....................\n[CV]  kmeans__n_clusters=2, knn_clf__n_neighbors=5, score=0.800, total=   0.1s\n[CV] kmeans__n_clusters=2, knn_clf__n_neighbors=5 ....................\n[CV]  kmeans__n_clusters=2, knn_clf__n_neighbors=5, score=0.812, total=   0.1s\n[CV] kmeans__n_clusters=2, knn_clf__n_neighbors=5 ....................\n[CV]  kmeans__n_clusters=2, knn_clf__n_neighbors=5, score=0.850, total=   0.1s\n[CV] kmeans__n_clusters=2, knn_clf__n_neighbors=5 ....................\n[CV]  kmeans__n_clusters=2, knn_clf__n_neighbors=5, score=0.850, total=   0.1s\n[CV] kmeans__n_clusters=2, knn_clf__n_neighbors=5 ....................\n[CV]  kmeans__n_clusters=2, knn_clf__n_neighbors=5, score=0.825, total=   0.1s\n[CV] kmeans__n_clusters=2, knn_clf__n_neighbors=5 ....................\n[CV]  kmeans__n_clusters=2, knn_clf__n_neighbors=5, score=0.762, total=   0.1s\n[CV] kmeans__n_clusters=2, knn_clf__n_neighbors=5 ....................\n[CV]  kmeans__n_clusters=2, knn_clf__n_neighbors=5, score=0.772, total=   0.1s\n[CV] kmeans__n_clusters=2, knn_clf__n_neighbors=5 ....................\n[CV]  kmeans__n_clusters=2, knn_clf__n_neighbors=5, score=0.810, total=   0.1s\n[CV] kmeans__n_clusters=2, knn_clf__n_neighbors=6 ....................\n[CV]  kmeans__n_clusters=2, knn_clf__n_neighbors=6, score=0.864, total=   0.1s\n[CV] kmeans__n_clusters=2, knn_clf__n_neighbors=6 ....................\n[CV]  kmeans__n_clusters=2, knn_clf__n_neighbors=6, score=0.741, total=   0.1s\n[CV] kmeans__n_clusters=2, knn_clf__n_neighbors=6 ....................\n[CV]  kmeans__n_clusters=2, knn_clf__n_neighbors=6, score=0.825, total=   0.1s\n[CV] kmeans__n_clusters=2, knn_clf__n_neighbors=6 ....................\n[CV]  kmeans__n_clusters=2, knn_clf__n_neighbors=6, score=0.800, total=   0.1s\n[CV] kmeans__n_clusters=2, knn_clf__n_neighbors=6 ....................\n[CV]  kmeans__n_clusters=2, knn_clf__n_neighbors=6, score=0.825, total=   0.1s\n[CV] kmeans__n_clusters=2, knn_clf__n_neighbors=6 ....................\n[CV]  kmeans__n_clusters=2, knn_clf__n_neighbors=6, score=0.787, total=   0.1s\n[CV] kmeans__n_clusters=2, knn_clf__n_neighbors=6 ....................\n[CV]  kmeans__n_clusters=2, knn_clf__n_neighbors=6, score=0.838, total=   0.1s\n[CV] kmeans__n_clusters=2, knn_clf__n_neighbors=6 ....................\n[CV]  kmeans__n_clusters=2, knn_clf__n_neighbors=6, score=0.775, total=   0.1s\n[CV] kmeans__n_clusters=2, knn_clf__n_neighbors=6 ....................\n[CV]  kmeans__n_clusters=2, knn_clf__n_neighbors=6, score=0.835, total=   0.1s\n[CV] kmeans__n_clusters=2, knn_clf__n_neighbors=6 ....................\n[CV]  kmeans__n_clusters=2, knn_clf__n_neighbors=6, score=0.823, total=   0.1s\n[CV] kmeans__n_clusters=2, knn_clf__n_neighbors=7 ....................\n[CV]  kmeans__n_clusters=2, knn_clf__n_neighbors=7, score=0.864, total=   0.1s\n[CV] kmeans__n_clusters=2, knn_clf__n_neighbors=7 ....................\n\n\n[CV]  kmeans__n_clusters=2, knn_clf__n_neighbors=7, score=0.741, total=   0.1s\n[CV] kmeans__n_clusters=2, knn_clf__n_neighbors=7 ....................\n[CV]  kmeans__n_clusters=2, knn_clf__n_neighbors=7, score=0.812, total=   0.1s\n[CV] kmeans__n_clusters=2, knn_clf__n_neighbors=7 ....................\n[CV]  kmeans__n_clusters=2, knn_clf__n_neighbors=7, score=0.787, total=   0.1s\n[CV] kmeans__n_clusters=2, knn_clf__n_neighbors=7 ....................\n[CV]  kmeans__n_clusters=2, knn_clf__n_neighbors=7, score=0.850, total=   0.1s\n[CV] kmeans__n_clusters=2, knn_clf__n_neighbors=7 ....................\n[CV]  kmeans__n_clusters=2, knn_clf__n_neighbors=7, score=0.787, total=   0.1s\n[CV] kmeans__n_clusters=2, knn_clf__n_neighbors=7 ....................\n[CV]  kmeans__n_clusters=2, knn_clf__n_neighbors=7, score=0.850, total=   0.1s\n[CV] kmeans__n_clusters=2, knn_clf__n_neighbors=7 ....................\n[CV]  kmeans__n_clusters=2, knn_clf__n_neighbors=7, score=0.775, total=   0.1s\n[CV] kmeans__n_clusters=2, knn_clf__n_neighbors=7 ....................\n[CV]  kmeans__n_clusters=2, knn_clf__n_neighbors=7, score=0.835, total=   0.1s\n[CV] kmeans__n_clusters=2, knn_clf__n_neighbors=7 ....................\n[CV]  kmeans__n_clusters=2, knn_clf__n_neighbors=7, score=0.823, total=   0.1s\n[CV] kmeans__n_clusters=2, knn_clf__n_neighbors=8 ....................\n[CV]  kmeans__n_clusters=2, knn_clf__n_neighbors=8, score=0.864, total=   0.1s\n[CV] kmeans__n_clusters=2, knn_clf__n_neighbors=8 ....................\n[CV]  kmeans__n_clusters=2, knn_clf__n_neighbors=8, score=0.741, total=   0.1s\n[CV] kmeans__n_clusters=2, knn_clf__n_neighbors=8 ....................\n[CV]  kmeans__n_clusters=2, knn_clf__n_neighbors=8, score=0.838, total=   0.1s\n[CV] kmeans__n_clusters=2, knn_clf__n_neighbors=8 ....................\n[CV]  kmeans__n_clusters=2, knn_clf__n_neighbors=8, score=0.800, total=   0.1s\n[CV] kmeans__n_clusters=2, knn_clf__n_neighbors=8 ....................\n[CV]  kmeans__n_clusters=2, knn_clf__n_neighbors=8, score=0.863, total=   0.1s\n[CV] kmeans__n_clusters=2, knn_clf__n_neighbors=8 ....................\n[CV]  kmeans__n_clusters=2, knn_clf__n_neighbors=8, score=0.775, total=   0.1s\n[CV] kmeans__n_clusters=2, knn_clf__n_neighbors=8 ....................\n[CV]  kmeans__n_clusters=2, knn_clf__n_neighbors=8, score=0.825, total=   0.1s\n[CV] kmeans__n_clusters=2, knn_clf__n_neighbors=8 ....................\n[CV]  kmeans__n_clusters=2, knn_clf__n_neighbors=8, score=0.800, total=   0.1s\n[CV] kmeans__n_clusters=2, knn_clf__n_neighbors=8 ....................\n[CV]  kmeans__n_clusters=2, knn_clf__n_neighbors=8, score=0.848, total=   0.1s\n[CV] kmeans__n_clusters=2, knn_clf__n_neighbors=8 ....................\n[CV]  kmeans__n_clusters=2, knn_clf__n_neighbors=8, score=0.797, total=   0.1s\n[CV] kmeans__n_clusters=2, knn_clf__n_neighbors=9 ....................\n[CV]  kmeans__n_clusters=2, knn_clf__n_neighbors=9, score=0.840, total=   0.1s\n[CV] kmeans__n_clusters=2, knn_clf__n_neighbors=9 ....................\n[CV]  kmeans__n_clusters=2, knn_clf__n_neighbors=9, score=0.778, total=   0.1s\n[CV] kmeans__n_clusters=2, knn_clf__n_neighbors=9 ....................\n[CV]  kmeans__n_clusters=2, knn_clf__n_neighbors=9, score=0.838, total=   0.1s\n[CV] kmeans__n_clusters=2, knn_clf__n_neighbors=9 ....................\n[CV]  kmeans__n_clusters=2, knn_clf__n_neighbors=9, score=0.812, total=   0.1s\n[CV] kmeans__n_clusters=2, knn_clf__n_neighbors=9 ....................\n[CV]  kmeans__n_clusters=2, knn_clf__n_neighbors=9, score=0.875, total=   0.1s\n[CV] kmeans__n_clusters=2, knn_clf__n_neighbors=9 ....................\n[CV]  kmeans__n_clusters=2, knn_clf__n_neighbors=9, score=0.762, total=   0.1s\n[CV] kmeans__n_clusters=2, knn_clf__n_neighbors=9 ....................\n[CV]  kmeans__n_clusters=2, knn_clf__n_neighbors=9, score=0.825, total=   0.1s\n[CV] kmeans__n_clusters=2, knn_clf__n_neighbors=9 ....................\n[CV]  kmeans__n_clusters=2, knn_clf__n_neighbors=9, score=0.800, total=   0.1s\n[CV] kmeans__n_clusters=2, knn_clf__n_neighbors=9 ....................\n[CV]  kmeans__n_clusters=2, knn_clf__n_neighbors=9, score=0.835, total=   0.1s\n[CV] kmeans__n_clusters=2, knn_clf__n_neighbors=9 ....................\n[CV]  kmeans__n_clusters=2, knn_clf__n_neighbors=9, score=0.785, total=   0.1s\n[CV] kmeans__n_clusters=3, knn_clf__n_neighbors=1 ....................\n[CV]  kmeans__n_clusters=3, knn_clf__n_neighbors=1, score=0.864, total=   0.1s\n[CV] kmeans__n_clusters=3, knn_clf__n_neighbors=1 ....................\n[CV]  kmeans__n_clusters=3, knn_clf__n_neighbors=1, score=0.802, total=   0.1s\n[CV] kmeans__n_clusters=3, knn_clf__n_neighbors=1 ....................\n[CV]  kmeans__n_clusters=3, knn_clf__n_neighbors=1, score=0.812, total=   0.1s\n[CV] kmeans__n_clusters=3, knn_clf__n_neighbors=1 ....................\n[CV]  kmeans__n_clusters=3, knn_clf__n_neighbors=1, score=0.812, total=   0.1s\n[CV] kmeans__n_clusters=3, knn_clf__n_neighbors=1 ....................\n[CV]  kmeans__n_clusters=3, knn_clf__n_neighbors=1, score=0.875, total=   0.2s\n[CV] kmeans__n_clusters=3, knn_clf__n_neighbors=1 ....................\n[CV]  kmeans__n_clusters=3, knn_clf__n_neighbors=1, score=0.887, total=   0.1s\n[CV] kmeans__n_clusters=3, knn_clf__n_neighbors=1 ....................\n[CV]  kmeans__n_clusters=3, knn_clf__n_neighbors=1, score=0.850, total=   0.1s\n[CV] kmeans__n_clusters=3, knn_clf__n_neighbors=1 ....................\n[CV]  kmeans__n_clusters=3, knn_clf__n_neighbors=1, score=0.812, total=   0.1s\n[CV] kmeans__n_clusters=3, knn_clf__n_neighbors=1 ....................\n[CV]  kmeans__n_clusters=3, knn_clf__n_neighbors=1, score=0.785, total=   0.1s\n[CV] kmeans__n_clusters=3, knn_clf__n_neighbors=1 ....................\n[CV]  kmeans__n_clusters=3, knn_clf__n_neighbors=1, score=0.835, total=   0.2s\n[CV] kmeans__n_clusters=3, knn_clf__n_neighbors=2 ....................\n[CV]  kmeans__n_clusters=3, knn_clf__n_neighbors=2, score=0.840, total=   0.1s\n[CV] kmeans__n_clusters=3, knn_clf__n_neighbors=2 ....................\n[CV]  kmeans__n_clusters=3, knn_clf__n_neighbors=2, score=0.840, total=   0.1s\n[CV] kmeans__n_clusters=3, knn_clf__n_neighbors=2 ....................\n[CV]  kmeans__n_clusters=3, knn_clf__n_neighbors=2, score=0.887, total=   0.1s\n[CV] kmeans__n_clusters=3, knn_clf__n_neighbors=2 ....................\n[CV]  kmeans__n_clusters=3, knn_clf__n_neighbors=2, score=0.800, total=   0.1s\n[CV] kmeans__n_clusters=3, knn_clf__n_neighbors=2 ....................\n[CV]  kmeans__n_clusters=3, knn_clf__n_neighbors=2, score=0.875, total=   0.1s\n[CV] kmeans__n_clusters=3, knn_clf__n_neighbors=2 ....................\n[CV]  kmeans__n_clusters=3, knn_clf__n_neighbors=2, score=0.887, total=   0.2s\n[CV] kmeans__n_clusters=3, knn_clf__n_neighbors=2 ....................\n[CV]  kmeans__n_clusters=3, knn_clf__n_neighbors=2, score=0.838, total=   0.3s\n[CV] kmeans__n_clusters=3, knn_clf__n_neighbors=2 ....................\n[CV]  kmeans__n_clusters=3, knn_clf__n_neighbors=2, score=0.800, total=   0.3s\n[CV] kmeans__n_clusters=3, knn_clf__n_neighbors=2 ....................\n[CV]  kmeans__n_clusters=3, knn_clf__n_neighbors=2, score=0.848, total=   0.1s\n[CV] kmeans__n_clusters=3, knn_clf__n_neighbors=2 ....................\n[CV]  kmeans__n_clusters=3, knn_clf__n_neighbors=2, score=0.772, total=   0.1s\n[CV] kmeans__n_clusters=3, knn_clf__n_neighbors=3 ....................\n[CV]  kmeans__n_clusters=3, knn_clf__n_neighbors=3, score=0.877, total=   0.2s\n[CV] kmeans__n_clusters=3, knn_clf__n_neighbors=3 ....................\n[CV]  kmeans__n_clusters=3, knn_clf__n_neighbors=3, score=0.864, total=   0.1s\n[CV] kmeans__n_clusters=3, knn_clf__n_neighbors=3 ....................\n[CV]  kmeans__n_clusters=3, knn_clf__n_neighbors=3, score=0.838, total=   0.1s\n[CV] kmeans__n_clusters=3, knn_clf__n_neighbors=3 ....................\n[CV]  kmeans__n_clusters=3, knn_clf__n_neighbors=3, score=0.863, total=   0.1s\n[CV] kmeans__n_clusters=3, knn_clf__n_neighbors=3 ....................\n[CV]  kmeans__n_clusters=3, knn_clf__n_neighbors=3, score=0.912, total=   0.2s\n[CV] kmeans__n_clusters=3, knn_clf__n_neighbors=3 ....................\n[CV]  kmeans__n_clusters=3, knn_clf__n_neighbors=3, score=0.900, total=   0.1s\n[CV] kmeans__n_clusters=3, knn_clf__n_neighbors=3 ....................\n\n\n[CV]  kmeans__n_clusters=3, knn_clf__n_neighbors=3, score=0.900, total=   0.1s\n[CV] kmeans__n_clusters=3, knn_clf__n_neighbors=3 ....................\n[CV]  kmeans__n_clusters=3, knn_clf__n_neighbors=3, score=0.825, total=   0.1s\n[CV] kmeans__n_clusters=3, knn_clf__n_neighbors=3 ....................\n[CV]  kmeans__n_clusters=3, knn_clf__n_neighbors=3, score=0.861, total=   0.1s\n[CV] kmeans__n_clusters=3, knn_clf__n_neighbors=3 ....................\n[CV]  kmeans__n_clusters=3, knn_clf__n_neighbors=3, score=0.835, total=   0.1s\n[CV] kmeans__n_clusters=3, knn_clf__n_neighbors=4 ....................\n[CV]  kmeans__n_clusters=3, knn_clf__n_neighbors=4, score=0.877, total=   0.1s\n[CV] kmeans__n_clusters=3, knn_clf__n_neighbors=4 ....................\n[CV]  kmeans__n_clusters=3, knn_clf__n_neighbors=4, score=0.889, total=   0.1s\n[CV] kmeans__n_clusters=3, knn_clf__n_neighbors=4 ....................\n[CV]  kmeans__n_clusters=3, knn_clf__n_neighbors=4, score=0.850, total=   0.1s\n[CV] kmeans__n_clusters=3, knn_clf__n_neighbors=4 ....................\n[CV]  kmeans__n_clusters=3, knn_clf__n_neighbors=4, score=0.850, total=   0.1s\n[CV] kmeans__n_clusters=3, knn_clf__n_neighbors=4 ....................\n[CV]  kmeans__n_clusters=3, knn_clf__n_neighbors=4, score=0.900, total=   0.2s\n[CV] kmeans__n_clusters=3, knn_clf__n_neighbors=4 ....................\n[CV]  kmeans__n_clusters=3, knn_clf__n_neighbors=4, score=0.887, total=   0.1s\n[CV] kmeans__n_clusters=3, knn_clf__n_neighbors=4 ....................\n[CV]  kmeans__n_clusters=3, knn_clf__n_neighbors=4, score=0.900, total=   0.1s\n[CV] kmeans__n_clusters=3, knn_clf__n_neighbors=4 ....................\n[CV]  kmeans__n_clusters=3, knn_clf__n_neighbors=4, score=0.787, total=   0.1s\n[CV] kmeans__n_clusters=3, knn_clf__n_neighbors=4 ....................\n[CV]  kmeans__n_clusters=3, knn_clf__n_neighbors=4, score=0.848, total=   0.1s\n[CV] kmeans__n_clusters=3, knn_clf__n_neighbors=4 ....................\n[CV]  kmeans__n_clusters=3, knn_clf__n_neighbors=4, score=0.810, total=   0.1s\n[CV] kmeans__n_clusters=3, knn_clf__n_neighbors=5 ....................\n[CV]  kmeans__n_clusters=3, knn_clf__n_neighbors=5, score=0.877, total=   0.1s\n[CV] kmeans__n_clusters=3, knn_clf__n_neighbors=5 ....................\n[CV]  kmeans__n_clusters=3, knn_clf__n_neighbors=5, score=0.914, total=   0.1s\n[CV] kmeans__n_clusters=3, knn_clf__n_neighbors=5 ....................\n[CV]  kmeans__n_clusters=3, knn_clf__n_neighbors=5, score=0.863, total=   0.1s\n[CV] kmeans__n_clusters=3, knn_clf__n_neighbors=5 ....................\n[CV]  kmeans__n_clusters=3, knn_clf__n_neighbors=5, score=0.875, total=   0.1s\n[CV] kmeans__n_clusters=3, knn_clf__n_neighbors=5 ....................\n[CV]  kmeans__n_clusters=3, knn_clf__n_neighbors=5, score=0.912, total=   0.1s\n[CV] kmeans__n_clusters=3, knn_clf__n_neighbors=5 ....................\n[CV]  kmeans__n_clusters=3, knn_clf__n_neighbors=5, score=0.912, total=   0.1s\n[CV] kmeans__n_clusters=3, knn_clf__n_neighbors=5 ....................\n[CV]  kmeans__n_clusters=3, knn_clf__n_neighbors=5, score=0.912, total=   0.1s\n[CV] kmeans__n_clusters=3, knn_clf__n_neighbors=5 ....................\n[CV]  kmeans__n_clusters=3, knn_clf__n_neighbors=5, score=0.825, total=   0.1s\n[CV] kmeans__n_clusters=3, knn_clf__n_neighbors=5 ....................\n[CV]  kmeans__n_clusters=3, knn_clf__n_neighbors=5, score=0.823, total=   0.1s\n[CV] kmeans__n_clusters=3, knn_clf__n_neighbors=5 ....................\n[CV]  kmeans__n_clusters=3, knn_clf__n_neighbors=5, score=0.835, total=   0.1s\n[CV] kmeans__n_clusters=3, knn_clf__n_neighbors=6 ....................\n[CV]  kmeans__n_clusters=3, knn_clf__n_neighbors=6, score=0.877, total=   0.1s\n[CV] kmeans__n_clusters=3, knn_clf__n_neighbors=6 ....................\n[CV]  kmeans__n_clusters=3, knn_clf__n_neighbors=6, score=0.877, total=   0.1s\n[CV] kmeans__n_clusters=3, knn_clf__n_neighbors=6 ....................\n[CV]  kmeans__n_clusters=3, knn_clf__n_neighbors=6, score=0.850, total=   0.1s\n[CV] kmeans__n_clusters=3, knn_clf__n_neighbors=6 ....................\n[CV]  kmeans__n_clusters=3, knn_clf__n_neighbors=6, score=0.863, total=   0.1s\n[CV] kmeans__n_clusters=3, knn_clf__n_neighbors=6 ....................\n[CV]  kmeans__n_clusters=3, knn_clf__n_neighbors=6, score=0.925, total=   0.1s\n[CV] kmeans__n_clusters=3, knn_clf__n_neighbors=6 ....................\n[CV]  kmeans__n_clusters=3, knn_clf__n_neighbors=6, score=0.887, total=   0.1s\n[CV] kmeans__n_clusters=3, knn_clf__n_neighbors=6 ....................\n[CV]  kmeans__n_clusters=3, knn_clf__n_neighbors=6, score=0.887, total=   0.1s\n[CV] kmeans__n_clusters=3, knn_clf__n_neighbors=6 ....................\n[CV]  kmeans__n_clusters=3, knn_clf__n_neighbors=6, score=0.787, total=   0.1s\n[CV] kmeans__n_clusters=3, knn_clf__n_neighbors=6 ....................\n[CV]  kmeans__n_clusters=3, knn_clf__n_neighbors=6, score=0.848, total=   0.1s\n[CV] kmeans__n_clusters=3, knn_clf__n_neighbors=6 ....................\n[CV]  kmeans__n_clusters=3, knn_clf__n_neighbors=6, score=0.810, total=   0.1s\n[CV] kmeans__n_clusters=3, knn_clf__n_neighbors=7 ....................\n[CV]  kmeans__n_clusters=3, knn_clf__n_neighbors=7, score=0.889, total=   0.1s\n[CV] kmeans__n_clusters=3, knn_clf__n_neighbors=7 ....................\n[CV]  kmeans__n_clusters=3, knn_clf__n_neighbors=7, score=0.889, total=   0.1s\n[CV] kmeans__n_clusters=3, knn_clf__n_neighbors=7 ....................\n[CV]  kmeans__n_clusters=3, knn_clf__n_neighbors=7, score=0.863, total=   0.1s\n[CV] kmeans__n_clusters=3, knn_clf__n_neighbors=7 ....................\n[CV]  kmeans__n_clusters=3, knn_clf__n_neighbors=7, score=0.863, total=   0.1s\n[CV] kmeans__n_clusters=3, knn_clf__n_neighbors=7 ....................\n[CV]  kmeans__n_clusters=3, knn_clf__n_neighbors=7, score=0.887, total=   0.1s\n[CV] kmeans__n_clusters=3, knn_clf__n_neighbors=7 ....................\n[CV]  kmeans__n_clusters=3, knn_clf__n_neighbors=7, score=0.912, total=   0.1s\n[CV] kmeans__n_clusters=3, knn_clf__n_neighbors=7 ....................\n[CV]  kmeans__n_clusters=3, knn_clf__n_neighbors=7, score=0.900, total=   0.1s\n[CV] kmeans__n_clusters=3, knn_clf__n_neighbors=7 ....................\n[CV]  kmeans__n_clusters=3, knn_clf__n_neighbors=7, score=0.825, total=   0.1s\n[CV] kmeans__n_clusters=3, knn_clf__n_neighbors=7 ....................\n[CV]  kmeans__n_clusters=3, knn_clf__n_neighbors=7, score=0.848, total=   0.1s\n[CV] kmeans__n_clusters=3, knn_clf__n_neighbors=7 ....................\n[CV]  kmeans__n_clusters=3, knn_clf__n_neighbors=7, score=0.823, total=   0.1s\n[CV] kmeans__n_clusters=3, knn_clf__n_neighbors=8 ....................\n[CV]  kmeans__n_clusters=3, knn_clf__n_neighbors=8, score=0.877, total=   0.1s\n[CV] kmeans__n_clusters=3, knn_clf__n_neighbors=8 ....................\n[CV]  kmeans__n_clusters=3, knn_clf__n_neighbors=8, score=0.877, total=   0.1s\n[CV] kmeans__n_clusters=3, knn_clf__n_neighbors=8 ....................\n[CV]  kmeans__n_clusters=3, knn_clf__n_neighbors=8, score=0.887, total=   0.1s\n[CV] kmeans__n_clusters=3, knn_clf__n_neighbors=8 ....................\n[CV]  kmeans__n_clusters=3, knn_clf__n_neighbors=8, score=0.863, total=   0.1s\n[CV] kmeans__n_clusters=3, knn_clf__n_neighbors=8 ....................\n[CV]  kmeans__n_clusters=3, knn_clf__n_neighbors=8, score=0.912, total=   0.1s\n[CV] kmeans__n_clusters=3, knn_clf__n_neighbors=8 ....................\n[CV]  kmeans__n_clusters=3, knn_clf__n_neighbors=8, score=0.887, total=   0.1s\n[CV] kmeans__n_clusters=3, knn_clf__n_neighbors=8 ....................\n[CV]  kmeans__n_clusters=3, knn_clf__n_neighbors=8, score=0.887, total=   0.1s\n[CV] kmeans__n_clusters=3, knn_clf__n_neighbors=8 ....................\n[CV]  kmeans__n_clusters=3, knn_clf__n_neighbors=8, score=0.825, total=   0.1s\n[CV] kmeans__n_clusters=3, knn_clf__n_neighbors=8 ....................\n[CV]  kmeans__n_clusters=3, knn_clf__n_neighbors=8, score=0.861, total=   0.1s\n[CV] kmeans__n_clusters=3, knn_clf__n_neighbors=8 ....................\n[CV]  kmeans__n_clusters=3, knn_clf__n_neighbors=8, score=0.810, total=   0.1s\n[CV] kmeans__n_clusters=3, knn_clf__n_neighbors=9 ....................\n[CV]  kmeans__n_clusters=3, knn_clf__n_neighbors=9, score=0.877, total=   0.1s\n[CV] kmeans__n_clusters=3, knn_clf__n_neighbors=9 ....................\n[CV]  kmeans__n_clusters=3, knn_clf__n_neighbors=9, score=0.877, total=   0.1s\n[CV] kmeans__n_clusters=3, knn_clf__n_neighbors=9 ....................\n\n\n[CV]  kmeans__n_clusters=3, knn_clf__n_neighbors=9, score=0.875, total=   0.1s\n[CV] kmeans__n_clusters=3, knn_clf__n_neighbors=9 ....................\n[CV]  kmeans__n_clusters=3, knn_clf__n_neighbors=9, score=0.863, total=   0.1s\n[CV] kmeans__n_clusters=3, knn_clf__n_neighbors=9 ....................\n[CV]  kmeans__n_clusters=3, knn_clf__n_neighbors=9, score=0.875, total=   0.1s\n[CV] kmeans__n_clusters=3, knn_clf__n_neighbors=9 ....................\n[CV]  kmeans__n_clusters=3, knn_clf__n_neighbors=9, score=0.875, total=   0.1s\n[CV] kmeans__n_clusters=3, knn_clf__n_neighbors=9 ....................\n[CV]  kmeans__n_clusters=3, knn_clf__n_neighbors=9, score=0.900, total=   0.1s\n[CV] kmeans__n_clusters=3, knn_clf__n_neighbors=9 ....................\n[CV]  kmeans__n_clusters=3, knn_clf__n_neighbors=9, score=0.838, total=   0.1s\n[CV] kmeans__n_clusters=3, knn_clf__n_neighbors=9 ....................\n[CV]  kmeans__n_clusters=3, knn_clf__n_neighbors=9, score=0.848, total=   0.1s\n[CV] kmeans__n_clusters=3, knn_clf__n_neighbors=9 ....................\n[CV]  kmeans__n_clusters=3, knn_clf__n_neighbors=9, score=0.835, total=   0.1s\n[CV] kmeans__n_clusters=4, knn_clf__n_neighbors=1 ....................\n[CV]  kmeans__n_clusters=4, knn_clf__n_neighbors=1, score=0.852, total=   0.1s\n[CV] kmeans__n_clusters=4, knn_clf__n_neighbors=1 ....................\n[CV]  kmeans__n_clusters=4, knn_clf__n_neighbors=1, score=0.802, total=   0.1s\n[CV] kmeans__n_clusters=4, knn_clf__n_neighbors=1 ....................\n[CV]  kmeans__n_clusters=4, knn_clf__n_neighbors=1, score=0.787, total=   0.1s\n[CV] kmeans__n_clusters=4, knn_clf__n_neighbors=1 ....................\n[CV]  kmeans__n_clusters=4, knn_clf__n_neighbors=1, score=0.887, total=   0.1s\n[CV] kmeans__n_clusters=4, knn_clf__n_neighbors=1 ....................\n[CV]  kmeans__n_clusters=4, knn_clf__n_neighbors=1, score=0.838, total=   0.1s\n[CV] kmeans__n_clusters=4, knn_clf__n_neighbors=1 ....................\n[CV]  kmeans__n_clusters=4, knn_clf__n_neighbors=1, score=0.887, total=   0.1s\n[CV] kmeans__n_clusters=4, knn_clf__n_neighbors=1 ....................\n[CV]  kmeans__n_clusters=4, knn_clf__n_neighbors=1, score=0.887, total=   0.2s\n[CV] kmeans__n_clusters=4, knn_clf__n_neighbors=1 ....................\n[CV]  kmeans__n_clusters=4, knn_clf__n_neighbors=1, score=0.863, total=   0.1s\n[CV] kmeans__n_clusters=4, knn_clf__n_neighbors=1 ....................\n[CV]  kmeans__n_clusters=4, knn_clf__n_neighbors=1, score=0.823, total=   0.1s\n[CV] kmeans__n_clusters=4, knn_clf__n_neighbors=1 ....................\n[CV]  kmeans__n_clusters=4, knn_clf__n_neighbors=1, score=0.797, total=   0.1s\n[CV] kmeans__n_clusters=4, knn_clf__n_neighbors=2 ....................\n[CV]  kmeans__n_clusters=4, knn_clf__n_neighbors=2, score=0.852, total=   0.1s\n[CV] kmeans__n_clusters=4, knn_clf__n_neighbors=2 ....................\n[CV]  kmeans__n_clusters=4, knn_clf__n_neighbors=2, score=0.827, total=   0.1s\n[CV] kmeans__n_clusters=4, knn_clf__n_neighbors=2 ....................\n[CV]  kmeans__n_clusters=4, knn_clf__n_neighbors=2, score=0.825, total=   0.1s\n[CV] kmeans__n_clusters=4, knn_clf__n_neighbors=2 ....................\n[CV]  kmeans__n_clusters=4, knn_clf__n_neighbors=2, score=0.825, total=   0.4s\n[CV] kmeans__n_clusters=4, knn_clf__n_neighbors=2 ....................\n[CV]  kmeans__n_clusters=4, knn_clf__n_neighbors=2, score=0.900, total=   0.1s\n[CV] kmeans__n_clusters=4, knn_clf__n_neighbors=2 ....................\n[CV]  kmeans__n_clusters=4, knn_clf__n_neighbors=2, score=0.875, total=   0.1s\n[CV] kmeans__n_clusters=4, knn_clf__n_neighbors=2 ....................\n[CV]  kmeans__n_clusters=4, knn_clf__n_neighbors=2, score=0.850, total=   0.1s\n[CV] kmeans__n_clusters=4, knn_clf__n_neighbors=2 ....................\n[CV]  kmeans__n_clusters=4, knn_clf__n_neighbors=2, score=0.838, total=   0.1s\n[CV] kmeans__n_clusters=4, knn_clf__n_neighbors=2 ....................\n[CV]  kmeans__n_clusters=4, knn_clf__n_neighbors=2, score=0.861, total=   0.1s\n[CV] kmeans__n_clusters=4, knn_clf__n_neighbors=2 ....................\n[CV]  kmeans__n_clusters=4, knn_clf__n_neighbors=2, score=0.810, total=   0.1s\n[CV] kmeans__n_clusters=4, knn_clf__n_neighbors=3 ....................\n[CV]  kmeans__n_clusters=4, knn_clf__n_neighbors=3, score=0.901, total=   0.1s\n[CV] kmeans__n_clusters=4, knn_clf__n_neighbors=3 ....................\n[CV]  kmeans__n_clusters=4, knn_clf__n_neighbors=3, score=0.840, total=   0.1s\n[CV] kmeans__n_clusters=4, knn_clf__n_neighbors=3 ....................\n[CV]  kmeans__n_clusters=4, knn_clf__n_neighbors=3, score=0.850, total=   0.1s\n[CV] kmeans__n_clusters=4, knn_clf__n_neighbors=3 ....................\n[CV]  kmeans__n_clusters=4, knn_clf__n_neighbors=3, score=0.850, total=   0.1s\n[CV] kmeans__n_clusters=4, knn_clf__n_neighbors=3 ....................\n[CV]  kmeans__n_clusters=4, knn_clf__n_neighbors=3, score=0.925, total=   0.1s\n[CV] kmeans__n_clusters=4, knn_clf__n_neighbors=3 ....................\n[CV]  kmeans__n_clusters=4, knn_clf__n_neighbors=3, score=0.887, total=   0.1s\n[CV] kmeans__n_clusters=4, knn_clf__n_neighbors=3 ....................\n[CV]  kmeans__n_clusters=4, knn_clf__n_neighbors=3, score=0.912, total=   0.1s\n[CV] kmeans__n_clusters=4, knn_clf__n_neighbors=3 ....................\n[CV]  kmeans__n_clusters=4, knn_clf__n_neighbors=3, score=0.863, total=   0.1s\n[CV] kmeans__n_clusters=4, knn_clf__n_neighbors=3 ....................\n[CV]  kmeans__n_clusters=4, knn_clf__n_neighbors=3, score=0.848, total=   0.1s\n[CV] kmeans__n_clusters=4, knn_clf__n_neighbors=3 ....................\n[CV]  kmeans__n_clusters=4, knn_clf__n_neighbors=3, score=0.810, total=   0.1s\n[CV] kmeans__n_clusters=4, knn_clf__n_neighbors=4 ....................\n[CV]  kmeans__n_clusters=4, knn_clf__n_neighbors=4, score=0.877, total=   0.1s\n[CV] kmeans__n_clusters=4, knn_clf__n_neighbors=4 ....................\n[CV]  kmeans__n_clusters=4, knn_clf__n_neighbors=4, score=0.877, total=   0.1s\n[CV] kmeans__n_clusters=4, knn_clf__n_neighbors=4 ....................\n[CV]  kmeans__n_clusters=4, knn_clf__n_neighbors=4, score=0.875, total=   0.1s\n[CV] kmeans__n_clusters=4, knn_clf__n_neighbors=4 ....................\n[CV]  kmeans__n_clusters=4, knn_clf__n_neighbors=4, score=0.863, total=   0.1s\n[CV] kmeans__n_clusters=4, knn_clf__n_neighbors=4 ....................\n[CV]  kmeans__n_clusters=4, knn_clf__n_neighbors=4, score=0.912, total=   0.1s\n[CV] kmeans__n_clusters=4, knn_clf__n_neighbors=4 ....................\n[CV]  kmeans__n_clusters=4, knn_clf__n_neighbors=4, score=0.925, total=   0.1s\n[CV] kmeans__n_clusters=4, knn_clf__n_neighbors=4 ....................\n[CV]  kmeans__n_clusters=4, knn_clf__n_neighbors=4, score=0.887, total=   0.1s\n[CV] kmeans__n_clusters=4, knn_clf__n_neighbors=4 ....................\n[CV]  kmeans__n_clusters=4, knn_clf__n_neighbors=4, score=0.863, total=   0.1s\n[CV] kmeans__n_clusters=4, knn_clf__n_neighbors=4 ....................\n[CV]  kmeans__n_clusters=4, knn_clf__n_neighbors=4, score=0.835, total=   0.1s\n[CV] kmeans__n_clusters=4, knn_clf__n_neighbors=4 ....................\n[CV]  kmeans__n_clusters=4, knn_clf__n_neighbors=4, score=0.823, total=   0.1s\n[CV] kmeans__n_clusters=4, knn_clf__n_neighbors=5 ....................\n[CV]  kmeans__n_clusters=4, knn_clf__n_neighbors=5, score=0.901, total=   0.1s\n[CV] kmeans__n_clusters=4, knn_clf__n_neighbors=5 ....................\n[CV]  kmeans__n_clusters=4, knn_clf__n_neighbors=5, score=0.877, total=   0.1s\n[CV] kmeans__n_clusters=4, knn_clf__n_neighbors=5 ....................\n[CV]  kmeans__n_clusters=4, knn_clf__n_neighbors=5, score=0.863, total=   0.1s\n[CV] kmeans__n_clusters=4, knn_clf__n_neighbors=5 ....................\n[CV]  kmeans__n_clusters=4, knn_clf__n_neighbors=5, score=0.863, total=   0.1s\n[CV] kmeans__n_clusters=4, knn_clf__n_neighbors=5 ....................\n[CV]  kmeans__n_clusters=4, knn_clf__n_neighbors=5, score=0.912, total=   0.1s\n[CV] kmeans__n_clusters=4, knn_clf__n_neighbors=5 ....................\n[CV]  kmeans__n_clusters=4, knn_clf__n_neighbors=5, score=0.938, total=   0.1s\n[CV] kmeans__n_clusters=4, knn_clf__n_neighbors=5 ....................\n[CV]  kmeans__n_clusters=4, knn_clf__n_neighbors=5, score=0.900, total=   0.1s\n[CV] kmeans__n_clusters=4, knn_clf__n_neighbors=5 ....................\n\n\n[CV]  kmeans__n_clusters=4, knn_clf__n_neighbors=5, score=0.850, total=   0.1s\n[CV] kmeans__n_clusters=4, knn_clf__n_neighbors=5 ....................\n[CV]  kmeans__n_clusters=4, knn_clf__n_neighbors=5, score=0.861, total=   0.1s\n[CV] kmeans__n_clusters=4, knn_clf__n_neighbors=5 ....................\n[CV]  kmeans__n_clusters=4, knn_clf__n_neighbors=5, score=0.861, total=   0.1s\n[CV] kmeans__n_clusters=4, knn_clf__n_neighbors=6 ....................\n[CV]  kmeans__n_clusters=4, knn_clf__n_neighbors=6, score=0.889, total=   0.1s\n[CV] kmeans__n_clusters=4, knn_clf__n_neighbors=6 ....................\n[CV]  kmeans__n_clusters=4, knn_clf__n_neighbors=6, score=0.889, total=   0.1s\n[CV] kmeans__n_clusters=4, knn_clf__n_neighbors=6 ....................\n[CV]  kmeans__n_clusters=4, knn_clf__n_neighbors=6, score=0.863, total=   0.1s\n[CV] kmeans__n_clusters=4, knn_clf__n_neighbors=6 ....................\n[CV]  kmeans__n_clusters=4, knn_clf__n_neighbors=6, score=0.863, total=   0.2s\n[CV] kmeans__n_clusters=4, knn_clf__n_neighbors=6 ....................\n[CV]  kmeans__n_clusters=4, knn_clf__n_neighbors=6, score=0.925, total=   0.1s\n[CV] kmeans__n_clusters=4, knn_clf__n_neighbors=6 ....................\n[CV]  kmeans__n_clusters=4, knn_clf__n_neighbors=6, score=0.912, total=   0.1s\n[CV] kmeans__n_clusters=4, knn_clf__n_neighbors=6 ....................\n[CV]  kmeans__n_clusters=4, knn_clf__n_neighbors=6, score=0.900, total=   0.2s\n[CV] kmeans__n_clusters=4, knn_clf__n_neighbors=6 ....................\n[CV]  kmeans__n_clusters=4, knn_clf__n_neighbors=6, score=0.875, total=   0.1s\n[CV] kmeans__n_clusters=4, knn_clf__n_neighbors=6 ....................\n[CV]  kmeans__n_clusters=4, knn_clf__n_neighbors=6, score=0.848, total=   0.2s\n[CV] kmeans__n_clusters=4, knn_clf__n_neighbors=6 ....................\n[CV]  kmeans__n_clusters=4, knn_clf__n_neighbors=6, score=0.835, total=   0.1s\n[CV] kmeans__n_clusters=4, knn_clf__n_neighbors=7 ....................\n[CV]  kmeans__n_clusters=4, knn_clf__n_neighbors=7, score=0.889, total=   0.2s\n[CV] kmeans__n_clusters=4, knn_clf__n_neighbors=7 ....................\n[CV]  kmeans__n_clusters=4, knn_clf__n_neighbors=7, score=0.901, total=   0.1s\n[CV] kmeans__n_clusters=4, knn_clf__n_neighbors=7 ....................\n[CV]  kmeans__n_clusters=4, knn_clf__n_neighbors=7, score=0.887, total=   0.1s\n[CV] kmeans__n_clusters=4, knn_clf__n_neighbors=7 ....................\n[CV]  kmeans__n_clusters=4, knn_clf__n_neighbors=7, score=0.863, total=   0.2s\n[CV] kmeans__n_clusters=4, knn_clf__n_neighbors=7 ....................\n[CV]  kmeans__n_clusters=4, knn_clf__n_neighbors=7, score=0.900, total=   0.2s\n[CV] kmeans__n_clusters=4, knn_clf__n_neighbors=7 ....................\n[CV]  kmeans__n_clusters=4, knn_clf__n_neighbors=7, score=0.912, total=   0.1s\n[CV] kmeans__n_clusters=4, knn_clf__n_neighbors=7 ....................\n[CV]  kmeans__n_clusters=4, knn_clf__n_neighbors=7, score=0.887, total=   0.1s\n[CV] kmeans__n_clusters=4, knn_clf__n_neighbors=7 ....................\n[CV]  kmeans__n_clusters=4, knn_clf__n_neighbors=7, score=0.900, total=   0.1s\n[CV] kmeans__n_clusters=4, knn_clf__n_neighbors=7 ....................\n[CV]  kmeans__n_clusters=4, knn_clf__n_neighbors=7, score=0.848, total=   0.1s\n[CV] kmeans__n_clusters=4, knn_clf__n_neighbors=7 ....................\n[CV]  kmeans__n_clusters=4, knn_clf__n_neighbors=7, score=0.848, total=   0.1s\n[CV] kmeans__n_clusters=4, knn_clf__n_neighbors=8 ....................\n[CV]  kmeans__n_clusters=4, knn_clf__n_neighbors=8, score=0.877, total=   0.1s\n[CV] kmeans__n_clusters=4, knn_clf__n_neighbors=8 ....................\n[CV]  kmeans__n_clusters=4, knn_clf__n_neighbors=8, score=0.914, total=   0.1s\n[CV] kmeans__n_clusters=4, knn_clf__n_neighbors=8 ....................\n[CV]  kmeans__n_clusters=4, knn_clf__n_neighbors=8, score=0.887, total=   0.1s\n[CV] kmeans__n_clusters=4, knn_clf__n_neighbors=8 ....................\n[CV]  kmeans__n_clusters=4, knn_clf__n_neighbors=8, score=0.863, total=   0.3s\n[CV] kmeans__n_clusters=4, knn_clf__n_neighbors=8 ....................\n[CV]  kmeans__n_clusters=4, knn_clf__n_neighbors=8, score=0.912, total=   0.1s\n[CV] kmeans__n_clusters=4, knn_clf__n_neighbors=8 ....................\n[CV]  kmeans__n_clusters=4, knn_clf__n_neighbors=8, score=0.900, total=   0.1s\n[CV] kmeans__n_clusters=4, knn_clf__n_neighbors=8 ....................\n[CV]  kmeans__n_clusters=4, knn_clf__n_neighbors=8, score=0.912, total=   0.1s\n[CV] kmeans__n_clusters=4, knn_clf__n_neighbors=8 ....................\n[CV]  kmeans__n_clusters=4, knn_clf__n_neighbors=8, score=0.863, total=   0.1s\n[CV] kmeans__n_clusters=4, knn_clf__n_neighbors=8 ....................\n[CV]  kmeans__n_clusters=4, knn_clf__n_neighbors=8, score=0.861, total=   0.1s\n[CV] kmeans__n_clusters=4, knn_clf__n_neighbors=8 ....................\n[CV]  kmeans__n_clusters=4, knn_clf__n_neighbors=8, score=0.823, total=   0.3s\n[CV] kmeans__n_clusters=4, knn_clf__n_neighbors=9 ....................\n[CV]  kmeans__n_clusters=4, knn_clf__n_neighbors=9, score=0.889, total=   0.1s\n[CV] kmeans__n_clusters=4, knn_clf__n_neighbors=9 ....................\n[CV]  kmeans__n_clusters=4, knn_clf__n_neighbors=9, score=0.901, total=   0.1s\n[CV] kmeans__n_clusters=4, knn_clf__n_neighbors=9 ....................\n[CV]  kmeans__n_clusters=4, knn_clf__n_neighbors=9, score=0.887, total=   0.1s\n[CV] kmeans__n_clusters=4, knn_clf__n_neighbors=9 ....................\n[CV]  kmeans__n_clusters=4, knn_clf__n_neighbors=9, score=0.875, total=   0.1s\n[CV] kmeans__n_clusters=4, knn_clf__n_neighbors=9 ....................\n[CV]  kmeans__n_clusters=4, knn_clf__n_neighbors=9, score=0.912, total=   0.1s\n[CV] kmeans__n_clusters=4, knn_clf__n_neighbors=9 ....................\n[CV]  kmeans__n_clusters=4, knn_clf__n_neighbors=9, score=0.875, total=   0.1s\n[CV] kmeans__n_clusters=4, knn_clf__n_neighbors=9 ....................\n[CV]  kmeans__n_clusters=4, knn_clf__n_neighbors=9, score=0.912, total=   0.3s\n[CV] kmeans__n_clusters=4, knn_clf__n_neighbors=9 ....................\n[CV]  kmeans__n_clusters=4, knn_clf__n_neighbors=9, score=0.863, total=   0.1s\n[CV] kmeans__n_clusters=4, knn_clf__n_neighbors=9 ....................\n[CV]  kmeans__n_clusters=4, knn_clf__n_neighbors=9, score=0.861, total=   0.3s\n[CV] kmeans__n_clusters=4, knn_clf__n_neighbors=9 ....................\n[CV]  kmeans__n_clusters=4, knn_clf__n_neighbors=9, score=0.848, total=   0.3s\n[CV] kmeans__n_clusters=5, knn_clf__n_neighbors=1 ....................\n[CV]  kmeans__n_clusters=5, knn_clf__n_neighbors=1, score=0.815, total=   0.2s\n[CV] kmeans__n_clusters=5, knn_clf__n_neighbors=1 ....................\n[CV]  kmeans__n_clusters=5, knn_clf__n_neighbors=1, score=0.802, total=   0.2s\n[CV] kmeans__n_clusters=5, knn_clf__n_neighbors=1 ....................\n[CV]  kmeans__n_clusters=5, knn_clf__n_neighbors=1, score=0.838, total=   0.1s\n[CV] kmeans__n_clusters=5, knn_clf__n_neighbors=1 ....................\n[CV]  kmeans__n_clusters=5, knn_clf__n_neighbors=1, score=0.863, total=   0.2s\n[CV] kmeans__n_clusters=5, knn_clf__n_neighbors=1 ....................\n[CV]  kmeans__n_clusters=5, knn_clf__n_neighbors=1, score=0.838, total=   0.2s\n[CV] kmeans__n_clusters=5, knn_clf__n_neighbors=1 ....................\n[CV]  kmeans__n_clusters=5, knn_clf__n_neighbors=1, score=0.900, total=   0.2s\n[CV] kmeans__n_clusters=5, knn_clf__n_neighbors=1 ....................\n[CV]  kmeans__n_clusters=5, knn_clf__n_neighbors=1, score=0.863, total=   0.2s\n[CV] kmeans__n_clusters=5, knn_clf__n_neighbors=1 ....................\n[CV]  kmeans__n_clusters=5, knn_clf__n_neighbors=1, score=0.775, total=   0.2s\n[CV] kmeans__n_clusters=5, knn_clf__n_neighbors=1 ....................\n[CV]  kmeans__n_clusters=5, knn_clf__n_neighbors=1, score=0.823, total=   0.1s\n[CV] kmeans__n_clusters=5, knn_clf__n_neighbors=1 ....................\n[CV]  kmeans__n_clusters=5, knn_clf__n_neighbors=1, score=0.835, total=   0.2s\n[CV] kmeans__n_clusters=5, knn_clf__n_neighbors=2 ....................\n[CV]  kmeans__n_clusters=5, knn_clf__n_neighbors=2, score=0.827, total=   0.2s\n[CV] kmeans__n_clusters=5, knn_clf__n_neighbors=2 ....................\n[CV]  kmeans__n_clusters=5, knn_clf__n_neighbors=2, score=0.802, total=   0.2s\n[CV] kmeans__n_clusters=5, knn_clf__n_neighbors=2 ....................\n\n\n[CV]  kmeans__n_clusters=5, knn_clf__n_neighbors=2, score=0.850, total=   0.1s\n[CV] kmeans__n_clusters=5, knn_clf__n_neighbors=2 ....................\n[CV]  kmeans__n_clusters=5, knn_clf__n_neighbors=2, score=0.887, total=   0.1s\n[CV] kmeans__n_clusters=5, knn_clf__n_neighbors=2 ....................\n[CV]  kmeans__n_clusters=5, knn_clf__n_neighbors=2, score=0.900, total=   0.4s\n[CV] kmeans__n_clusters=5, knn_clf__n_neighbors=2 ....................\n[CV]  kmeans__n_clusters=5, knn_clf__n_neighbors=2, score=0.900, total=   0.3s\n[CV] kmeans__n_clusters=5, knn_clf__n_neighbors=2 ....................\n[CV]  kmeans__n_clusters=5, knn_clf__n_neighbors=2, score=0.850, total=   0.4s\n[CV] kmeans__n_clusters=5, knn_clf__n_neighbors=2 ....................\n[CV]  kmeans__n_clusters=5, knn_clf__n_neighbors=2, score=0.863, total=   0.3s\n[CV] kmeans__n_clusters=5, knn_clf__n_neighbors=2 ....................\n[CV]  kmeans__n_clusters=5, knn_clf__n_neighbors=2, score=0.848, total=   0.1s\n[CV] kmeans__n_clusters=5, knn_clf__n_neighbors=2 ....................\n[CV]  kmeans__n_clusters=5, knn_clf__n_neighbors=2, score=0.797, total=   0.2s\n[CV] kmeans__n_clusters=5, knn_clf__n_neighbors=3 ....................\n[CV]  kmeans__n_clusters=5, knn_clf__n_neighbors=3, score=0.840, total=   0.2s\n[CV] kmeans__n_clusters=5, knn_clf__n_neighbors=3 ....................\n[CV]  kmeans__n_clusters=5, knn_clf__n_neighbors=3, score=0.790, total=   0.1s\n[CV] kmeans__n_clusters=5, knn_clf__n_neighbors=3 ....................\n[CV]  kmeans__n_clusters=5, knn_clf__n_neighbors=3, score=0.863, total=   0.1s\n[CV] kmeans__n_clusters=5, knn_clf__n_neighbors=3 ....................\n[CV]  kmeans__n_clusters=5, knn_clf__n_neighbors=3, score=0.863, total=   0.1s\n[CV] kmeans__n_clusters=5, knn_clf__n_neighbors=3 ....................\n[CV]  kmeans__n_clusters=5, knn_clf__n_neighbors=3, score=0.900, total=   0.2s\n[CV] kmeans__n_clusters=5, knn_clf__n_neighbors=3 ....................\n[CV]  kmeans__n_clusters=5, knn_clf__n_neighbors=3, score=0.912, total=   0.1s\n[CV] kmeans__n_clusters=5, knn_clf__n_neighbors=3 ....................\n[CV]  kmeans__n_clusters=5, knn_clf__n_neighbors=3, score=0.887, total=   0.2s\n[CV] kmeans__n_clusters=5, knn_clf__n_neighbors=3 ....................\n[CV]  kmeans__n_clusters=5, knn_clf__n_neighbors=3, score=0.863, total=   0.1s\n[CV] kmeans__n_clusters=5, knn_clf__n_neighbors=3 ....................\n[CV]  kmeans__n_clusters=5, knn_clf__n_neighbors=3, score=0.873, total=   0.1s\n[CV] kmeans__n_clusters=5, knn_clf__n_neighbors=3 ....................\n[CV]  kmeans__n_clusters=5, knn_clf__n_neighbors=3, score=0.861, total=   0.1s\n[CV] kmeans__n_clusters=5, knn_clf__n_neighbors=4 ....................\n[CV]  kmeans__n_clusters=5, knn_clf__n_neighbors=4, score=0.852, total=   0.2s\n[CV] kmeans__n_clusters=5, knn_clf__n_neighbors=4 ....................\n[CV]  kmeans__n_clusters=5, knn_clf__n_neighbors=4, score=0.852, total=   0.1s\n[CV] kmeans__n_clusters=5, knn_clf__n_neighbors=4 ....................\n[CV]  kmeans__n_clusters=5, knn_clf__n_neighbors=4, score=0.863, total=   0.1s\n[CV] kmeans__n_clusters=5, knn_clf__n_neighbors=4 ....................\n[CV]  kmeans__n_clusters=5, knn_clf__n_neighbors=4, score=0.875, total=   0.1s\n[CV] kmeans__n_clusters=5, knn_clf__n_neighbors=4 ....................\n[CV]  kmeans__n_clusters=5, knn_clf__n_neighbors=4, score=0.887, total=   0.1s\n[CV] kmeans__n_clusters=5, knn_clf__n_neighbors=4 ....................\n[CV]  kmeans__n_clusters=5, knn_clf__n_neighbors=4, score=0.900, total=   0.1s\n[CV] kmeans__n_clusters=5, knn_clf__n_neighbors=4 ....................\n[CV]  kmeans__n_clusters=5, knn_clf__n_neighbors=4, score=0.887, total=   0.2s\n[CV] kmeans__n_clusters=5, knn_clf__n_neighbors=4 ....................\n[CV]  kmeans__n_clusters=5, knn_clf__n_neighbors=4, score=0.850, total=   0.1s\n[CV] kmeans__n_clusters=5, knn_clf__n_neighbors=4 ....................\n[CV]  kmeans__n_clusters=5, knn_clf__n_neighbors=4, score=0.873, total=   0.1s\n[CV] kmeans__n_clusters=5, knn_clf__n_neighbors=4 ....................\n[CV]  kmeans__n_clusters=5, knn_clf__n_neighbors=4, score=0.848, total=   0.1s\n[CV] kmeans__n_clusters=5, knn_clf__n_neighbors=5 ....................\n[CV]  kmeans__n_clusters=5, knn_clf__n_neighbors=5, score=0.852, total=   0.2s\n[CV] kmeans__n_clusters=5, knn_clf__n_neighbors=5 ....................\n[CV]  kmeans__n_clusters=5, knn_clf__n_neighbors=5, score=0.852, total=   0.1s\n[CV] kmeans__n_clusters=5, knn_clf__n_neighbors=5 ....................\n[CV]  kmeans__n_clusters=5, knn_clf__n_neighbors=5, score=0.850, total=   0.1s\n[CV] kmeans__n_clusters=5, knn_clf__n_neighbors=5 ....................\n[CV]  kmeans__n_clusters=5, knn_clf__n_neighbors=5, score=0.900, total=   0.1s\n[CV] kmeans__n_clusters=5, knn_clf__n_neighbors=5 ....................\n[CV]  kmeans__n_clusters=5, knn_clf__n_neighbors=5, score=0.887, total=   0.2s\n[CV] kmeans__n_clusters=5, knn_clf__n_neighbors=5 ....................\n[CV]  kmeans__n_clusters=5, knn_clf__n_neighbors=5, score=0.925, total=   0.1s\n[CV] kmeans__n_clusters=5, knn_clf__n_neighbors=5 ....................\n[CV]  kmeans__n_clusters=5, knn_clf__n_neighbors=5, score=0.887, total=   0.2s\n[CV] kmeans__n_clusters=5, knn_clf__n_neighbors=5 ....................\n[CV]  kmeans__n_clusters=5, knn_clf__n_neighbors=5, score=0.900, total=   0.1s\n[CV] kmeans__n_clusters=5, knn_clf__n_neighbors=5 ....................\n[CV]  kmeans__n_clusters=5, knn_clf__n_neighbors=5, score=0.861, total=   0.1s\n[CV] kmeans__n_clusters=5, knn_clf__n_neighbors=5 ....................\n[CV]  kmeans__n_clusters=5, knn_clf__n_neighbors=5, score=0.886, total=   0.1s\n[CV] kmeans__n_clusters=5, knn_clf__n_neighbors=6 ....................\n[CV]  kmeans__n_clusters=5, knn_clf__n_neighbors=6, score=0.864, total=   0.2s\n[CV] kmeans__n_clusters=5, knn_clf__n_neighbors=6 ....................\n[CV]  kmeans__n_clusters=5, knn_clf__n_neighbors=6, score=0.901, total=   0.1s\n[CV] kmeans__n_clusters=5, knn_clf__n_neighbors=6 ....................\n[CV]  kmeans__n_clusters=5, knn_clf__n_neighbors=6, score=0.863, total=   0.1s\n[CV] kmeans__n_clusters=5, knn_clf__n_neighbors=6 ....................\n[CV]  kmeans__n_clusters=5, knn_clf__n_neighbors=6, score=0.875, total=   0.1s\n[CV] kmeans__n_clusters=5, knn_clf__n_neighbors=6 ....................\n[CV]  kmeans__n_clusters=5, knn_clf__n_neighbors=6, score=0.887, total=   0.2s\n[CV] kmeans__n_clusters=5, knn_clf__n_neighbors=6 ....................\n[CV]  kmeans__n_clusters=5, knn_clf__n_neighbors=6, score=0.925, total=   0.1s\n[CV] kmeans__n_clusters=5, knn_clf__n_neighbors=6 ....................\n[CV]  kmeans__n_clusters=5, knn_clf__n_neighbors=6, score=0.863, total=   0.2s\n[CV] kmeans__n_clusters=5, knn_clf__n_neighbors=6 ....................\n[CV]  kmeans__n_clusters=5, knn_clf__n_neighbors=6, score=0.887, total=   0.1s\n[CV] kmeans__n_clusters=5, knn_clf__n_neighbors=6 ....................\n[CV]  kmeans__n_clusters=5, knn_clf__n_neighbors=6, score=0.861, total=   0.2s\n[CV] kmeans__n_clusters=5, knn_clf__n_neighbors=6 ....................\n[CV]  kmeans__n_clusters=5, knn_clf__n_neighbors=6, score=0.835, total=   0.1s\n[CV] kmeans__n_clusters=5, knn_clf__n_neighbors=7 ....................\n[CV]  kmeans__n_clusters=5, knn_clf__n_neighbors=7, score=0.877, total=   0.2s\n[CV] kmeans__n_clusters=5, knn_clf__n_neighbors=7 ....................\n[CV]  kmeans__n_clusters=5, knn_clf__n_neighbors=7, score=0.889, total=   0.1s\n[CV] kmeans__n_clusters=5, knn_clf__n_neighbors=7 ....................\n[CV]  kmeans__n_clusters=5, knn_clf__n_neighbors=7, score=0.863, total=   0.1s\n[CV] kmeans__n_clusters=5, knn_clf__n_neighbors=7 ....................\n[CV]  kmeans__n_clusters=5, knn_clf__n_neighbors=7, score=0.887, total=   0.1s\n[CV] kmeans__n_clusters=5, knn_clf__n_neighbors=7 ....................\n[CV]  kmeans__n_clusters=5, knn_clf__n_neighbors=7, score=0.900, total=   0.2s\n[CV] kmeans__n_clusters=5, knn_clf__n_neighbors=7 ....................\n[CV]  kmeans__n_clusters=5, knn_clf__n_neighbors=7, score=0.938, total=   0.1s\n[CV] kmeans__n_clusters=5, knn_clf__n_neighbors=7 ....................\n[CV]  kmeans__n_clusters=5, knn_clf__n_neighbors=7, score=0.887, total=   0.2s\n[CV] kmeans__n_clusters=5, knn_clf__n_neighbors=7 ....................\n[CV]  kmeans__n_clusters=5, knn_clf__n_neighbors=7, score=0.900, total=   0.1s\n[CV] kmeans__n_clusters=5, knn_clf__n_neighbors=7 ....................\n\n\n[CV]  kmeans__n_clusters=5, knn_clf__n_neighbors=7, score=0.848, total=   0.1s\n[CV] kmeans__n_clusters=5, knn_clf__n_neighbors=7 ....................\n[CV]  kmeans__n_clusters=5, knn_clf__n_neighbors=7, score=0.861, total=   0.1s\n[CV] kmeans__n_clusters=5, knn_clf__n_neighbors=8 ....................\n[CV]  kmeans__n_clusters=5, knn_clf__n_neighbors=8, score=0.877, total=   0.2s\n[CV] kmeans__n_clusters=5, knn_clf__n_neighbors=8 ....................\n[CV]  kmeans__n_clusters=5, knn_clf__n_neighbors=8, score=0.901, total=   0.1s\n[CV] kmeans__n_clusters=5, knn_clf__n_neighbors=8 ....................\n[CV]  kmeans__n_clusters=5, knn_clf__n_neighbors=8, score=0.812, total=   0.3s\n[CV] kmeans__n_clusters=5, knn_clf__n_neighbors=8 ....................\n[CV]  kmeans__n_clusters=5, knn_clf__n_neighbors=8, score=0.863, total=   0.3s\n[CV] kmeans__n_clusters=5, knn_clf__n_neighbors=8 ....................\n[CV]  kmeans__n_clusters=5, knn_clf__n_neighbors=8, score=0.887, total=   0.3s\n[CV] kmeans__n_clusters=5, knn_clf__n_neighbors=8 ....................\n[CV]  kmeans__n_clusters=5, knn_clf__n_neighbors=8, score=0.912, total=   0.3s\n[CV] kmeans__n_clusters=5, knn_clf__n_neighbors=8 ....................\n[CV]  kmeans__n_clusters=5, knn_clf__n_neighbors=8, score=0.887, total=   0.4s\n[CV] kmeans__n_clusters=5, knn_clf__n_neighbors=8 ....................\n[CV]  kmeans__n_clusters=5, knn_clf__n_neighbors=8, score=0.887, total=   0.1s\n[CV] kmeans__n_clusters=5, knn_clf__n_neighbors=8 ....................\n[CV]  kmeans__n_clusters=5, knn_clf__n_neighbors=8, score=0.861, total=   0.1s\n[CV] kmeans__n_clusters=5, knn_clf__n_neighbors=8 ....................\n[CV]  kmeans__n_clusters=5, knn_clf__n_neighbors=8, score=0.848, total=   0.1s\n[CV] kmeans__n_clusters=5, knn_clf__n_neighbors=9 ....................\n[CV]  kmeans__n_clusters=5, knn_clf__n_neighbors=9, score=0.864, total=   0.2s\n[CV] kmeans__n_clusters=5, knn_clf__n_neighbors=9 ....................\n[CV]  kmeans__n_clusters=5, knn_clf__n_neighbors=9, score=0.889, total=   0.1s\n[CV] kmeans__n_clusters=5, knn_clf__n_neighbors=9 ....................\n[CV]  kmeans__n_clusters=5, knn_clf__n_neighbors=9, score=0.850, total=   0.1s\n[CV] kmeans__n_clusters=5, knn_clf__n_neighbors=9 ....................\n[CV]  kmeans__n_clusters=5, knn_clf__n_neighbors=9, score=0.887, total=   0.1s\n[CV] kmeans__n_clusters=5, knn_clf__n_neighbors=9 ....................\n[CV]  kmeans__n_clusters=5, knn_clf__n_neighbors=9, score=0.900, total=   0.2s\n[CV] kmeans__n_clusters=5, knn_clf__n_neighbors=9 ....................\n[CV]  kmeans__n_clusters=5, knn_clf__n_neighbors=9, score=0.863, total=   0.1s\n[CV] kmeans__n_clusters=5, knn_clf__n_neighbors=9 ....................\n[CV]  kmeans__n_clusters=5, knn_clf__n_neighbors=9, score=0.887, total=   0.2s\n[CV] kmeans__n_clusters=5, knn_clf__n_neighbors=9 ....................\n[CV]  kmeans__n_clusters=5, knn_clf__n_neighbors=9, score=0.887, total=   0.1s\n[CV] kmeans__n_clusters=5, knn_clf__n_neighbors=9 ....................\n[CV]  kmeans__n_clusters=5, knn_clf__n_neighbors=9, score=0.861, total=   0.1s\n[CV] kmeans__n_clusters=5, knn_clf__n_neighbors=9 ....................\n[CV]  kmeans__n_clusters=5, knn_clf__n_neighbors=9, score=0.823, total=   0.1s\n[CV] kmeans__n_clusters=6, knn_clf__n_neighbors=1 ....................\n[CV]  kmeans__n_clusters=6, knn_clf__n_neighbors=1, score=0.815, total=   0.2s\n[CV] kmeans__n_clusters=6, knn_clf__n_neighbors=1 ....................\n[CV]  kmeans__n_clusters=6, knn_clf__n_neighbors=1, score=0.840, total=   0.2s\n[CV] kmeans__n_clusters=6, knn_clf__n_neighbors=1 ....................\n[CV]  kmeans__n_clusters=6, knn_clf__n_neighbors=1, score=0.875, total=   0.2s\n[CV] kmeans__n_clusters=6, knn_clf__n_neighbors=1 ....................\n[CV]  kmeans__n_clusters=6, knn_clf__n_neighbors=1, score=0.863, total=   0.2s\n[CV] kmeans__n_clusters=6, knn_clf__n_neighbors=1 ....................\n[CV]  kmeans__n_clusters=6, knn_clf__n_neighbors=1, score=0.850, total=   0.2s\n[CV] kmeans__n_clusters=6, knn_clf__n_neighbors=1 ....................\n[CV]  kmeans__n_clusters=6, knn_clf__n_neighbors=1, score=0.875, total=   0.2s\n[CV] kmeans__n_clusters=6, knn_clf__n_neighbors=1 ....................\n[CV]  kmeans__n_clusters=6, knn_clf__n_neighbors=1, score=0.875, total=   0.2s\n[CV] kmeans__n_clusters=6, knn_clf__n_neighbors=1 ....................\n[CV]  kmeans__n_clusters=6, knn_clf__n_neighbors=1, score=0.825, total=   0.2s\n[CV] kmeans__n_clusters=6, knn_clf__n_neighbors=1 ....................\n[CV]  kmeans__n_clusters=6, knn_clf__n_neighbors=1, score=0.899, total=   0.1s\n[CV] kmeans__n_clusters=6, knn_clf__n_neighbors=1 ....................\n[CV]  kmeans__n_clusters=6, knn_clf__n_neighbors=1, score=0.848, total=   0.1s\n[CV] kmeans__n_clusters=6, knn_clf__n_neighbors=2 ....................\n[CV]  kmeans__n_clusters=6, knn_clf__n_neighbors=2, score=0.840, total=   0.2s\n[CV] kmeans__n_clusters=6, knn_clf__n_neighbors=2 ....................\n[CV]  kmeans__n_clusters=6, knn_clf__n_neighbors=2, score=0.815, total=   0.2s\n[CV] kmeans__n_clusters=6, knn_clf__n_neighbors=2 ....................\n[CV]  kmeans__n_clusters=6, knn_clf__n_neighbors=2, score=0.863, total=   0.2s\n[CV] kmeans__n_clusters=6, knn_clf__n_neighbors=2 ....................\n[CV]  kmeans__n_clusters=6, knn_clf__n_neighbors=2, score=0.850, total=   0.2s\n[CV] kmeans__n_clusters=6, knn_clf__n_neighbors=2 ....................\n[CV]  kmeans__n_clusters=6, knn_clf__n_neighbors=2, score=0.875, total=   0.2s\n[CV] kmeans__n_clusters=6, knn_clf__n_neighbors=2 ....................\n[CV]  kmeans__n_clusters=6, knn_clf__n_neighbors=2, score=0.887, total=   0.2s\n[CV] kmeans__n_clusters=6, knn_clf__n_neighbors=2 ....................\n[CV]  kmeans__n_clusters=6, knn_clf__n_neighbors=2, score=0.875, total=   0.2s\n[CV] kmeans__n_clusters=6, knn_clf__n_neighbors=2 ....................\n[CV]  kmeans__n_clusters=6, knn_clf__n_neighbors=2, score=0.825, total=   0.1s\n[CV] kmeans__n_clusters=6, knn_clf__n_neighbors=2 ....................\n[CV]  kmeans__n_clusters=6, knn_clf__n_neighbors=2, score=0.873, total=   0.1s\n[CV] kmeans__n_clusters=6, knn_clf__n_neighbors=2 ....................\n[CV]  kmeans__n_clusters=6, knn_clf__n_neighbors=2, score=0.835, total=   0.1s\n[CV] kmeans__n_clusters=6, knn_clf__n_neighbors=3 ....................\n[CV]  kmeans__n_clusters=6, knn_clf__n_neighbors=3, score=0.877, total=   0.2s\n[CV] kmeans__n_clusters=6, knn_clf__n_neighbors=3 ....................\n[CV]  kmeans__n_clusters=6, knn_clf__n_neighbors=3, score=0.840, total=   0.2s\n[CV] kmeans__n_clusters=6, knn_clf__n_neighbors=3 ....................\n[CV]  kmeans__n_clusters=6, knn_clf__n_neighbors=3, score=0.863, total=   0.2s\n[CV] kmeans__n_clusters=6, knn_clf__n_neighbors=3 ....................\n[CV]  kmeans__n_clusters=6, knn_clf__n_neighbors=3, score=0.887, total=   0.2s\n[CV] kmeans__n_clusters=6, knn_clf__n_neighbors=3 ....................\n[CV]  kmeans__n_clusters=6, knn_clf__n_neighbors=3, score=0.863, total=   0.2s\n[CV] kmeans__n_clusters=6, knn_clf__n_neighbors=3 ....................\n[CV]  kmeans__n_clusters=6, knn_clf__n_neighbors=3, score=0.925, total=   0.2s\n[CV] kmeans__n_clusters=6, knn_clf__n_neighbors=3 ....................\n[CV]  kmeans__n_clusters=6, knn_clf__n_neighbors=3, score=0.875, total=   0.2s\n[CV] kmeans__n_clusters=6, knn_clf__n_neighbors=3 ....................\n[CV]  kmeans__n_clusters=6, knn_clf__n_neighbors=3, score=0.838, total=   0.4s\n[CV] kmeans__n_clusters=6, knn_clf__n_neighbors=3 ....................\n[CV]  kmeans__n_clusters=6, knn_clf__n_neighbors=3, score=0.848, total=   0.2s\n[CV] kmeans__n_clusters=6, knn_clf__n_neighbors=3 ....................\n[CV]  kmeans__n_clusters=6, knn_clf__n_neighbors=3, score=0.873, total=   0.1s\n[CV] kmeans__n_clusters=6, knn_clf__n_neighbors=4 ....................\n[CV]  kmeans__n_clusters=6, knn_clf__n_neighbors=4, score=0.877, total=   0.2s\n[CV] kmeans__n_clusters=6, knn_clf__n_neighbors=4 ....................\n[CV]  kmeans__n_clusters=6, knn_clf__n_neighbors=4, score=0.852, total=   0.2s\n[CV] kmeans__n_clusters=6, knn_clf__n_neighbors=4 ....................\n[CV]  kmeans__n_clusters=6, knn_clf__n_neighbors=4, score=0.850, total=   0.2s\n[CV] kmeans__n_clusters=6, knn_clf__n_neighbors=4 ....................\n[CV]  kmeans__n_clusters=6, knn_clf__n_neighbors=4, score=0.887, total=   0.2s\n[CV] kmeans__n_clusters=6, knn_clf__n_neighbors=4 ....................\n\n\n[CV]  kmeans__n_clusters=6, knn_clf__n_neighbors=4, score=0.863, total=   0.2s\n[CV] kmeans__n_clusters=6, knn_clf__n_neighbors=4 ....................\n[CV]  kmeans__n_clusters=6, knn_clf__n_neighbors=4, score=0.900, total=   0.2s\n[CV] kmeans__n_clusters=6, knn_clf__n_neighbors=4 ....................\n[CV]  kmeans__n_clusters=6, knn_clf__n_neighbors=4, score=0.887, total=   0.3s\n[CV] kmeans__n_clusters=6, knn_clf__n_neighbors=4 ....................\n[CV]  kmeans__n_clusters=6, knn_clf__n_neighbors=4, score=0.850, total=   0.3s\n[CV] kmeans__n_clusters=6, knn_clf__n_neighbors=4 ....................\n[CV]  kmeans__n_clusters=6, knn_clf__n_neighbors=4, score=0.886, total=   0.1s\n[CV] kmeans__n_clusters=6, knn_clf__n_neighbors=4 ....................\n[CV]  kmeans__n_clusters=6, knn_clf__n_neighbors=4, score=0.823, total=   0.1s\n[CV] kmeans__n_clusters=6, knn_clf__n_neighbors=5 ....................\n[CV]  kmeans__n_clusters=6, knn_clf__n_neighbors=5, score=0.889, total=   0.1s\n[CV] kmeans__n_clusters=6, knn_clf__n_neighbors=5 ....................\n[CV]  kmeans__n_clusters=6, knn_clf__n_neighbors=5, score=0.877, total=   0.4s\n[CV] kmeans__n_clusters=6, knn_clf__n_neighbors=5 ....................\n[CV]  kmeans__n_clusters=6, knn_clf__n_neighbors=5, score=0.863, total=   0.3s\n[CV] kmeans__n_clusters=6, knn_clf__n_neighbors=5 ....................\n[CV]  kmeans__n_clusters=6, knn_clf__n_neighbors=5, score=0.863, total=   0.3s\n[CV] kmeans__n_clusters=6, knn_clf__n_neighbors=5 ....................\n[CV]  kmeans__n_clusters=6, knn_clf__n_neighbors=5, score=0.838, total=   0.4s\n[CV] kmeans__n_clusters=6, knn_clf__n_neighbors=5 ....................\n[CV]  kmeans__n_clusters=6, knn_clf__n_neighbors=5, score=0.925, total=   0.2s\n[CV] kmeans__n_clusters=6, knn_clf__n_neighbors=5 ....................\n[CV]  kmeans__n_clusters=6, knn_clf__n_neighbors=5, score=0.875, total=   0.3s\n[CV] kmeans__n_clusters=6, knn_clf__n_neighbors=5 ....................\n[CV]  kmeans__n_clusters=6, knn_clf__n_neighbors=5, score=0.875, total=   0.2s\n[CV] kmeans__n_clusters=6, knn_clf__n_neighbors=5 ....................\n[CV]  kmeans__n_clusters=6, knn_clf__n_neighbors=5, score=0.861, total=   0.3s\n[CV] kmeans__n_clusters=6, knn_clf__n_neighbors=5 ....................\n[CV]  kmeans__n_clusters=6, knn_clf__n_neighbors=5, score=0.848, total=   0.1s\n[CV] kmeans__n_clusters=6, knn_clf__n_neighbors=6 ....................\n[CV]  kmeans__n_clusters=6, knn_clf__n_neighbors=6, score=0.889, total=   0.2s\n[CV] kmeans__n_clusters=6, knn_clf__n_neighbors=6 ....................\n[CV]  kmeans__n_clusters=6, knn_clf__n_neighbors=6, score=0.901, total=   0.2s\n[CV] kmeans__n_clusters=6, knn_clf__n_neighbors=6 ....................\n[CV]  kmeans__n_clusters=6, knn_clf__n_neighbors=6, score=0.863, total=   0.2s\n[CV] kmeans__n_clusters=6, knn_clf__n_neighbors=6 ....................\n[CV]  kmeans__n_clusters=6, knn_clf__n_neighbors=6, score=0.850, total=   0.2s\n[CV] kmeans__n_clusters=6, knn_clf__n_neighbors=6 ....................\n[CV]  kmeans__n_clusters=6, knn_clf__n_neighbors=6, score=0.875, total=   0.2s\n[CV] kmeans__n_clusters=6, knn_clf__n_neighbors=6 ....................\n[CV]  kmeans__n_clusters=6, knn_clf__n_neighbors=6, score=0.950, total=   0.2s\n[CV] kmeans__n_clusters=6, knn_clf__n_neighbors=6 ....................\n[CV]  kmeans__n_clusters=6, knn_clf__n_neighbors=6, score=0.863, total=   0.2s\n[CV] kmeans__n_clusters=6, knn_clf__n_neighbors=6 ....................\n[CV]  kmeans__n_clusters=6, knn_clf__n_neighbors=6, score=0.850, total=   0.2s\n[CV] kmeans__n_clusters=6, knn_clf__n_neighbors=6 ....................\n[CV]  kmeans__n_clusters=6, knn_clf__n_neighbors=6, score=0.861, total=   0.2s\n[CV] kmeans__n_clusters=6, knn_clf__n_neighbors=6 ....................\n[CV]  kmeans__n_clusters=6, knn_clf__n_neighbors=6, score=0.835, total=   0.1s\n[CV] kmeans__n_clusters=6, knn_clf__n_neighbors=7 ....................\n[CV]  kmeans__n_clusters=6, knn_clf__n_neighbors=7, score=0.889, total=   0.2s\n[CV] kmeans__n_clusters=6, knn_clf__n_neighbors=7 ....................\n[CV]  kmeans__n_clusters=6, knn_clf__n_neighbors=7, score=0.889, total=   0.2s\n[CV] kmeans__n_clusters=6, knn_clf__n_neighbors=7 ....................\n[CV]  kmeans__n_clusters=6, knn_clf__n_neighbors=7, score=0.863, total=   0.2s\n[CV] kmeans__n_clusters=6, knn_clf__n_neighbors=7 ....................\n[CV]  kmeans__n_clusters=6, knn_clf__n_neighbors=7, score=0.850, total=   0.2s\n[CV] kmeans__n_clusters=6, knn_clf__n_neighbors=7 ....................\n[CV]  kmeans__n_clusters=6, knn_clf__n_neighbors=7, score=0.863, total=   0.2s\n[CV] kmeans__n_clusters=6, knn_clf__n_neighbors=7 ....................\n[CV]  kmeans__n_clusters=6, knn_clf__n_neighbors=7, score=0.900, total=   0.2s\n[CV] kmeans__n_clusters=6, knn_clf__n_neighbors=7 ....................\n[CV]  kmeans__n_clusters=6, knn_clf__n_neighbors=7, score=0.887, total=   0.2s\n[CV] kmeans__n_clusters=6, knn_clf__n_neighbors=7 ....................\n[CV]  kmeans__n_clusters=6, knn_clf__n_neighbors=7, score=0.887, total=   0.2s\n[CV] kmeans__n_clusters=6, knn_clf__n_neighbors=7 ....................\n[CV]  kmeans__n_clusters=6, knn_clf__n_neighbors=7, score=0.861, total=   0.2s\n[CV] kmeans__n_clusters=6, knn_clf__n_neighbors=7 ....................\n[CV]  kmeans__n_clusters=6, knn_clf__n_neighbors=7, score=0.823, total=   0.1s\n[CV] kmeans__n_clusters=6, knn_clf__n_neighbors=8 ....................\n[CV]  kmeans__n_clusters=6, knn_clf__n_neighbors=8, score=0.877, total=   0.2s\n[CV] kmeans__n_clusters=6, knn_clf__n_neighbors=8 ....................\n[CV]  kmeans__n_clusters=6, knn_clf__n_neighbors=8, score=0.889, total=   0.2s\n[CV] kmeans__n_clusters=6, knn_clf__n_neighbors=8 ....................\n[CV]  kmeans__n_clusters=6, knn_clf__n_neighbors=8, score=0.850, total=   0.2s\n[CV] kmeans__n_clusters=6, knn_clf__n_neighbors=8 ....................\n[CV]  kmeans__n_clusters=6, knn_clf__n_neighbors=8, score=0.838, total=   0.2s\n[CV] kmeans__n_clusters=6, knn_clf__n_neighbors=8 ....................\n[CV]  kmeans__n_clusters=6, knn_clf__n_neighbors=8, score=0.900, total=   0.2s\n[CV] kmeans__n_clusters=6, knn_clf__n_neighbors=8 ....................\n[CV]  kmeans__n_clusters=6, knn_clf__n_neighbors=8, score=0.925, total=   0.3s\n[CV] kmeans__n_clusters=6, knn_clf__n_neighbors=8 ....................\n[CV]  kmeans__n_clusters=6, knn_clf__n_neighbors=8, score=0.887, total=   0.3s\n[CV] kmeans__n_clusters=6, knn_clf__n_neighbors=8 ....................\n[CV]  kmeans__n_clusters=6, knn_clf__n_neighbors=8, score=0.875, total=   0.3s\n[CV] kmeans__n_clusters=6, knn_clf__n_neighbors=8 ....................\n[CV]  kmeans__n_clusters=6, knn_clf__n_neighbors=8, score=0.873, total=   0.1s\n[CV] kmeans__n_clusters=6, knn_clf__n_neighbors=8 ....................\n[CV]  kmeans__n_clusters=6, knn_clf__n_neighbors=8, score=0.835, total=   0.1s\n[CV] kmeans__n_clusters=6, knn_clf__n_neighbors=9 ....................\n[CV]  kmeans__n_clusters=6, knn_clf__n_neighbors=9, score=0.889, total=   0.1s\n[CV] kmeans__n_clusters=6, knn_clf__n_neighbors=9 ....................\n[CV]  kmeans__n_clusters=6, knn_clf__n_neighbors=9, score=0.889, total=   0.2s\n[CV] kmeans__n_clusters=6, knn_clf__n_neighbors=9 ....................\n[CV]  kmeans__n_clusters=6, knn_clf__n_neighbors=9, score=0.863, total=   0.2s\n[CV] kmeans__n_clusters=6, knn_clf__n_neighbors=9 ....................\n[CV]  kmeans__n_clusters=6, knn_clf__n_neighbors=9, score=0.850, total=   0.2s\n[CV] kmeans__n_clusters=6, knn_clf__n_neighbors=9 ....................\n[CV]  kmeans__n_clusters=6, knn_clf__n_neighbors=9, score=0.887, total=   0.2s\n[CV] kmeans__n_clusters=6, knn_clf__n_neighbors=9 ....................\n[CV]  kmeans__n_clusters=6, knn_clf__n_neighbors=9, score=0.925, total=   0.2s\n[CV] kmeans__n_clusters=6, knn_clf__n_neighbors=9 ....................\n[CV]  kmeans__n_clusters=6, knn_clf__n_neighbors=9, score=0.887, total=   0.2s\n[CV] kmeans__n_clusters=6, knn_clf__n_neighbors=9 ....................\n[CV]  kmeans__n_clusters=6, knn_clf__n_neighbors=9, score=0.900, total=   0.2s\n[CV] kmeans__n_clusters=6, knn_clf__n_neighbors=9 ....................\n[CV]  kmeans__n_clusters=6, knn_clf__n_neighbors=9, score=0.873, total=   0.2s\n[CV] kmeans__n_clusters=6, knn_clf__n_neighbors=9 ....................\n[CV]  kmeans__n_clusters=6, knn_clf__n_neighbors=9, score=0.835, total=   0.1s\n[CV] kmeans__n_clusters=7, knn_clf__n_neighbors=1 ....................\n\n\n[CV]  kmeans__n_clusters=7, knn_clf__n_neighbors=1, score=0.889, total=   0.2s\n[CV] kmeans__n_clusters=7, knn_clf__n_neighbors=1 ....................\n[CV]  kmeans__n_clusters=7, knn_clf__n_neighbors=1, score=0.827, total=   0.2s\n[CV] kmeans__n_clusters=7, knn_clf__n_neighbors=1 ....................\n[CV]  kmeans__n_clusters=7, knn_clf__n_neighbors=1, score=0.825, total=   0.2s\n[CV] kmeans__n_clusters=7, knn_clf__n_neighbors=1 ....................\n[CV]  kmeans__n_clusters=7, knn_clf__n_neighbors=1, score=0.863, total=   0.2s\n[CV] kmeans__n_clusters=7, knn_clf__n_neighbors=1 ....................\n[CV]  kmeans__n_clusters=7, knn_clf__n_neighbors=1, score=0.812, total=   0.1s\n[CV] kmeans__n_clusters=7, knn_clf__n_neighbors=1 ....................\n[CV]  kmeans__n_clusters=7, knn_clf__n_neighbors=1, score=0.900, total=   0.2s\n[CV] kmeans__n_clusters=7, knn_clf__n_neighbors=1 ....................\n[CV]  kmeans__n_clusters=7, knn_clf__n_neighbors=1, score=0.875, total=   0.2s\n[CV] kmeans__n_clusters=7, knn_clf__n_neighbors=1 ....................\n[CV]  kmeans__n_clusters=7, knn_clf__n_neighbors=1, score=0.825, total=   0.2s\n[CV] kmeans__n_clusters=7, knn_clf__n_neighbors=1 ....................\n[CV]  kmeans__n_clusters=7, knn_clf__n_neighbors=1, score=0.861, total=   0.2s\n[CV] kmeans__n_clusters=7, knn_clf__n_neighbors=1 ....................\n[CV]  kmeans__n_clusters=7, knn_clf__n_neighbors=1, score=0.823, total=   0.2s\n[CV] kmeans__n_clusters=7, knn_clf__n_neighbors=2 ....................\n[CV]  kmeans__n_clusters=7, knn_clf__n_neighbors=2, score=0.852, total=   0.2s\n[CV] kmeans__n_clusters=7, knn_clf__n_neighbors=2 ....................\n[CV]  kmeans__n_clusters=7, knn_clf__n_neighbors=2, score=0.852, total=   0.2s\n[CV] kmeans__n_clusters=7, knn_clf__n_neighbors=2 ....................\n[CV]  kmeans__n_clusters=7, knn_clf__n_neighbors=2, score=0.838, total=   0.2s\n[CV] kmeans__n_clusters=7, knn_clf__n_neighbors=2 ....................\n[CV]  kmeans__n_clusters=7, knn_clf__n_neighbors=2, score=0.850, total=   0.2s\n[CV] kmeans__n_clusters=7, knn_clf__n_neighbors=2 ....................\n[CV]  kmeans__n_clusters=7, knn_clf__n_neighbors=2, score=0.887, total=   0.1s\n[CV] kmeans__n_clusters=7, knn_clf__n_neighbors=2 ....................\n[CV]  kmeans__n_clusters=7, knn_clf__n_neighbors=2, score=0.863, total=   0.2s\n[CV] kmeans__n_clusters=7, knn_clf__n_neighbors=2 ....................\n[CV]  kmeans__n_clusters=7, knn_clf__n_neighbors=2, score=0.863, total=   0.2s\n[CV] kmeans__n_clusters=7, knn_clf__n_neighbors=2 ....................\n[CV]  kmeans__n_clusters=7, knn_clf__n_neighbors=2, score=0.838, total=   0.2s\n[CV] kmeans__n_clusters=7, knn_clf__n_neighbors=2 ....................\n[CV]  kmeans__n_clusters=7, knn_clf__n_neighbors=2, score=0.899, total=   0.2s\n[CV] kmeans__n_clusters=7, knn_clf__n_neighbors=2 ....................\n[CV]  kmeans__n_clusters=7, knn_clf__n_neighbors=2, score=0.810, total=   0.2s\n[CV] kmeans__n_clusters=7, knn_clf__n_neighbors=3 ....................\n[CV]  kmeans__n_clusters=7, knn_clf__n_neighbors=3, score=0.889, total=   0.2s\n[CV] kmeans__n_clusters=7, knn_clf__n_neighbors=3 ....................\n[CV]  kmeans__n_clusters=7, knn_clf__n_neighbors=3, score=0.827, total=   0.3s\n[CV] kmeans__n_clusters=7, knn_clf__n_neighbors=3 ....................\n[CV]  kmeans__n_clusters=7, knn_clf__n_neighbors=3, score=0.825, total=   0.2s\n[CV] kmeans__n_clusters=7, knn_clf__n_neighbors=3 ....................\n[CV]  kmeans__n_clusters=7, knn_clf__n_neighbors=3, score=0.863, total=   0.2s\n[CV] kmeans__n_clusters=7, knn_clf__n_neighbors=3 ....................\n[CV]  kmeans__n_clusters=7, knn_clf__n_neighbors=3, score=0.825, total=   0.1s\n[CV] kmeans__n_clusters=7, knn_clf__n_neighbors=3 ....................\n[CV]  kmeans__n_clusters=7, knn_clf__n_neighbors=3, score=0.912, total=   0.2s\n[CV] kmeans__n_clusters=7, knn_clf__n_neighbors=3 ....................\n[CV]  kmeans__n_clusters=7, knn_clf__n_neighbors=3, score=0.875, total=   0.3s\n[CV] kmeans__n_clusters=7, knn_clf__n_neighbors=3 ....................\n[CV]  kmeans__n_clusters=7, knn_clf__n_neighbors=3, score=0.863, total=   0.2s\n[CV] kmeans__n_clusters=7, knn_clf__n_neighbors=3 ....................\n[CV]  kmeans__n_clusters=7, knn_clf__n_neighbors=3, score=0.873, total=   0.2s\n[CV] kmeans__n_clusters=7, knn_clf__n_neighbors=3 ....................\n[CV]  kmeans__n_clusters=7, knn_clf__n_neighbors=3, score=0.848, total=   0.2s\n[CV] kmeans__n_clusters=7, knn_clf__n_neighbors=4 ....................\n[CV]  kmeans__n_clusters=7, knn_clf__n_neighbors=4, score=0.889, total=   0.2s\n[CV] kmeans__n_clusters=7, knn_clf__n_neighbors=4 ....................\n[CV]  kmeans__n_clusters=7, knn_clf__n_neighbors=4, score=0.864, total=   0.2s\n[CV] kmeans__n_clusters=7, knn_clf__n_neighbors=4 ....................\n[CV]  kmeans__n_clusters=7, knn_clf__n_neighbors=4, score=0.863, total=   0.2s\n[CV] kmeans__n_clusters=7, knn_clf__n_neighbors=4 ....................\n[CV]  kmeans__n_clusters=7, knn_clf__n_neighbors=4, score=0.850, total=   0.2s\n[CV] kmeans__n_clusters=7, knn_clf__n_neighbors=4 ....................\n[CV]  kmeans__n_clusters=7, knn_clf__n_neighbors=4, score=0.825, total=   0.2s\n[CV] kmeans__n_clusters=7, knn_clf__n_neighbors=4 ....................\n[CV]  kmeans__n_clusters=7, knn_clf__n_neighbors=4, score=0.887, total=   0.2s\n[CV] kmeans__n_clusters=7, knn_clf__n_neighbors=4 ....................\n[CV]  kmeans__n_clusters=7, knn_clf__n_neighbors=4, score=0.887, total=   0.2s\n[CV] kmeans__n_clusters=7, knn_clf__n_neighbors=4 ....................\n[CV]  kmeans__n_clusters=7, knn_clf__n_neighbors=4, score=0.825, total=   0.2s\n[CV] kmeans__n_clusters=7, knn_clf__n_neighbors=4 ....................\n[CV]  kmeans__n_clusters=7, knn_clf__n_neighbors=4, score=0.886, total=   0.2s\n[CV] kmeans__n_clusters=7, knn_clf__n_neighbors=4 ....................\n[CV]  kmeans__n_clusters=7, knn_clf__n_neighbors=4, score=0.848, total=   0.2s\n[CV] kmeans__n_clusters=7, knn_clf__n_neighbors=5 ....................\n[CV]  kmeans__n_clusters=7, knn_clf__n_neighbors=5, score=0.877, total=   0.2s\n[CV] kmeans__n_clusters=7, knn_clf__n_neighbors=5 ....................\n[CV]  kmeans__n_clusters=7, knn_clf__n_neighbors=5, score=0.864, total=   0.2s\n[CV] kmeans__n_clusters=7, knn_clf__n_neighbors=5 ....................\n[CV]  kmeans__n_clusters=7, knn_clf__n_neighbors=5, score=0.850, total=   0.2s\n[CV] kmeans__n_clusters=7, knn_clf__n_neighbors=5 ....................\n[CV]  kmeans__n_clusters=7, knn_clf__n_neighbors=5, score=0.887, total=   0.2s\n[CV] kmeans__n_clusters=7, knn_clf__n_neighbors=5 ....................\n[CV]  kmeans__n_clusters=7, knn_clf__n_neighbors=5, score=0.863, total=   0.1s\n[CV] kmeans__n_clusters=7, knn_clf__n_neighbors=5 ....................\n[CV]  kmeans__n_clusters=7, knn_clf__n_neighbors=5, score=0.925, total=   0.2s\n[CV] kmeans__n_clusters=7, knn_clf__n_neighbors=5 ....................\n[CV]  kmeans__n_clusters=7, knn_clf__n_neighbors=5, score=0.875, total=   0.2s\n[CV] kmeans__n_clusters=7, knn_clf__n_neighbors=5 ....................\n[CV]  kmeans__n_clusters=7, knn_clf__n_neighbors=5, score=0.850, total=   0.2s\n[CV] kmeans__n_clusters=7, knn_clf__n_neighbors=5 ....................\n[CV]  kmeans__n_clusters=7, knn_clf__n_neighbors=5, score=0.886, total=   0.2s\n[CV] kmeans__n_clusters=7, knn_clf__n_neighbors=5 ....................\n[CV]  kmeans__n_clusters=7, knn_clf__n_neighbors=5, score=0.861, total=   0.2s\n[CV] kmeans__n_clusters=7, knn_clf__n_neighbors=6 ....................\n[CV]  kmeans__n_clusters=7, knn_clf__n_neighbors=6, score=0.877, total=   0.2s\n[CV] kmeans__n_clusters=7, knn_clf__n_neighbors=6 ....................\n[CV]  kmeans__n_clusters=7, knn_clf__n_neighbors=6, score=0.864, total=   0.2s\n[CV] kmeans__n_clusters=7, knn_clf__n_neighbors=6 ....................\n[CV]  kmeans__n_clusters=7, knn_clf__n_neighbors=6, score=0.838, total=   0.2s\n[CV] kmeans__n_clusters=7, knn_clf__n_neighbors=6 ....................\n[CV]  kmeans__n_clusters=7, knn_clf__n_neighbors=6, score=0.850, total=   0.2s\n[CV] kmeans__n_clusters=7, knn_clf__n_neighbors=6 ....................\n[CV]  kmeans__n_clusters=7, knn_clf__n_neighbors=6, score=0.887, total=   0.2s\n[CV] kmeans__n_clusters=7, knn_clf__n_neighbors=6 ....................\n[CV]  kmeans__n_clusters=7, knn_clf__n_neighbors=6, score=0.887, total=   0.2s\n[CV] kmeans__n_clusters=7, knn_clf__n_neighbors=6 ....................\n\n\n[CV]  kmeans__n_clusters=7, knn_clf__n_neighbors=6, score=0.887, total=   0.2s\n[CV] kmeans__n_clusters=7, knn_clf__n_neighbors=6 ....................\n[CV]  kmeans__n_clusters=7, knn_clf__n_neighbors=6, score=0.838, total=   0.2s\n[CV] kmeans__n_clusters=7, knn_clf__n_neighbors=6 ....................\n[CV]  kmeans__n_clusters=7, knn_clf__n_neighbors=6, score=0.873, total=   0.2s\n[CV] kmeans__n_clusters=7, knn_clf__n_neighbors=6 ....................\n[CV]  kmeans__n_clusters=7, knn_clf__n_neighbors=6, score=0.835, total=   0.2s\n[CV] kmeans__n_clusters=7, knn_clf__n_neighbors=7 ....................\n[CV]  kmeans__n_clusters=7, knn_clf__n_neighbors=7, score=0.877, total=   0.3s\n[CV] kmeans__n_clusters=7, knn_clf__n_neighbors=7 ....................\n[CV]  kmeans__n_clusters=7, knn_clf__n_neighbors=7, score=0.864, total=   0.2s\n[CV] kmeans__n_clusters=7, knn_clf__n_neighbors=7 ....................\n[CV]  kmeans__n_clusters=7, knn_clf__n_neighbors=7, score=0.838, total=   0.3s\n[CV] kmeans__n_clusters=7, knn_clf__n_neighbors=7 ....................\n[CV]  kmeans__n_clusters=7, knn_clf__n_neighbors=7, score=0.887, total=   0.2s\n[CV] kmeans__n_clusters=7, knn_clf__n_neighbors=7 ....................\n[CV]  kmeans__n_clusters=7, knn_clf__n_neighbors=7, score=0.875, total=   0.2s\n[CV] kmeans__n_clusters=7, knn_clf__n_neighbors=7 ....................\n[CV]  kmeans__n_clusters=7, knn_clf__n_neighbors=7, score=0.887, total=   0.2s\n[CV] kmeans__n_clusters=7, knn_clf__n_neighbors=7 ....................\n[CV]  kmeans__n_clusters=7, knn_clf__n_neighbors=7, score=0.875, total=   0.2s\n[CV] kmeans__n_clusters=7, knn_clf__n_neighbors=7 ....................\n[CV]  kmeans__n_clusters=7, knn_clf__n_neighbors=7, score=0.838, total=   0.2s\n[CV] kmeans__n_clusters=7, knn_clf__n_neighbors=7 ....................\n[CV]  kmeans__n_clusters=7, knn_clf__n_neighbors=7, score=0.886, total=   0.2s\n[CV] kmeans__n_clusters=7, knn_clf__n_neighbors=7 ....................\n[CV]  kmeans__n_clusters=7, knn_clf__n_neighbors=7, score=0.835, total=   0.2s\n[CV] kmeans__n_clusters=7, knn_clf__n_neighbors=8 ....................\n[CV]  kmeans__n_clusters=7, knn_clf__n_neighbors=8, score=0.864, total=   0.2s\n[CV] kmeans__n_clusters=7, knn_clf__n_neighbors=8 ....................\n[CV]  kmeans__n_clusters=7, knn_clf__n_neighbors=8, score=0.877, total=   0.2s\n[CV] kmeans__n_clusters=7, knn_clf__n_neighbors=8 ....................\n[CV]  kmeans__n_clusters=7, knn_clf__n_neighbors=8, score=0.850, total=   0.3s\n[CV] kmeans__n_clusters=7, knn_clf__n_neighbors=8 ....................\n[CV]  kmeans__n_clusters=7, knn_clf__n_neighbors=8, score=0.863, total=   0.4s\n[CV] kmeans__n_clusters=7, knn_clf__n_neighbors=8 ....................\n[CV]  kmeans__n_clusters=7, knn_clf__n_neighbors=8, score=0.912, total=   0.3s\n[CV] kmeans__n_clusters=7, knn_clf__n_neighbors=8 ....................\n[CV]  kmeans__n_clusters=7, knn_clf__n_neighbors=8, score=0.887, total=   0.5s\n[CV] kmeans__n_clusters=7, knn_clf__n_neighbors=8 ....................\n[CV]  kmeans__n_clusters=7, knn_clf__n_neighbors=8, score=0.887, total=   0.4s\n[CV] kmeans__n_clusters=7, knn_clf__n_neighbors=8 ....................\n[CV]  kmeans__n_clusters=7, knn_clf__n_neighbors=8, score=0.863, total=   0.2s\n[CV] kmeans__n_clusters=7, knn_clf__n_neighbors=8 ....................\n[CV]  kmeans__n_clusters=7, knn_clf__n_neighbors=8, score=0.873, total=   0.2s\n[CV] kmeans__n_clusters=7, knn_clf__n_neighbors=8 ....................\n[CV]  kmeans__n_clusters=7, knn_clf__n_neighbors=8, score=0.823, total=   0.2s\n[CV] kmeans__n_clusters=7, knn_clf__n_neighbors=9 ....................\n[CV]  kmeans__n_clusters=7, knn_clf__n_neighbors=9, score=0.877, total=   0.3s\n[CV] kmeans__n_clusters=7, knn_clf__n_neighbors=9 ....................\n[CV]  kmeans__n_clusters=7, knn_clf__n_neighbors=9, score=0.864, total=   0.5s\n[CV] kmeans__n_clusters=7, knn_clf__n_neighbors=9 ....................\n[CV]  kmeans__n_clusters=7, knn_clf__n_neighbors=9, score=0.838, total=   0.3s\n[CV] kmeans__n_clusters=7, knn_clf__n_neighbors=9 ....................\n[CV]  kmeans__n_clusters=7, knn_clf__n_neighbors=9, score=0.875, total=   0.5s\n[CV] kmeans__n_clusters=7, knn_clf__n_neighbors=9 ....................\n[CV]  kmeans__n_clusters=7, knn_clf__n_neighbors=9, score=0.900, total=   0.3s\n[CV] kmeans__n_clusters=7, knn_clf__n_neighbors=9 ....................\n[CV]  kmeans__n_clusters=7, knn_clf__n_neighbors=9, score=0.887, total=   0.3s\n[CV] kmeans__n_clusters=7, knn_clf__n_neighbors=9 ....................\n[CV]  kmeans__n_clusters=7, knn_clf__n_neighbors=9, score=0.863, total=   0.2s\n[CV] kmeans__n_clusters=7, knn_clf__n_neighbors=9 ....................\n[CV]  kmeans__n_clusters=7, knn_clf__n_neighbors=9, score=0.863, total=   0.2s\n[CV] kmeans__n_clusters=7, knn_clf__n_neighbors=9 ....................\n[CV]  kmeans__n_clusters=7, knn_clf__n_neighbors=9, score=0.873, total=   0.3s\n[CV] kmeans__n_clusters=7, knn_clf__n_neighbors=9 ....................\n[CV]  kmeans__n_clusters=7, knn_clf__n_neighbors=9, score=0.848, total=   0.2s\n[CV] kmeans__n_clusters=8, knn_clf__n_neighbors=1 ....................\n[CV]  kmeans__n_clusters=8, knn_clf__n_neighbors=1, score=0.852, total=   0.3s\n[CV] kmeans__n_clusters=8, knn_clf__n_neighbors=1 ....................\n[CV]  kmeans__n_clusters=8, knn_clf__n_neighbors=1, score=0.840, total=   0.2s\n[CV] kmeans__n_clusters=8, knn_clf__n_neighbors=1 ....................\n[CV]  kmeans__n_clusters=8, knn_clf__n_neighbors=1, score=0.825, total=   0.2s\n[CV] kmeans__n_clusters=8, knn_clf__n_neighbors=1 ....................\n[CV]  kmeans__n_clusters=8, knn_clf__n_neighbors=1, score=0.800, total=   0.2s\n[CV] kmeans__n_clusters=8, knn_clf__n_neighbors=1 ....................\n[CV]  kmeans__n_clusters=8, knn_clf__n_neighbors=1, score=0.738, total=   0.2s\n[CV] kmeans__n_clusters=8, knn_clf__n_neighbors=1 ....................\n[CV]  kmeans__n_clusters=8, knn_clf__n_neighbors=1, score=0.887, total=   0.2s\n[CV] kmeans__n_clusters=8, knn_clf__n_neighbors=1 ....................\n[CV]  kmeans__n_clusters=8, knn_clf__n_neighbors=1, score=0.863, total=   0.2s\n[CV] kmeans__n_clusters=8, knn_clf__n_neighbors=1 ....................\n[CV]  kmeans__n_clusters=8, knn_clf__n_neighbors=1, score=0.775, total=   0.2s\n[CV] kmeans__n_clusters=8, knn_clf__n_neighbors=1 ....................\n[CV]  kmeans__n_clusters=8, knn_clf__n_neighbors=1, score=0.810, total=   0.3s\n[CV] kmeans__n_clusters=8, knn_clf__n_neighbors=1 ....................\n[CV]  kmeans__n_clusters=8, knn_clf__n_neighbors=1, score=0.835, total=   0.2s\n[CV] kmeans__n_clusters=8, knn_clf__n_neighbors=2 ....................\n[CV]  kmeans__n_clusters=8, knn_clf__n_neighbors=2, score=0.840, total=   0.3s\n[CV] kmeans__n_clusters=8, knn_clf__n_neighbors=2 ....................\n[CV]  kmeans__n_clusters=8, knn_clf__n_neighbors=2, score=0.840, total=   0.3s\n[CV] kmeans__n_clusters=8, knn_clf__n_neighbors=2 ....................\n[CV]  kmeans__n_clusters=8, knn_clf__n_neighbors=2, score=0.863, total=   0.2s\n[CV] kmeans__n_clusters=8, knn_clf__n_neighbors=2 ....................\n[CV]  kmeans__n_clusters=8, knn_clf__n_neighbors=2, score=0.838, total=   0.2s\n[CV] kmeans__n_clusters=8, knn_clf__n_neighbors=2 ....................\n[CV]  kmeans__n_clusters=8, knn_clf__n_neighbors=2, score=0.787, total=   0.2s\n[CV] kmeans__n_clusters=8, knn_clf__n_neighbors=2 ....................\n[CV]  kmeans__n_clusters=8, knn_clf__n_neighbors=2, score=0.887, total=   0.2s\n[CV] kmeans__n_clusters=8, knn_clf__n_neighbors=2 ....................\n[CV]  kmeans__n_clusters=8, knn_clf__n_neighbors=2, score=0.838, total=   0.2s\n[CV] kmeans__n_clusters=8, knn_clf__n_neighbors=2 ....................\n[CV]  kmeans__n_clusters=8, knn_clf__n_neighbors=2, score=0.787, total=   0.2s\n[CV] kmeans__n_clusters=8, knn_clf__n_neighbors=2 ....................\n[CV]  kmeans__n_clusters=8, knn_clf__n_neighbors=2, score=0.848, total=   0.2s\n[CV] kmeans__n_clusters=8, knn_clf__n_neighbors=2 ....................\n[CV]  kmeans__n_clusters=8, knn_clf__n_neighbors=2, score=0.823, total=   0.2s\n[CV] kmeans__n_clusters=8, knn_clf__n_neighbors=3 ....................\n[CV]  kmeans__n_clusters=8, knn_clf__n_neighbors=3, score=0.877, total=   0.2s\n[CV] kmeans__n_clusters=8, knn_clf__n_neighbors=3 ....................\n\n\n[CV]  kmeans__n_clusters=8, knn_clf__n_neighbors=3, score=0.840, total=   0.3s\n[CV] kmeans__n_clusters=8, knn_clf__n_neighbors=3 ....................\n[CV]  kmeans__n_clusters=8, knn_clf__n_neighbors=3, score=0.838, total=   0.1s\n[CV] kmeans__n_clusters=8, knn_clf__n_neighbors=3 ....................\n[CV]  kmeans__n_clusters=8, knn_clf__n_neighbors=3, score=0.825, total=   0.2s\n[CV] kmeans__n_clusters=8, knn_clf__n_neighbors=3 ....................\n[CV]  kmeans__n_clusters=8, knn_clf__n_neighbors=3, score=0.825, total=   0.2s\n[CV] kmeans__n_clusters=8, knn_clf__n_neighbors=3 ....................\n[CV]  kmeans__n_clusters=8, knn_clf__n_neighbors=3, score=0.925, total=   0.3s\n[CV] kmeans__n_clusters=8, knn_clf__n_neighbors=3 ....................\n[CV]  kmeans__n_clusters=8, knn_clf__n_neighbors=3, score=0.875, total=   0.2s\n[CV] kmeans__n_clusters=8, knn_clf__n_neighbors=3 ....................\n[CV]  kmeans__n_clusters=8, knn_clf__n_neighbors=3, score=0.838, total=   0.2s\n[CV] kmeans__n_clusters=8, knn_clf__n_neighbors=3 ....................\n[CV]  kmeans__n_clusters=8, knn_clf__n_neighbors=3, score=0.848, total=   0.2s\n[CV] kmeans__n_clusters=8, knn_clf__n_neighbors=3 ....................\n[CV]  kmeans__n_clusters=8, knn_clf__n_neighbors=3, score=0.873, total=   0.2s\n[CV] kmeans__n_clusters=8, knn_clf__n_neighbors=4 ....................\n[CV]  kmeans__n_clusters=8, knn_clf__n_neighbors=4, score=0.877, total=   0.2s\n[CV] kmeans__n_clusters=8, knn_clf__n_neighbors=4 ....................\n[CV]  kmeans__n_clusters=8, knn_clf__n_neighbors=4, score=0.840, total=   0.2s\n[CV] kmeans__n_clusters=8, knn_clf__n_neighbors=4 ....................\n[CV]  kmeans__n_clusters=8, knn_clf__n_neighbors=4, score=0.875, total=   0.2s\n[CV] kmeans__n_clusters=8, knn_clf__n_neighbors=4 ....................\n[CV]  kmeans__n_clusters=8, knn_clf__n_neighbors=4, score=0.863, total=   0.2s\n[CV] kmeans__n_clusters=8, knn_clf__n_neighbors=4 ....................\n[CV]  kmeans__n_clusters=8, knn_clf__n_neighbors=4, score=0.875, total=   0.2s\n[CV] kmeans__n_clusters=8, knn_clf__n_neighbors=4 ....................\n[CV]  kmeans__n_clusters=8, knn_clf__n_neighbors=4, score=0.900, total=   0.2s\n[CV] kmeans__n_clusters=8, knn_clf__n_neighbors=4 ....................\n[CV]  kmeans__n_clusters=8, knn_clf__n_neighbors=4, score=0.825, total=   0.2s\n[CV] kmeans__n_clusters=8, knn_clf__n_neighbors=4 ....................\n[CV]  kmeans__n_clusters=8, knn_clf__n_neighbors=4, score=0.825, total=   0.2s\n[CV] kmeans__n_clusters=8, knn_clf__n_neighbors=4 ....................\n[CV]  kmeans__n_clusters=8, knn_clf__n_neighbors=4, score=0.848, total=   0.2s\n[CV] kmeans__n_clusters=8, knn_clf__n_neighbors=4 ....................\n[CV]  kmeans__n_clusters=8, knn_clf__n_neighbors=4, score=0.835, total=   0.2s\n[CV] kmeans__n_clusters=8, knn_clf__n_neighbors=5 ....................\n[CV]  kmeans__n_clusters=8, knn_clf__n_neighbors=5, score=0.864, total=   0.2s\n[CV] kmeans__n_clusters=8, knn_clf__n_neighbors=5 ....................\n[CV]  kmeans__n_clusters=8, knn_clf__n_neighbors=5, score=0.840, total=   0.2s\n[CV] kmeans__n_clusters=8, knn_clf__n_neighbors=5 ....................\n[CV]  kmeans__n_clusters=8, knn_clf__n_neighbors=5, score=0.838, total=   0.2s\n[CV] kmeans__n_clusters=8, knn_clf__n_neighbors=5 ....................\n[CV]  kmeans__n_clusters=8, knn_clf__n_neighbors=5, score=0.850, total=   0.2s\n[CV] kmeans__n_clusters=8, knn_clf__n_neighbors=5 ....................\n[CV]  kmeans__n_clusters=8, knn_clf__n_neighbors=5, score=0.887, total=   0.2s\n[CV] kmeans__n_clusters=8, knn_clf__n_neighbors=5 ....................\n[CV]  kmeans__n_clusters=8, knn_clf__n_neighbors=5, score=0.912, total=   0.2s\n[CV] kmeans__n_clusters=8, knn_clf__n_neighbors=5 ....................\n[CV]  kmeans__n_clusters=8, knn_clf__n_neighbors=5, score=0.812, total=   0.2s\n[CV] kmeans__n_clusters=8, knn_clf__n_neighbors=5 ....................\n[CV]  kmeans__n_clusters=8, knn_clf__n_neighbors=5, score=0.850, total=   0.2s\n[CV] kmeans__n_clusters=8, knn_clf__n_neighbors=5 ....................\n[CV]  kmeans__n_clusters=8, knn_clf__n_neighbors=5, score=0.835, total=   0.2s\n[CV] kmeans__n_clusters=8, knn_clf__n_neighbors=5 ....................\n[CV]  kmeans__n_clusters=8, knn_clf__n_neighbors=5, score=0.873, total=   0.2s\n[CV] kmeans__n_clusters=8, knn_clf__n_neighbors=6 ....................\n[CV]  kmeans__n_clusters=8, knn_clf__n_neighbors=6, score=0.889, total=   0.2s\n[CV] kmeans__n_clusters=8, knn_clf__n_neighbors=6 ....................\n[CV]  kmeans__n_clusters=8, knn_clf__n_neighbors=6, score=0.889, total=   0.2s\n[CV] kmeans__n_clusters=8, knn_clf__n_neighbors=6 ....................\n[CV]  kmeans__n_clusters=8, knn_clf__n_neighbors=6, score=0.850, total=   0.2s\n[CV] kmeans__n_clusters=8, knn_clf__n_neighbors=6 ....................\n[CV]  kmeans__n_clusters=8, knn_clf__n_neighbors=6, score=0.863, total=   0.2s\n[CV] kmeans__n_clusters=8, knn_clf__n_neighbors=6 ....................\n[CV]  kmeans__n_clusters=8, knn_clf__n_neighbors=6, score=0.887, total=   0.2s\n[CV] kmeans__n_clusters=8, knn_clf__n_neighbors=6 ....................\n[CV]  kmeans__n_clusters=8, knn_clf__n_neighbors=6, score=0.887, total=   0.2s\n[CV] kmeans__n_clusters=8, knn_clf__n_neighbors=6 ....................\n[CV]  kmeans__n_clusters=8, knn_clf__n_neighbors=6, score=0.825, total=   0.2s\n[CV] kmeans__n_clusters=8, knn_clf__n_neighbors=6 ....................\n[CV]  kmeans__n_clusters=8, knn_clf__n_neighbors=6, score=0.838, total=   0.2s\n[CV] kmeans__n_clusters=8, knn_clf__n_neighbors=6 ....................\n[CV]  kmeans__n_clusters=8, knn_clf__n_neighbors=6, score=0.861, total=   0.2s\n[CV] kmeans__n_clusters=8, knn_clf__n_neighbors=6 ....................\n[CV]  kmeans__n_clusters=8, knn_clf__n_neighbors=6, score=0.873, total=   0.2s\n[CV] kmeans__n_clusters=8, knn_clf__n_neighbors=7 ....................\n[CV]  kmeans__n_clusters=8, knn_clf__n_neighbors=7, score=0.877, total=   0.2s\n[CV] kmeans__n_clusters=8, knn_clf__n_neighbors=7 ....................\n[CV]  kmeans__n_clusters=8, knn_clf__n_neighbors=7, score=0.877, total=   0.2s\n[CV] kmeans__n_clusters=8, knn_clf__n_neighbors=7 ....................\n[CV]  kmeans__n_clusters=8, knn_clf__n_neighbors=7, score=0.887, total=   0.2s\n[CV] kmeans__n_clusters=8, knn_clf__n_neighbors=7 ....................\n[CV]  kmeans__n_clusters=8, knn_clf__n_neighbors=7, score=0.863, total=   0.2s\n[CV] kmeans__n_clusters=8, knn_clf__n_neighbors=7 ....................\n[CV]  kmeans__n_clusters=8, knn_clf__n_neighbors=7, score=0.875, total=   0.2s\n[CV] kmeans__n_clusters=8, knn_clf__n_neighbors=7 ....................\n[CV]  kmeans__n_clusters=8, knn_clf__n_neighbors=7, score=0.900, total=   0.2s\n[CV] kmeans__n_clusters=8, knn_clf__n_neighbors=7 ....................\n[CV]  kmeans__n_clusters=8, knn_clf__n_neighbors=7, score=0.850, total=   0.2s\n[CV] kmeans__n_clusters=8, knn_clf__n_neighbors=7 ....................\n[CV]  kmeans__n_clusters=8, knn_clf__n_neighbors=7, score=0.887, total=   0.2s\n[CV] kmeans__n_clusters=8, knn_clf__n_neighbors=7 ....................\n[CV]  kmeans__n_clusters=8, knn_clf__n_neighbors=7, score=0.835, total=   0.2s\n[CV] kmeans__n_clusters=8, knn_clf__n_neighbors=7 ....................\n[CV]  kmeans__n_clusters=8, knn_clf__n_neighbors=7, score=0.873, total=   0.2s\n[CV] kmeans__n_clusters=8, knn_clf__n_neighbors=8 ....................\n[CV]  kmeans__n_clusters=8, knn_clf__n_neighbors=8, score=0.864, total=   0.2s\n[CV] kmeans__n_clusters=8, knn_clf__n_neighbors=8 ....................\n[CV]  kmeans__n_clusters=8, knn_clf__n_neighbors=8, score=0.864, total=   0.2s\n[CV] kmeans__n_clusters=8, knn_clf__n_neighbors=8 ....................\n[CV]  kmeans__n_clusters=8, knn_clf__n_neighbors=8, score=0.863, total=   0.2s\n[CV] kmeans__n_clusters=8, knn_clf__n_neighbors=8 ....................\n[CV]  kmeans__n_clusters=8, knn_clf__n_neighbors=8, score=0.875, total=   0.2s\n[CV] kmeans__n_clusters=8, knn_clf__n_neighbors=8 ....................\n[CV]  kmeans__n_clusters=8, knn_clf__n_neighbors=8, score=0.887, total=   0.2s\n[CV] kmeans__n_clusters=8, knn_clf__n_neighbors=8 ....................\n[CV]  kmeans__n_clusters=8, knn_clf__n_neighbors=8, score=0.900, total=   0.2s\n[CV] kmeans__n_clusters=8, knn_clf__n_neighbors=8 ....................\n\n\n[CV]  kmeans__n_clusters=8, knn_clf__n_neighbors=8, score=0.838, total=   0.2s\n[CV] kmeans__n_clusters=8, knn_clf__n_neighbors=8 ....................\n[CV]  kmeans__n_clusters=8, knn_clf__n_neighbors=8, score=0.875, total=   0.2s\n[CV] kmeans__n_clusters=8, knn_clf__n_neighbors=8 ....................\n[CV]  kmeans__n_clusters=8, knn_clf__n_neighbors=8, score=0.861, total=   0.2s\n[CV] kmeans__n_clusters=8, knn_clf__n_neighbors=8 ....................\n[CV]  kmeans__n_clusters=8, knn_clf__n_neighbors=8, score=0.861, total=   0.2s\n[CV] kmeans__n_clusters=8, knn_clf__n_neighbors=9 ....................\n[CV]  kmeans__n_clusters=8, knn_clf__n_neighbors=9, score=0.852, total=   0.2s\n[CV] kmeans__n_clusters=8, knn_clf__n_neighbors=9 ....................\n[CV]  kmeans__n_clusters=8, knn_clf__n_neighbors=9, score=0.889, total=   0.2s\n[CV] kmeans__n_clusters=8, knn_clf__n_neighbors=9 ....................\n[CV]  kmeans__n_clusters=8, knn_clf__n_neighbors=9, score=0.887, total=   0.2s\n[CV] kmeans__n_clusters=8, knn_clf__n_neighbors=9 ....................\n[CV]  kmeans__n_clusters=8, knn_clf__n_neighbors=9, score=0.875, total=   0.2s\n[CV] kmeans__n_clusters=8, knn_clf__n_neighbors=9 ....................\n[CV]  kmeans__n_clusters=8, knn_clf__n_neighbors=9, score=0.900, total=   0.2s\n[CV] kmeans__n_clusters=8, knn_clf__n_neighbors=9 ....................\n[CV]  kmeans__n_clusters=8, knn_clf__n_neighbors=9, score=0.887, total=   0.2s\n[CV] kmeans__n_clusters=8, knn_clf__n_neighbors=9 ....................\n[CV]  kmeans__n_clusters=8, knn_clf__n_neighbors=9, score=0.850, total=   0.2s\n[CV] kmeans__n_clusters=8, knn_clf__n_neighbors=9 ....................\n[CV]  kmeans__n_clusters=8, knn_clf__n_neighbors=9, score=0.887, total=   0.2s\n[CV] kmeans__n_clusters=8, knn_clf__n_neighbors=9 ....................\n[CV]  kmeans__n_clusters=8, knn_clf__n_neighbors=9, score=0.861, total=   0.2s\n[CV] kmeans__n_clusters=8, knn_clf__n_neighbors=9 ....................\n[CV]  kmeans__n_clusters=8, knn_clf__n_neighbors=9, score=0.861, total=   0.2s\n[CV] kmeans__n_clusters=9, knn_clf__n_neighbors=1 ....................\n[CV]  kmeans__n_clusters=9, knn_clf__n_neighbors=1, score=0.864, total=   0.2s\n[CV] kmeans__n_clusters=9, knn_clf__n_neighbors=1 ....................\n[CV]  kmeans__n_clusters=9, knn_clf__n_neighbors=1, score=0.790, total=   0.2s\n[CV] kmeans__n_clusters=9, knn_clf__n_neighbors=1 ....................\n[CV]  kmeans__n_clusters=9, knn_clf__n_neighbors=1, score=0.825, total=   0.2s\n[CV] kmeans__n_clusters=9, knn_clf__n_neighbors=1 ....................\n[CV]  kmeans__n_clusters=9, knn_clf__n_neighbors=1, score=0.838, total=   0.2s\n[CV] kmeans__n_clusters=9, knn_clf__n_neighbors=1 ....................\n[CV]  kmeans__n_clusters=9, knn_clf__n_neighbors=1, score=0.775, total=   0.2s\n[CV] kmeans__n_clusters=9, knn_clf__n_neighbors=1 ....................\n[CV]  kmeans__n_clusters=9, knn_clf__n_neighbors=1, score=0.863, total=   0.2s\n[CV] kmeans__n_clusters=9, knn_clf__n_neighbors=1 ....................\n[CV]  kmeans__n_clusters=9, knn_clf__n_neighbors=1, score=0.838, total=   0.2s\n[CV] kmeans__n_clusters=9, knn_clf__n_neighbors=1 ....................\n[CV]  kmeans__n_clusters=9, knn_clf__n_neighbors=1, score=0.825, total=   0.2s\n[CV] kmeans__n_clusters=9, knn_clf__n_neighbors=1 ....................\n[CV]  kmeans__n_clusters=9, knn_clf__n_neighbors=1, score=0.835, total=   0.2s\n[CV] kmeans__n_clusters=9, knn_clf__n_neighbors=1 ....................\n[CV]  kmeans__n_clusters=9, knn_clf__n_neighbors=1, score=0.823, total=   0.2s\n[CV] kmeans__n_clusters=9, knn_clf__n_neighbors=2 ....................\n[CV]  kmeans__n_clusters=9, knn_clf__n_neighbors=2, score=0.864, total=   0.2s\n[CV] kmeans__n_clusters=9, knn_clf__n_neighbors=2 ....................\n[CV]  kmeans__n_clusters=9, knn_clf__n_neighbors=2, score=0.827, total=   0.2s\n[CV] kmeans__n_clusters=9, knn_clf__n_neighbors=2 ....................\n[CV]  kmeans__n_clusters=9, knn_clf__n_neighbors=2, score=0.838, total=   0.2s\n[CV] kmeans__n_clusters=9, knn_clf__n_neighbors=2 ....................\n[CV]  kmeans__n_clusters=9, knn_clf__n_neighbors=2, score=0.850, total=   0.2s\n[CV] kmeans__n_clusters=9, knn_clf__n_neighbors=2 ....................\n[CV]  kmeans__n_clusters=9, knn_clf__n_neighbors=2, score=0.887, total=   0.2s\n[CV] kmeans__n_clusters=9, knn_clf__n_neighbors=2 ....................\n[CV]  kmeans__n_clusters=9, knn_clf__n_neighbors=2, score=0.863, total=   0.2s\n[CV] kmeans__n_clusters=9, knn_clf__n_neighbors=2 ....................\n[CV]  kmeans__n_clusters=9, knn_clf__n_neighbors=2, score=0.825, total=   0.2s\n[CV] kmeans__n_clusters=9, knn_clf__n_neighbors=2 ....................\n[CV]  kmeans__n_clusters=9, knn_clf__n_neighbors=2, score=0.812, total=   0.2s\n[CV] kmeans__n_clusters=9, knn_clf__n_neighbors=2 ....................\n[CV]  kmeans__n_clusters=9, knn_clf__n_neighbors=2, score=0.886, total=   0.2s\n[CV] kmeans__n_clusters=9, knn_clf__n_neighbors=2 ....................\n[CV]  kmeans__n_clusters=9, knn_clf__n_neighbors=2, score=0.810, total=   0.2s\n[CV] kmeans__n_clusters=9, knn_clf__n_neighbors=3 ....................\n[CV]  kmeans__n_clusters=9, knn_clf__n_neighbors=3, score=0.852, total=   0.2s\n[CV] kmeans__n_clusters=9, knn_clf__n_neighbors=3 ....................\n[CV]  kmeans__n_clusters=9, knn_clf__n_neighbors=3, score=0.840, total=   0.2s\n[CV] kmeans__n_clusters=9, knn_clf__n_neighbors=3 ....................\n[CV]  kmeans__n_clusters=9, knn_clf__n_neighbors=3, score=0.850, total=   0.2s\n[CV] kmeans__n_clusters=9, knn_clf__n_neighbors=3 ....................\n[CV]  kmeans__n_clusters=9, knn_clf__n_neighbors=3, score=0.863, total=   0.2s\n[CV] kmeans__n_clusters=9, knn_clf__n_neighbors=3 ....................\n[CV]  kmeans__n_clusters=9, knn_clf__n_neighbors=3, score=0.838, total=   0.2s\n[CV] kmeans__n_clusters=9, knn_clf__n_neighbors=3 ....................\n[CV]  kmeans__n_clusters=9, knn_clf__n_neighbors=3, score=0.938, total=   0.2s\n[CV] kmeans__n_clusters=9, knn_clf__n_neighbors=3 ....................\n[CV]  kmeans__n_clusters=9, knn_clf__n_neighbors=3, score=0.850, total=   0.2s\n[CV] kmeans__n_clusters=9, knn_clf__n_neighbors=3 ....................\n[CV]  kmeans__n_clusters=9, knn_clf__n_neighbors=3, score=0.863, total=   0.2s\n[CV] kmeans__n_clusters=9, knn_clf__n_neighbors=3 ....................\n[CV]  kmeans__n_clusters=9, knn_clf__n_neighbors=3, score=0.873, total=   0.2s\n[CV] kmeans__n_clusters=9, knn_clf__n_neighbors=3 ....................\n[CV]  kmeans__n_clusters=9, knn_clf__n_neighbors=3, score=0.861, total=   0.2s\n[CV] kmeans__n_clusters=9, knn_clf__n_neighbors=4 ....................\n[CV]  kmeans__n_clusters=9, knn_clf__n_neighbors=4, score=0.864, total=   0.2s\n[CV] kmeans__n_clusters=9, knn_clf__n_neighbors=4 ....................\n[CV]  kmeans__n_clusters=9, knn_clf__n_neighbors=4, score=0.877, total=   0.2s\n[CV] kmeans__n_clusters=9, knn_clf__n_neighbors=4 ....................\n[CV]  kmeans__n_clusters=9, knn_clf__n_neighbors=4, score=0.863, total=   0.2s\n[CV] kmeans__n_clusters=9, knn_clf__n_neighbors=4 ....................\n[CV]  kmeans__n_clusters=9, knn_clf__n_neighbors=4, score=0.875, total=   0.2s\n[CV] kmeans__n_clusters=9, knn_clf__n_neighbors=4 ....................\n[CV]  kmeans__n_clusters=9, knn_clf__n_neighbors=4, score=0.875, total=   0.2s\n[CV] kmeans__n_clusters=9, knn_clf__n_neighbors=4 ....................\n[CV]  kmeans__n_clusters=9, knn_clf__n_neighbors=4, score=0.900, total=   0.2s\n[CV] kmeans__n_clusters=9, knn_clf__n_neighbors=4 ....................\n[CV]  kmeans__n_clusters=9, knn_clf__n_neighbors=4, score=0.838, total=   0.2s\n[CV] kmeans__n_clusters=9, knn_clf__n_neighbors=4 ....................\n[CV]  kmeans__n_clusters=9, knn_clf__n_neighbors=4, score=0.838, total=   0.2s\n[CV] kmeans__n_clusters=9, knn_clf__n_neighbors=4 ....................\n[CV]  kmeans__n_clusters=9, knn_clf__n_neighbors=4, score=0.899, total=   0.2s\n[CV] kmeans__n_clusters=9, knn_clf__n_neighbors=4 ....................\n[CV]  kmeans__n_clusters=9, knn_clf__n_neighbors=4, score=0.848, total=   0.2s\n[CV] kmeans__n_clusters=9, knn_clf__n_neighbors=5 ....................\n[CV]  kmeans__n_clusters=9, knn_clf__n_neighbors=5, score=0.877, total=   0.2s\n[CV] kmeans__n_clusters=9, knn_clf__n_neighbors=5 ....................\n\n\n[CV]  kmeans__n_clusters=9, knn_clf__n_neighbors=5, score=0.889, total=   0.2s\n[CV] kmeans__n_clusters=9, knn_clf__n_neighbors=5 ....................\n[CV]  kmeans__n_clusters=9, knn_clf__n_neighbors=5, score=0.887, total=   0.2s\n[CV] kmeans__n_clusters=9, knn_clf__n_neighbors=5 ....................\n[CV]  kmeans__n_clusters=9, knn_clf__n_neighbors=5, score=0.887, total=   0.2s\n[CV] kmeans__n_clusters=9, knn_clf__n_neighbors=5 ....................\n[CV]  kmeans__n_clusters=9, knn_clf__n_neighbors=5, score=0.850, total=   0.2s\n[CV] kmeans__n_clusters=9, knn_clf__n_neighbors=5 ....................\n[CV]  kmeans__n_clusters=9, knn_clf__n_neighbors=5, score=0.912, total=   0.2s\n[CV] kmeans__n_clusters=9, knn_clf__n_neighbors=5 ....................\n[CV]  kmeans__n_clusters=9, knn_clf__n_neighbors=5, score=0.863, total=   0.2s\n[CV] kmeans__n_clusters=9, knn_clf__n_neighbors=5 ....................\n[CV]  kmeans__n_clusters=9, knn_clf__n_neighbors=5, score=0.850, total=   0.2s\n[CV] kmeans__n_clusters=9, knn_clf__n_neighbors=5 ....................\n[CV]  kmeans__n_clusters=9, knn_clf__n_neighbors=5, score=0.835, total=   0.2s\n[CV] kmeans__n_clusters=9, knn_clf__n_neighbors=5 ....................\n[CV]  kmeans__n_clusters=9, knn_clf__n_neighbors=5, score=0.861, total=   0.2s\n[CV] kmeans__n_clusters=9, knn_clf__n_neighbors=6 ....................\n[CV]  kmeans__n_clusters=9, knn_clf__n_neighbors=6, score=0.877, total=   0.2s\n[CV] kmeans__n_clusters=9, knn_clf__n_neighbors=6 ....................\n[CV]  kmeans__n_clusters=9, knn_clf__n_neighbors=6, score=0.877, total=   0.2s\n[CV] kmeans__n_clusters=9, knn_clf__n_neighbors=6 ....................\n[CV]  kmeans__n_clusters=9, knn_clf__n_neighbors=6, score=0.887, total=   0.2s\n[CV] kmeans__n_clusters=9, knn_clf__n_neighbors=6 ....................\n[CV]  kmeans__n_clusters=9, knn_clf__n_neighbors=6, score=0.887, total=   0.2s\n[CV] kmeans__n_clusters=9, knn_clf__n_neighbors=6 ....................\n[CV]  kmeans__n_clusters=9, knn_clf__n_neighbors=6, score=0.875, total=   0.2s\n[CV] kmeans__n_clusters=9, knn_clf__n_neighbors=6 ....................\n[CV]  kmeans__n_clusters=9, knn_clf__n_neighbors=6, score=0.900, total=   0.2s\n[CV] kmeans__n_clusters=9, knn_clf__n_neighbors=6 ....................\n[CV]  kmeans__n_clusters=9, knn_clf__n_neighbors=6, score=0.863, total=   0.2s\n[CV] kmeans__n_clusters=9, knn_clf__n_neighbors=6 ....................\n[CV]  kmeans__n_clusters=9, knn_clf__n_neighbors=6, score=0.850, total=   0.2s\n[CV] kmeans__n_clusters=9, knn_clf__n_neighbors=6 ....................\n[CV]  kmeans__n_clusters=9, knn_clf__n_neighbors=6, score=0.861, total=   0.2s\n[CV] kmeans__n_clusters=9, knn_clf__n_neighbors=6 ....................\n[CV]  kmeans__n_clusters=9, knn_clf__n_neighbors=6, score=0.835, total=   0.2s\n[CV] kmeans__n_clusters=9, knn_clf__n_neighbors=7 ....................\n[CV]  kmeans__n_clusters=9, knn_clf__n_neighbors=7, score=0.877, total=   0.2s\n[CV] kmeans__n_clusters=9, knn_clf__n_neighbors=7 ....................\n[CV]  kmeans__n_clusters=9, knn_clf__n_neighbors=7, score=0.877, total=   0.2s\n[CV] kmeans__n_clusters=9, knn_clf__n_neighbors=7 ....................\n[CV]  kmeans__n_clusters=9, knn_clf__n_neighbors=7, score=0.887, total=   0.2s\n[CV] kmeans__n_clusters=9, knn_clf__n_neighbors=7 ....................\n[CV]  kmeans__n_clusters=9, knn_clf__n_neighbors=7, score=0.887, total=   0.2s\n[CV] kmeans__n_clusters=9, knn_clf__n_neighbors=7 ....................\n[CV]  kmeans__n_clusters=9, knn_clf__n_neighbors=7, score=0.887, total=   0.2s\n[CV] kmeans__n_clusters=9, knn_clf__n_neighbors=7 ....................\n[CV]  kmeans__n_clusters=9, knn_clf__n_neighbors=7, score=0.900, total=   0.2s\n[CV] kmeans__n_clusters=9, knn_clf__n_neighbors=7 ....................\n[CV]  kmeans__n_clusters=9, knn_clf__n_neighbors=7, score=0.863, total=   0.2s\n[CV] kmeans__n_clusters=9, knn_clf__n_neighbors=7 ....................\n[CV]  kmeans__n_clusters=9, knn_clf__n_neighbors=7, score=0.838, total=   0.2s\n[CV] kmeans__n_clusters=9, knn_clf__n_neighbors=7 ....................\n[CV]  kmeans__n_clusters=9, knn_clf__n_neighbors=7, score=0.848, total=   0.2s\n[CV] kmeans__n_clusters=9, knn_clf__n_neighbors=7 ....................\n[CV]  kmeans__n_clusters=9, knn_clf__n_neighbors=7, score=0.848, total=   0.2s\n[CV] kmeans__n_clusters=9, knn_clf__n_neighbors=8 ....................\n[CV]  kmeans__n_clusters=9, knn_clf__n_neighbors=8, score=0.877, total=   0.2s\n[CV] kmeans__n_clusters=9, knn_clf__n_neighbors=8 ....................\n[CV]  kmeans__n_clusters=9, knn_clf__n_neighbors=8, score=0.877, total=   0.2s\n[CV] kmeans__n_clusters=9, knn_clf__n_neighbors=8 ....................\n[CV]  kmeans__n_clusters=9, knn_clf__n_neighbors=8, score=0.900, total=   0.2s\n[CV] kmeans__n_clusters=9, knn_clf__n_neighbors=8 ....................\n[CV]  kmeans__n_clusters=9, knn_clf__n_neighbors=8, score=0.887, total=   0.2s\n[CV] kmeans__n_clusters=9, knn_clf__n_neighbors=8 ....................\n[CV]  kmeans__n_clusters=9, knn_clf__n_neighbors=8, score=0.875, total=   0.2s\n[CV] kmeans__n_clusters=9, knn_clf__n_neighbors=8 ....................\n[CV]  kmeans__n_clusters=9, knn_clf__n_neighbors=8, score=0.900, total=   0.2s\n[CV] kmeans__n_clusters=9, knn_clf__n_neighbors=8 ....................\n[CV]  kmeans__n_clusters=9, knn_clf__n_neighbors=8, score=0.875, total=   0.2s\n[CV] kmeans__n_clusters=9, knn_clf__n_neighbors=8 ....................\n[CV]  kmeans__n_clusters=9, knn_clf__n_neighbors=8, score=0.812, total=   0.2s\n[CV] kmeans__n_clusters=9, knn_clf__n_neighbors=8 ....................\n[CV]  kmeans__n_clusters=9, knn_clf__n_neighbors=8, score=0.861, total=   0.2s\n[CV] kmeans__n_clusters=9, knn_clf__n_neighbors=8 ....................\n[CV]  kmeans__n_clusters=9, knn_clf__n_neighbors=8, score=0.835, total=   0.3s\n[CV] kmeans__n_clusters=9, knn_clf__n_neighbors=9 ....................\n[CV]  kmeans__n_clusters=9, knn_clf__n_neighbors=9, score=0.864, total=   0.3s\n[CV] kmeans__n_clusters=9, knn_clf__n_neighbors=9 ....................\n[CV]  kmeans__n_clusters=9, knn_clf__n_neighbors=9, score=0.889, total=   0.2s\n[CV] kmeans__n_clusters=9, knn_clf__n_neighbors=9 ....................\n[CV]  kmeans__n_clusters=9, knn_clf__n_neighbors=9, score=0.887, total=   0.2s\n[CV] kmeans__n_clusters=9, knn_clf__n_neighbors=9 ....................\n[CV]  kmeans__n_clusters=9, knn_clf__n_neighbors=9, score=0.875, total=   0.2s\n[CV] kmeans__n_clusters=9, knn_clf__n_neighbors=9 ....................\n[CV]  kmeans__n_clusters=9, knn_clf__n_neighbors=9, score=0.887, total=   0.2s\n[CV] kmeans__n_clusters=9, knn_clf__n_neighbors=9 ....................\n[CV]  kmeans__n_clusters=9, knn_clf__n_neighbors=9, score=0.900, total=   0.2s\n[CV] kmeans__n_clusters=9, knn_clf__n_neighbors=9 ....................\n[CV]  kmeans__n_clusters=9, knn_clf__n_neighbors=9, score=0.900, total=   0.2s\n[CV] kmeans__n_clusters=9, knn_clf__n_neighbors=9 ....................\n[CV]  kmeans__n_clusters=9, knn_clf__n_neighbors=9, score=0.825, total=   0.2s\n[CV] kmeans__n_clusters=9, knn_clf__n_neighbors=9 ....................\n[CV]  kmeans__n_clusters=9, knn_clf__n_neighbors=9, score=0.861, total=   0.3s\n[CV] kmeans__n_clusters=9, knn_clf__n_neighbors=9 ....................\n[CV]  kmeans__n_clusters=9, knn_clf__n_neighbors=9, score=0.848, total=   0.3s\n\n\n[Parallel(n_jobs=1)]: Done 720 out of 720 | elapsed:  2.0min finished\n\n\nGridSearchCV(cv=10, error_score='raise-deprecating',\n             estimator=Pipeline(memory=None,\n                                steps=[('kmeans',\n                                        KMeans(algorithm='auto', copy_x=True,\n                                               init='k-means++', max_iter=300,\n                                               n_clusters=8, n_init=10,\n                                               n_jobs=None,\n                                               precompute_distances='auto',\n                                               random_state=42, tol=0.0001,\n                                               verbose=0)),\n                                       ('scale',\n                                        StandardScaler(copy=True,\n                                                       with_mean=True,\n                                                       with_std=True)),\n                                       ('knn_clf',\n                                        KNeighborsClassifier(algorithm='auto',\n                                                             leaf_size=30,\n                                                             metric='minkowski',\n                                                             metric_params=None,\n                                                             n_jobs=None,\n                                                             n_neighbors=5, p=2,\n                                                             weights='uniform'))],\n                                verbose=False),\n             iid='warn', n_jobs=None,\n             param_grid={'kmeans__n_clusters': range(2, 10),\n                         'knn_clf__n_neighbors': range(1, 10)},\n             pre_dispatch='2*n_jobs', refit=True, return_train_score=False,\n             scoring='accuracy', verbose=5)\n\n\n\ncvr = grid_search1.cv_results_\nlist(zip(cvr['mean_test_score'], cvr['params']))\n\n[(0.75375, {'kmeans__n_clusters': 2, 'knn_clf__n_neighbors': 1}),\n (0.74625, {'kmeans__n_clusters': 2, 'knn_clf__n_neighbors': 2}),\n (0.78, {'kmeans__n_clusters': 2, 'knn_clf__n_neighbors': 3}),\n (0.79875, {'kmeans__n_clusters': 2, 'knn_clf__n_neighbors': 4}),\n (0.8075, {'kmeans__n_clusters': 2, 'knn_clf__n_neighbors': 5}),\n (0.81125, {'kmeans__n_clusters': 2, 'knn_clf__n_neighbors': 6}),\n (0.8125, {'kmeans__n_clusters': 2, 'knn_clf__n_neighbors': 7}),\n (0.815, {'kmeans__n_clusters': 2, 'knn_clf__n_neighbors': 8}),\n (0.815, {'kmeans__n_clusters': 2, 'knn_clf__n_neighbors': 9}),\n (0.83375, {'kmeans__n_clusters': 3, 'knn_clf__n_neighbors': 1}),\n (0.83875, {'kmeans__n_clusters': 3, 'knn_clf__n_neighbors': 2}),\n (0.8675, {'kmeans__n_clusters': 3, 'knn_clf__n_neighbors': 3}),\n (0.86, {'kmeans__n_clusters': 3, 'knn_clf__n_neighbors': 4}),\n (0.875, {'kmeans__n_clusters': 3, 'knn_clf__n_neighbors': 5}),\n (0.86125, {'kmeans__n_clusters': 3, 'knn_clf__n_neighbors': 6}),\n (0.87, {'kmeans__n_clusters': 3, 'knn_clf__n_neighbors': 7}),\n (0.86875, {'kmeans__n_clusters': 3, 'knn_clf__n_neighbors': 8}),\n (0.86625, {'kmeans__n_clusters': 3, 'knn_clf__n_neighbors': 9}),\n (0.8425, {'kmeans__n_clusters': 4, 'knn_clf__n_neighbors': 1}),\n (0.84625, {'kmeans__n_clusters': 4, 'knn_clf__n_neighbors': 2}),\n (0.86875, {'kmeans__n_clusters': 4, 'knn_clf__n_neighbors': 3}),\n (0.87375, {'kmeans__n_clusters': 4, 'knn_clf__n_neighbors': 4}),\n (0.8825, {'kmeans__n_clusters': 4, 'knn_clf__n_neighbors': 5}),\n (0.88, {'kmeans__n_clusters': 4, 'knn_clf__n_neighbors': 6}),\n (0.88375, {'kmeans__n_clusters': 4, 'knn_clf__n_neighbors': 7}),\n (0.88125, {'kmeans__n_clusters': 4, 'knn_clf__n_neighbors': 8}),\n (0.8825, {'kmeans__n_clusters': 4, 'knn_clf__n_neighbors': 9}),\n (0.835, {'kmeans__n_clusters': 5, 'knn_clf__n_neighbors': 1}),\n (0.8525, {'kmeans__n_clusters': 5, 'knn_clf__n_neighbors': 2}),\n (0.865, {'kmeans__n_clusters': 5, 'knn_clf__n_neighbors': 3}),\n (0.86875, {'kmeans__n_clusters': 5, 'knn_clf__n_neighbors': 4}),\n (0.88, {'kmeans__n_clusters': 5, 'knn_clf__n_neighbors': 5}),\n (0.87625, {'kmeans__n_clusters': 5, 'knn_clf__n_neighbors': 6}),\n (0.885, {'kmeans__n_clusters': 5, 'knn_clf__n_neighbors': 7}),\n (0.87375, {'kmeans__n_clusters': 5, 'knn_clf__n_neighbors': 8}),\n (0.87125, {'kmeans__n_clusters': 5, 'knn_clf__n_neighbors': 9}),\n (0.85625, {'kmeans__n_clusters': 6, 'knn_clf__n_neighbors': 1}),\n (0.85375, {'kmeans__n_clusters': 6, 'knn_clf__n_neighbors': 2}),\n (0.86875, {'kmeans__n_clusters': 6, 'knn_clf__n_neighbors': 3}),\n (0.8675, {'kmeans__n_clusters': 6, 'knn_clf__n_neighbors': 4}),\n (0.87125, {'kmeans__n_clusters': 6, 'knn_clf__n_neighbors': 5}),\n (0.87375, {'kmeans__n_clusters': 6, 'knn_clf__n_neighbors': 6}),\n (0.87125, {'kmeans__n_clusters': 6, 'knn_clf__n_neighbors': 7}),\n (0.875, {'kmeans__n_clusters': 6, 'knn_clf__n_neighbors': 8}),\n (0.88, {'kmeans__n_clusters': 6, 'knn_clf__n_neighbors': 9}),\n (0.85, {'kmeans__n_clusters': 7, 'knn_clf__n_neighbors': 1}),\n (0.855, {'kmeans__n_clusters': 7, 'knn_clf__n_neighbors': 2}),\n (0.86, {'kmeans__n_clusters': 7, 'knn_clf__n_neighbors': 3}),\n (0.8625, {'kmeans__n_clusters': 7, 'knn_clf__n_neighbors': 4}),\n (0.87375, {'kmeans__n_clusters': 7, 'knn_clf__n_neighbors': 5}),\n (0.86375, {'kmeans__n_clusters': 7, 'knn_clf__n_neighbors': 6}),\n (0.86625, {'kmeans__n_clusters': 7, 'knn_clf__n_neighbors': 7}),\n (0.87, {'kmeans__n_clusters': 7, 'knn_clf__n_neighbors': 8}),\n (0.86875, {'kmeans__n_clusters': 7, 'knn_clf__n_neighbors': 9}),\n (0.8225, {'kmeans__n_clusters': 8, 'knn_clf__n_neighbors': 1}),\n (0.835, {'kmeans__n_clusters': 8, 'knn_clf__n_neighbors': 2}),\n (0.85625, {'kmeans__n_clusters': 8, 'knn_clf__n_neighbors': 3}),\n (0.85625, {'kmeans__n_clusters': 8, 'knn_clf__n_neighbors': 4}),\n (0.85625, {'kmeans__n_clusters': 8, 'knn_clf__n_neighbors': 5}),\n (0.86625, {'kmeans__n_clusters': 8, 'knn_clf__n_neighbors': 6}),\n (0.8725, {'kmeans__n_clusters': 8, 'knn_clf__n_neighbors': 7}),\n (0.86875, {'kmeans__n_clusters': 8, 'knn_clf__n_neighbors': 8}),\n (0.875, {'kmeans__n_clusters': 8, 'knn_clf__n_neighbors': 9}),\n (0.8275, {'kmeans__n_clusters': 9, 'knn_clf__n_neighbors': 1}),\n (0.84625, {'kmeans__n_clusters': 9, 'knn_clf__n_neighbors': 2}),\n (0.8625, {'kmeans__n_clusters': 9, 'knn_clf__n_neighbors': 3}),\n (0.8675, {'kmeans__n_clusters': 9, 'knn_clf__n_neighbors': 4}),\n (0.87125, {'kmeans__n_clusters': 9, 'knn_clf__n_neighbors': 5}),\n (0.87125, {'kmeans__n_clusters': 9, 'knn_clf__n_neighbors': 6}),\n (0.87125, {'kmeans__n_clusters': 9, 'knn_clf__n_neighbors': 7}),\n (0.87, {'kmeans__n_clusters': 9, 'knn_clf__n_neighbors': 8}),\n (0.87375, {'kmeans__n_clusters': 9, 'knn_clf__n_neighbors': 9})]\n\n\n\ngrid_search1.best_score_, grid_search1.best_params_\n\n(0.885, {'kmeans__n_clusters': 5, 'knn_clf__n_neighbors': 7})\n\n\nWow, that’s amazing, the cross validation score is pretty high\nNB: We used a cv of 10 with Grid Search so it’s the same as running a KNeighborsClassifier with these parameters on our cscore function\nAnd if you need proof, you can test it out…\n\nknn_new1 = grid_search1.best_estimator_\ncscore(knn_new1), score(knn_new1)\n\n(0.8849292858259104, 0.885)\n\n\nThe score has only been rounded but it’s technically the same\nDimensionality Reduction is also another Unsupervised Preprocessing Step that we can take, Let’s set up another Pipeline and GridSearchCV, by now you might have got the hang of it. We will use PCA, a very popular package for dimensionality reduction.\n\nfrom sklearn.decomposition import PCA\n\npipeline2 = Pipeline([\n    ('pca', PCA(random_state=42)),\n    ('scale', StandardScaler()),\n    ('knn_clf', KNeighborsClassifier())\n])\n\nparams = dict(pca__n_components=range(1, 10), knn_clf__n_neighbors=range(1, 20))\n\n\ngrid_search2 = GridSearchCV(pipeline2, params, cv=10, verbose=5, scoring='accuracy')\ngrid_search2.fit(X_train, y_train)\n\nFitting 10 folds for each of 171 candidates, totalling 1710 fits\n[CV] knn_clf__n_neighbors=1, pca__n_components=1 .....................\n\n\n[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n\n\n[CV]  knn_clf__n_neighbors=1, pca__n_components=1, score=0.728, total=   0.2s\n[CV] knn_clf__n_neighbors=1, pca__n_components=1 .....................\n[CV]  knn_clf__n_neighbors=1, pca__n_components=1, score=0.679, total=   0.0s\n[CV] knn_clf__n_neighbors=1, pca__n_components=1 .....................\n[CV]  knn_clf__n_neighbors=1, pca__n_components=1, score=0.637, total=   0.1s\n[CV] knn_clf__n_neighbors=1, pca__n_components=1 .....................\n[CV]  knn_clf__n_neighbors=1, pca__n_components=1, score=0.675, total=   0.0s\n[CV] knn_clf__n_neighbors=1, pca__n_components=1 .....................\n[CV]  knn_clf__n_neighbors=1, pca__n_components=1, score=0.787, total=   0.0s\n[CV] knn_clf__n_neighbors=1, pca__n_components=1 .....................\n[CV]  knn_clf__n_neighbors=1, pca__n_components=1, score=0.675, total=   0.0s\n[CV] knn_clf__n_neighbors=1, pca__n_components=1 .....................\n[CV]  knn_clf__n_neighbors=1, pca__n_components=1, score=0.725, total=   0.0s\n[CV] knn_clf__n_neighbors=1, pca__n_components=1 .....................\n[CV]  knn_clf__n_neighbors=1, pca__n_components=1, score=0.700, total=   0.0s\n[CV] knn_clf__n_neighbors=1, pca__n_components=1 .....................\n\n\n[Parallel(n_jobs=1)]: Done   1 out of   1 | elapsed:    0.1s remaining:    0.0s\n[Parallel(n_jobs=1)]: Done   2 out of   2 | elapsed:    0.2s remaining:    0.0s\n[Parallel(n_jobs=1)]: Done   3 out of   3 | elapsed:    0.3s remaining:    0.0s\n[Parallel(n_jobs=1)]: Done   4 out of   4 | elapsed:    0.3s remaining:    0.0s\n\n\n\n[CV]  knn_clf__n_neighbors=1, pca__n_components=1, score=0.759, total=   0.8s\n[CV] knn_clf__n_neighbors=1, pca__n_components=1 .....................\n[CV]  knn_clf__n_neighbors=1, pca__n_components=1, score=0.696, total=   0.5s\n[CV] knn_clf__n_neighbors=1, pca__n_components=2 .....................\n[CV]  knn_clf__n_neighbors=1, pca__n_components=2, score=0.938, total=   0.7s\n[CV] knn_clf__n_neighbors=1, pca__n_components=2 .....................\n[CV]  knn_clf__n_neighbors=1, pca__n_components=2, score=0.877, total=   0.0s\n[CV] knn_clf__n_neighbors=1, pca__n_components=2 .....................\n[CV]  knn_clf__n_neighbors=1, pca__n_components=2, score=0.875, total=   0.0s\n[CV] knn_clf__n_neighbors=1, pca__n_components=2 .....................\n[CV]  knn_clf__n_neighbors=1, pca__n_components=2, score=0.863, total=   0.0s\n[CV] knn_clf__n_neighbors=1, pca__n_components=2 .....................\n[CV]  knn_clf__n_neighbors=1, pca__n_components=2, score=0.863, total=   0.0s\n[CV] knn_clf__n_neighbors=1, pca__n_components=2 .....................\n[CV]  knn_clf__n_neighbors=1, pca__n_components=2, score=0.863, total=   0.0s\n[CV] knn_clf__n_neighbors=1, pca__n_components=2 .....................\n[CV]  knn_clf__n_neighbors=1, pca__n_components=2, score=0.850, total=   0.0s\n[CV] knn_clf__n_neighbors=1, pca__n_components=2 .....................\n[CV]  knn_clf__n_neighbors=1, pca__n_components=2, score=0.812, total=   0.0s\n[CV] knn_clf__n_neighbors=1, pca__n_components=2 .....................\n[CV]  knn_clf__n_neighbors=1, pca__n_components=2, score=0.886, total=   0.0s\n[CV] knn_clf__n_neighbors=1, pca__n_components=2 .....................\n[CV]  knn_clf__n_neighbors=1, pca__n_components=2, score=0.886, total=   0.0s\n[CV] knn_clf__n_neighbors=1, pca__n_components=3 .....................\n[CV]  knn_clf__n_neighbors=1, pca__n_components=3, score=0.877, total=   0.0s\n[CV] knn_clf__n_neighbors=1, pca__n_components=3 .....................\n[CV]  knn_clf__n_neighbors=1, pca__n_components=3, score=0.852, total=   0.0s\n[CV] knn_clf__n_neighbors=1, pca__n_components=3 .....................\n[CV]  knn_clf__n_neighbors=1, pca__n_components=3, score=0.850, total=   0.0s\n[CV] knn_clf__n_neighbors=1, pca__n_components=3 .....................\n[CV]  knn_clf__n_neighbors=1, pca__n_components=3, score=0.838, total=   0.0s\n[CV] knn_clf__n_neighbors=1, pca__n_components=3 .....................\n[CV]  knn_clf__n_neighbors=1, pca__n_components=3, score=0.925, total=   0.0s\n[CV] knn_clf__n_neighbors=1, pca__n_components=3 .....................\n[CV]  knn_clf__n_neighbors=1, pca__n_components=3, score=0.863, total=   0.0s\n[CV] knn_clf__n_neighbors=1, pca__n_components=3 .....................\n[CV]  knn_clf__n_neighbors=1, pca__n_components=3, score=0.850, total=   0.0s\n[CV] knn_clf__n_neighbors=1, pca__n_components=3 .....................\n[CV]  knn_clf__n_neighbors=1, pca__n_components=3, score=0.762, total=   0.0s\n[CV] knn_clf__n_neighbors=1, pca__n_components=3 .....................\n[CV]  knn_clf__n_neighbors=1, pca__n_components=3, score=0.848, total=   0.0s\n[CV] knn_clf__n_neighbors=1, pca__n_components=3 .....................\n[CV]  knn_clf__n_neighbors=1, pca__n_components=3, score=0.835, total=   0.0s\n[CV] knn_clf__n_neighbors=1, pca__n_components=4 .....................\n[CV]  knn_clf__n_neighbors=1, pca__n_components=4, score=0.877, total=   0.0s\n[CV] knn_clf__n_neighbors=1, pca__n_components=4 .....................\n[CV]  knn_clf__n_neighbors=1, pca__n_components=4, score=0.815, total=   0.0s\n[CV] knn_clf__n_neighbors=1, pca__n_components=4 .....................\n[CV]  knn_clf__n_neighbors=1, pca__n_components=4, score=0.838, total=   0.0s\n[CV] knn_clf__n_neighbors=1, pca__n_components=4 .....................\n[CV]  knn_clf__n_neighbors=1, pca__n_components=4, score=0.800, total=   0.0s\n[CV] knn_clf__n_neighbors=1, pca__n_components=4 .....................\n[CV]  knn_clf__n_neighbors=1, pca__n_components=4, score=0.850, total=   0.0s\n[CV] knn_clf__n_neighbors=1, pca__n_components=4 .....................\n[CV]  knn_clf__n_neighbors=1, pca__n_components=4, score=0.900, total=   0.0s\n[CV] knn_clf__n_neighbors=1, pca__n_components=4 .....................\n[CV]  knn_clf__n_neighbors=1, pca__n_components=4, score=0.863, total=   0.0s\n[CV] knn_clf__n_neighbors=1, pca__n_components=4 .....................\n[CV]  knn_clf__n_neighbors=1, pca__n_components=4, score=0.787, total=   0.0s\n[CV] knn_clf__n_neighbors=1, pca__n_components=4 .....................\n[CV]  knn_clf__n_neighbors=1, pca__n_components=4, score=0.823, total=   0.0s\n[CV] knn_clf__n_neighbors=1, pca__n_components=4 .....................\n[CV]  knn_clf__n_neighbors=1, pca__n_components=4, score=0.861, total=   0.0s\n[CV] knn_clf__n_neighbors=1, pca__n_components=5 .....................\n[CV]  knn_clf__n_neighbors=1, pca__n_components=5, score=0.852, total=   0.0s\n[CV] knn_clf__n_neighbors=1, pca__n_components=5 .....................\n[CV]  knn_clf__n_neighbors=1, pca__n_components=5, score=0.778, total=   0.0s\n[CV] knn_clf__n_neighbors=1, pca__n_components=5 .....................\n[CV]  knn_clf__n_neighbors=1, pca__n_components=5, score=0.762, total=   0.0s\n[CV] knn_clf__n_neighbors=1, pca__n_components=5 .....................\n[CV]  knn_clf__n_neighbors=1, pca__n_components=5, score=0.812, total=   0.1s\n[CV] knn_clf__n_neighbors=1, pca__n_components=5 .....................\n[CV]  knn_clf__n_neighbors=1, pca__n_components=5, score=0.787, total=   0.0s\n[CV] knn_clf__n_neighbors=1, pca__n_components=5 .....................\n[CV]  knn_clf__n_neighbors=1, pca__n_components=5, score=0.850, total=   0.0s\n[CV] knn_clf__n_neighbors=1, pca__n_components=5 .....................\n[CV]  knn_clf__n_neighbors=1, pca__n_components=5, score=0.838, total=   0.0s\n[CV] knn_clf__n_neighbors=1, pca__n_components=5 .....................\n[CV]  knn_clf__n_neighbors=1, pca__n_components=5, score=0.750, total=   0.0s\n[CV] knn_clf__n_neighbors=1, pca__n_components=5 .....................\n[CV]  knn_clf__n_neighbors=1, pca__n_components=5, score=0.810, total=   0.0s\n[CV] knn_clf__n_neighbors=1, pca__n_components=5 .....................\n[CV]  knn_clf__n_neighbors=1, pca__n_components=5, score=0.810, total=   0.0s\n[CV] knn_clf__n_neighbors=1, pca__n_components=6 .....................\n[CV]  knn_clf__n_neighbors=1, pca__n_components=6, score=0.802, total=   0.2s\n[CV] knn_clf__n_neighbors=1, pca__n_components=6 .....................\n[CV]  knn_clf__n_neighbors=1, pca__n_components=6, score=0.802, total=   0.1s\n[CV] knn_clf__n_neighbors=1, pca__n_components=6 .....................\n[CV]  knn_clf__n_neighbors=1, pca__n_components=6, score=0.787, total=   0.1s\n[CV] knn_clf__n_neighbors=1, pca__n_components=6 .....................\n[CV]  knn_clf__n_neighbors=1, pca__n_components=6, score=0.875, total=   0.0s\n[CV] knn_clf__n_neighbors=1, pca__n_components=6 .....................\n[CV]  knn_clf__n_neighbors=1, pca__n_components=6, score=0.812, total=   0.0s\n[CV] knn_clf__n_neighbors=1, pca__n_components=6 .....................\n[CV]  knn_clf__n_neighbors=1, pca__n_components=6, score=0.850, total=   0.0s\n[CV] knn_clf__n_neighbors=1, pca__n_components=6 .....................\n[CV]  knn_clf__n_neighbors=1, pca__n_components=6, score=0.838, total=   0.0s\n[CV] knn_clf__n_neighbors=1, pca__n_components=6 .....................\n[CV]  knn_clf__n_neighbors=1, pca__n_components=6, score=0.812, total=   0.7s\n[CV] knn_clf__n_neighbors=1, pca__n_components=6 .....................\n[CV]  knn_clf__n_neighbors=1, pca__n_components=6, score=0.823, total=   0.0s\n[CV] knn_clf__n_neighbors=1, pca__n_components=6 .....................\n[CV]  knn_clf__n_neighbors=1, pca__n_components=6, score=0.810, total=   0.0s\n[CV] knn_clf__n_neighbors=1, pca__n_components=7 .....................\n[CV]  knn_clf__n_neighbors=1, pca__n_components=7, score=0.753, total=   0.2s\n[CV] knn_clf__n_neighbors=1, pca__n_components=7 .....................\n[CV]  knn_clf__n_neighbors=1, pca__n_components=7, score=0.790, total=   0.0s\n[CV] knn_clf__n_neighbors=1, pca__n_components=7 .....................\n[CV]  knn_clf__n_neighbors=1, pca__n_components=7, score=0.812, total=   0.5s\n[CV] knn_clf__n_neighbors=1, pca__n_components=7 .....................\n[CV]  knn_clf__n_neighbors=1, pca__n_components=7, score=0.800, total=   0.1s\n[CV] knn_clf__n_neighbors=1, pca__n_components=7 .....................\n[CV]  knn_clf__n_neighbors=1, pca__n_components=7, score=0.688, total=   0.0s\n[CV] knn_clf__n_neighbors=1, pca__n_components=7 .....................\n[CV]  knn_clf__n_neighbors=1, pca__n_components=7, score=0.800, total=   0.0s\n[CV] knn_clf__n_neighbors=1, pca__n_components=7 .....................\n[CV]  knn_clf__n_neighbors=1, pca__n_components=7, score=0.787, total=   0.0s\n[CV] knn_clf__n_neighbors=1, pca__n_components=7 .....................\n[CV]  knn_clf__n_neighbors=1, pca__n_components=7, score=0.775, total=   0.0s\n[CV] knn_clf__n_neighbors=1, pca__n_components=7 .....................\n[CV]  knn_clf__n_neighbors=1, pca__n_components=7, score=0.797, total=   0.0s\n[CV] knn_clf__n_neighbors=1, pca__n_components=7 .....................\n[CV]  knn_clf__n_neighbors=1, pca__n_components=7, score=0.823, total=   0.0s\n[CV] knn_clf__n_neighbors=1, pca__n_components=8 .....................\n\n\n[CV]  knn_clf__n_neighbors=1, pca__n_components=8, score=0.827, total=   0.0s\n[CV] knn_clf__n_neighbors=1, pca__n_components=8 .....................\n[CV]  knn_clf__n_neighbors=1, pca__n_components=8, score=0.778, total=   0.0s\n[CV] knn_clf__n_neighbors=1, pca__n_components=8 .....................\n[CV]  knn_clf__n_neighbors=1, pca__n_components=8, score=0.825, total=   0.0s\n[CV] knn_clf__n_neighbors=1, pca__n_components=8 .....................\n[CV]  knn_clf__n_neighbors=1, pca__n_components=8, score=0.787, total=   0.0s\n[CV] knn_clf__n_neighbors=1, pca__n_components=8 .....................\n[CV]  knn_clf__n_neighbors=1, pca__n_components=8, score=0.725, total=   0.0s\n[CV] knn_clf__n_neighbors=1, pca__n_components=8 .....................\n[CV]  knn_clf__n_neighbors=1, pca__n_components=8, score=0.713, total=   0.0s\n[CV] knn_clf__n_neighbors=1, pca__n_components=8 .....................\n[CV]  knn_clf__n_neighbors=1, pca__n_components=8, score=0.750, total=   0.0s\n[CV] knn_clf__n_neighbors=1, pca__n_components=8 .....................\n[CV]  knn_clf__n_neighbors=1, pca__n_components=8, score=0.812, total=   0.0s\n[CV] knn_clf__n_neighbors=1, pca__n_components=8 .....................\n[CV]  knn_clf__n_neighbors=1, pca__n_components=8, score=0.785, total=   0.0s\n[CV] knn_clf__n_neighbors=1, pca__n_components=8 .....................\n[CV]  knn_clf__n_neighbors=1, pca__n_components=8, score=0.785, total=   0.0s\n[CV] knn_clf__n_neighbors=1, pca__n_components=9 .....................\n[CV]  knn_clf__n_neighbors=1, pca__n_components=9, score=0.728, total=   0.0s\n[CV] knn_clf__n_neighbors=1, pca__n_components=9 .....................\n[CV]  knn_clf__n_neighbors=1, pca__n_components=9, score=0.790, total=   0.0s\n[CV] knn_clf__n_neighbors=1, pca__n_components=9 .....................\n[CV]  knn_clf__n_neighbors=1, pca__n_components=9, score=0.800, total=   0.0s\n[CV] knn_clf__n_neighbors=1, pca__n_components=9 .....................\n[CV]  knn_clf__n_neighbors=1, pca__n_components=9, score=0.762, total=   0.0s\n[CV] knn_clf__n_neighbors=1, pca__n_components=9 .....................\n[CV]  knn_clf__n_neighbors=1, pca__n_components=9, score=0.775, total=   0.0s\n[CV] knn_clf__n_neighbors=1, pca__n_components=9 .....................\n[CV]  knn_clf__n_neighbors=1, pca__n_components=9, score=0.725, total=   0.0s\n[CV] knn_clf__n_neighbors=1, pca__n_components=9 .....................\n[CV]  knn_clf__n_neighbors=1, pca__n_components=9, score=0.738, total=   0.0s\n[CV] knn_clf__n_neighbors=1, pca__n_components=9 .....................\n[CV]  knn_clf__n_neighbors=1, pca__n_components=9, score=0.775, total=   0.0s\n[CV] knn_clf__n_neighbors=1, pca__n_components=9 .....................\n[CV]  knn_clf__n_neighbors=1, pca__n_components=9, score=0.785, total=   0.0s\n[CV] knn_clf__n_neighbors=1, pca__n_components=9 .....................\n[CV]  knn_clf__n_neighbors=1, pca__n_components=9, score=0.785, total=   0.0s\n[CV] knn_clf__n_neighbors=2, pca__n_components=1 .....................\n[CV]  knn_clf__n_neighbors=2, pca__n_components=1, score=0.753, total=   0.0s\n[CV] knn_clf__n_neighbors=2, pca__n_components=1 .....................\n[CV]  knn_clf__n_neighbors=2, pca__n_components=1, score=0.728, total=   0.0s\n[CV] knn_clf__n_neighbors=2, pca__n_components=1 .....................\n[CV]  knn_clf__n_neighbors=2, pca__n_components=1, score=0.675, total=   0.0s\n[CV] knn_clf__n_neighbors=2, pca__n_components=1 .....................\n[CV]  knn_clf__n_neighbors=2, pca__n_components=1, score=0.688, total=   0.0s\n[CV] knn_clf__n_neighbors=2, pca__n_components=1 .....................\n[CV]  knn_clf__n_neighbors=2, pca__n_components=1, score=0.787, total=   0.0s\n[CV] knn_clf__n_neighbors=2, pca__n_components=1 .....................\n[CV]  knn_clf__n_neighbors=2, pca__n_components=1, score=0.738, total=   0.0s\n[CV] knn_clf__n_neighbors=2, pca__n_components=1 .....................\n[CV]  knn_clf__n_neighbors=2, pca__n_components=1, score=0.762, total=   0.0s\n[CV] knn_clf__n_neighbors=2, pca__n_components=1 .....................\n[CV]  knn_clf__n_neighbors=2, pca__n_components=1, score=0.738, total=   0.0s\n[CV] knn_clf__n_neighbors=2, pca__n_components=1 .....................\n[CV]  knn_clf__n_neighbors=2, pca__n_components=1, score=0.810, total=   0.0s\n[CV] knn_clf__n_neighbors=2, pca__n_components=1 .....................\n[CV]  knn_clf__n_neighbors=2, pca__n_components=1, score=0.671, total=   0.0s\n[CV] knn_clf__n_neighbors=2, pca__n_components=2 .....................\n[CV]  knn_clf__n_neighbors=2, pca__n_components=2, score=0.889, total=   0.0s\n[CV] knn_clf__n_neighbors=2, pca__n_components=2 .....................\n[CV]  knn_clf__n_neighbors=2, pca__n_components=2, score=0.889, total=   0.0s\n[CV] knn_clf__n_neighbors=2, pca__n_components=2 .....................\n[CV]  knn_clf__n_neighbors=2, pca__n_components=2, score=0.875, total=   0.0s\n[CV] knn_clf__n_neighbors=2, pca__n_components=2 .....................\n[CV]  knn_clf__n_neighbors=2, pca__n_components=2, score=0.900, total=   0.0s\n[CV] knn_clf__n_neighbors=2, pca__n_components=2 .....................\n[CV]  knn_clf__n_neighbors=2, pca__n_components=2, score=0.850, total=   0.0s\n[CV] knn_clf__n_neighbors=2, pca__n_components=2 .....................\n[CV]  knn_clf__n_neighbors=2, pca__n_components=2, score=0.887, total=   0.0s\n[CV] knn_clf__n_neighbors=2, pca__n_components=2 .....................\n[CV]  knn_clf__n_neighbors=2, pca__n_components=2, score=0.875, total=   0.0s\n[CV] knn_clf__n_neighbors=2, pca__n_components=2 .....................\n[CV]  knn_clf__n_neighbors=2, pca__n_components=2, score=0.863, total=   0.0s\n[CV] knn_clf__n_neighbors=2, pca__n_components=2 .....................\n[CV]  knn_clf__n_neighbors=2, pca__n_components=2, score=0.886, total=   0.0s\n[CV] knn_clf__n_neighbors=2, pca__n_components=2 .....................\n[CV]  knn_clf__n_neighbors=2, pca__n_components=2, score=0.848, total=   0.0s\n[CV] knn_clf__n_neighbors=2, pca__n_components=3 .....................\n[CV]  knn_clf__n_neighbors=2, pca__n_components=3, score=0.827, total=   0.0s\n[CV] knn_clf__n_neighbors=2, pca__n_components=3 .....................\n[CV]  knn_clf__n_neighbors=2, pca__n_components=3, score=0.864, total=   0.0s\n[CV] knn_clf__n_neighbors=2, pca__n_components=3 .....................\n[CV]  knn_clf__n_neighbors=2, pca__n_components=3, score=0.875, total=   0.0s\n[CV] knn_clf__n_neighbors=2, pca__n_components=3 .....................\n[CV]  knn_clf__n_neighbors=2, pca__n_components=3, score=0.875, total=   0.0s\n[CV] knn_clf__n_neighbors=2, pca__n_components=3 .....................\n[CV]  knn_clf__n_neighbors=2, pca__n_components=3, score=0.912, total=   0.0s\n[CV] knn_clf__n_neighbors=2, pca__n_components=3 .....................\n[CV]  knn_clf__n_neighbors=2, pca__n_components=3, score=0.863, total=   0.0s\n[CV] knn_clf__n_neighbors=2, pca__n_components=3 .....................\n[CV]  knn_clf__n_neighbors=2, pca__n_components=3, score=0.863, total=   0.0s\n[CV] knn_clf__n_neighbors=2, pca__n_components=3 .....................\n[CV]  knn_clf__n_neighbors=2, pca__n_components=3, score=0.812, total=   0.0s\n[CV] knn_clf__n_neighbors=2, pca__n_components=3 .....................\n[CV]  knn_clf__n_neighbors=2, pca__n_components=3, score=0.861, total=   0.0s\n[CV] knn_clf__n_neighbors=2, pca__n_components=3 .....................\n[CV]  knn_clf__n_neighbors=2, pca__n_components=3, score=0.835, total=   0.0s\n[CV] knn_clf__n_neighbors=2, pca__n_components=4 .....................\n[CV]  knn_clf__n_neighbors=2, pca__n_components=4, score=0.852, total=   0.0s\n[CV] knn_clf__n_neighbors=2, pca__n_components=4 .....................\n[CV]  knn_clf__n_neighbors=2, pca__n_components=4, score=0.815, total=   0.0s\n[CV] knn_clf__n_neighbors=2, pca__n_components=4 .....................\n[CV]  knn_clf__n_neighbors=2, pca__n_components=4, score=0.825, total=   0.0s\n[CV] knn_clf__n_neighbors=2, pca__n_components=4 .....................\n[CV]  knn_clf__n_neighbors=2, pca__n_components=4, score=0.825, total=   0.0s\n[CV] knn_clf__n_neighbors=2, pca__n_components=4 .....................\n[CV]  knn_clf__n_neighbors=2, pca__n_components=4, score=0.900, total=   0.0s\n[CV] knn_clf__n_neighbors=2, pca__n_components=4 .....................\n[CV]  knn_clf__n_neighbors=2, pca__n_components=4, score=0.887, total=   0.0s\n[CV] knn_clf__n_neighbors=2, pca__n_components=4 .....................\n[CV]  knn_clf__n_neighbors=2, pca__n_components=4, score=0.875, total=   0.0s\n[CV] knn_clf__n_neighbors=2, pca__n_components=4 .....................\n[CV]  knn_clf__n_neighbors=2, pca__n_components=4, score=0.762, total=   0.0s\n[CV] knn_clf__n_neighbors=2, pca__n_components=4 .....................\n[CV]  knn_clf__n_neighbors=2, pca__n_components=4, score=0.873, total=   0.0s\n[CV] knn_clf__n_neighbors=2, pca__n_components=4 .....................\n[CV]  knn_clf__n_neighbors=2, pca__n_components=4, score=0.810, total=   0.0s\n[CV] knn_clf__n_neighbors=2, pca__n_components=5 .....................\n[CV]  knn_clf__n_neighbors=2, pca__n_components=5, score=0.840, total=   0.0s\n[CV] knn_clf__n_neighbors=2, pca__n_components=5 .....................\n\n\n[CV]  knn_clf__n_neighbors=2, pca__n_components=5, score=0.790, total=   0.0s\n[CV] knn_clf__n_neighbors=2, pca__n_components=5 .....................\n[CV]  knn_clf__n_neighbors=2, pca__n_components=5, score=0.775, total=   0.0s\n[CV] knn_clf__n_neighbors=2, pca__n_components=5 .....................\n[CV]  knn_clf__n_neighbors=2, pca__n_components=5, score=0.838, total=   0.0s\n[CV] knn_clf__n_neighbors=2, pca__n_components=5 .....................\n[CV]  knn_clf__n_neighbors=2, pca__n_components=5, score=0.850, total=   0.0s\n[CV] knn_clf__n_neighbors=2, pca__n_components=5 .....................\n[CV]  knn_clf__n_neighbors=2, pca__n_components=5, score=0.825, total=   0.0s\n[CV] knn_clf__n_neighbors=2, pca__n_components=5 .....................\n[CV]  knn_clf__n_neighbors=2, pca__n_components=5, score=0.838, total=   0.0s\n[CV] knn_clf__n_neighbors=2, pca__n_components=5 .....................\n[CV]  knn_clf__n_neighbors=2, pca__n_components=5, score=0.762, total=   0.0s\n[CV] knn_clf__n_neighbors=2, pca__n_components=5 .....................\n[CV]  knn_clf__n_neighbors=2, pca__n_components=5, score=0.848, total=   0.0s\n[CV] knn_clf__n_neighbors=2, pca__n_components=5 .....................\n[CV]  knn_clf__n_neighbors=2, pca__n_components=5, score=0.810, total=   0.0s\n[CV] knn_clf__n_neighbors=2, pca__n_components=6 .....................\n[CV]  knn_clf__n_neighbors=2, pca__n_components=6, score=0.815, total=   0.0s\n[CV] knn_clf__n_neighbors=2, pca__n_components=6 .....................\n[CV]  knn_clf__n_neighbors=2, pca__n_components=6, score=0.840, total=   0.0s\n[CV] knn_clf__n_neighbors=2, pca__n_components=6 .....................\n[CV]  knn_clf__n_neighbors=2, pca__n_components=6, score=0.825, total=   0.0s\n[CV] knn_clf__n_neighbors=2, pca__n_components=6 .....................\n[CV]  knn_clf__n_neighbors=2, pca__n_components=6, score=0.850, total=   0.0s\n[CV] knn_clf__n_neighbors=2, pca__n_components=6 .....................\n[CV]  knn_clf__n_neighbors=2, pca__n_components=6, score=0.875, total=   0.0s\n[CV] knn_clf__n_neighbors=2, pca__n_components=6 .....................\n[CV]  knn_clf__n_neighbors=2, pca__n_components=6, score=0.812, total=   0.0s\n[CV] knn_clf__n_neighbors=2, pca__n_components=6 .....................\n[CV]  knn_clf__n_neighbors=2, pca__n_components=6, score=0.825, total=   0.0s\n[CV] knn_clf__n_neighbors=2, pca__n_components=6 .....................\n[CV]  knn_clf__n_neighbors=2, pca__n_components=6, score=0.762, total=   0.0s\n[CV] knn_clf__n_neighbors=2, pca__n_components=6 .....................\n[CV]  knn_clf__n_neighbors=2, pca__n_components=6, score=0.848, total=   0.0s\n[CV] knn_clf__n_neighbors=2, pca__n_components=6 .....................\n[CV]  knn_clf__n_neighbors=2, pca__n_components=6, score=0.759, total=   0.0s\n[CV] knn_clf__n_neighbors=2, pca__n_components=7 .....................\n[CV]  knn_clf__n_neighbors=2, pca__n_components=7, score=0.765, total=   0.0s\n[CV] knn_clf__n_neighbors=2, pca__n_components=7 .....................\n[CV]  knn_clf__n_neighbors=2, pca__n_components=7, score=0.765, total=   0.0s\n[CV] knn_clf__n_neighbors=2, pca__n_components=7 .....................\n[CV]  knn_clf__n_neighbors=2, pca__n_components=7, score=0.825, total=   0.0s\n[CV] knn_clf__n_neighbors=2, pca__n_components=7 .....................\n[CV]  knn_clf__n_neighbors=2, pca__n_components=7, score=0.787, total=   0.0s\n[CV] knn_clf__n_neighbors=2, pca__n_components=7 .....................\n[CV]  knn_clf__n_neighbors=2, pca__n_components=7, score=0.812, total=   0.0s\n[CV] knn_clf__n_neighbors=2, pca__n_components=7 .....................\n[CV]  knn_clf__n_neighbors=2, pca__n_components=7, score=0.812, total=   0.0s\n[CV] knn_clf__n_neighbors=2, pca__n_components=7 .....................\n[CV]  knn_clf__n_neighbors=2, pca__n_components=7, score=0.787, total=   0.0s\n[CV] knn_clf__n_neighbors=2, pca__n_components=7 .....................\n[CV]  knn_clf__n_neighbors=2, pca__n_components=7, score=0.775, total=   0.0s\n[CV] knn_clf__n_neighbors=2, pca__n_components=7 .....................\n[CV]  knn_clf__n_neighbors=2, pca__n_components=7, score=0.823, total=   0.0s\n[CV] knn_clf__n_neighbors=2, pca__n_components=7 .....................\n[CV]  knn_clf__n_neighbors=2, pca__n_components=7, score=0.810, total=   0.0s\n[CV] knn_clf__n_neighbors=2, pca__n_components=8 .....................\n[CV]  knn_clf__n_neighbors=2, pca__n_components=8, score=0.802, total=   0.0s\n[CV] knn_clf__n_neighbors=2, pca__n_components=8 .....................\n[CV]  knn_clf__n_neighbors=2, pca__n_components=8, score=0.765, total=   0.0s\n[CV] knn_clf__n_neighbors=2, pca__n_components=8 .....................\n[CV]  knn_clf__n_neighbors=2, pca__n_components=8, score=0.800, total=   0.0s\n[CV] knn_clf__n_neighbors=2, pca__n_components=8 .....................\n[CV]  knn_clf__n_neighbors=2, pca__n_components=8, score=0.762, total=   0.0s\n[CV] knn_clf__n_neighbors=2, pca__n_components=8 .....................\n[CV]  knn_clf__n_neighbors=2, pca__n_components=8, score=0.838, total=   0.0s\n[CV] knn_clf__n_neighbors=2, pca__n_components=8 .....................\n[CV]  knn_clf__n_neighbors=2, pca__n_components=8, score=0.750, total=   0.0s\n[CV] knn_clf__n_neighbors=2, pca__n_components=8 .....................\n[CV]  knn_clf__n_neighbors=2, pca__n_components=8, score=0.750, total=   0.0s\n[CV] knn_clf__n_neighbors=2, pca__n_components=8 .....................\n[CV]  knn_clf__n_neighbors=2, pca__n_components=8, score=0.738, total=   0.0s\n[CV] knn_clf__n_neighbors=2, pca__n_components=8 .....................\n[CV]  knn_clf__n_neighbors=2, pca__n_components=8, score=0.797, total=   0.0s\n[CV] knn_clf__n_neighbors=2, pca__n_components=8 .....................\n[CV]  knn_clf__n_neighbors=2, pca__n_components=8, score=0.772, total=   0.0s\n[CV] knn_clf__n_neighbors=2, pca__n_components=9 .....................\n[CV]  knn_clf__n_neighbors=2, pca__n_components=9, score=0.741, total=   0.0s\n[CV] knn_clf__n_neighbors=2, pca__n_components=9 .....................\n[CV]  knn_clf__n_neighbors=2, pca__n_components=9, score=0.778, total=   0.0s\n[CV] knn_clf__n_neighbors=2, pca__n_components=9 .....................\n[CV]  knn_clf__n_neighbors=2, pca__n_components=9, score=0.812, total=   0.0s\n[CV] knn_clf__n_neighbors=2, pca__n_components=9 .....................\n[CV]  knn_clf__n_neighbors=2, pca__n_components=9, score=0.800, total=   0.0s\n[CV] knn_clf__n_neighbors=2, pca__n_components=9 .....................\n[CV]  knn_clf__n_neighbors=2, pca__n_components=9, score=0.725, total=   0.0s\n[CV] knn_clf__n_neighbors=2, pca__n_components=9 .....................\n[CV]  knn_clf__n_neighbors=2, pca__n_components=9, score=0.750, total=   0.0s\n[CV] knn_clf__n_neighbors=2, pca__n_components=9 .....................\n[CV]  knn_clf__n_neighbors=2, pca__n_components=9, score=0.787, total=   0.0s\n[CV] knn_clf__n_neighbors=2, pca__n_components=9 .....................\n[CV]  knn_clf__n_neighbors=2, pca__n_components=9, score=0.762, total=   0.0s\n[CV] knn_clf__n_neighbors=2, pca__n_components=9 .....................\n[CV]  knn_clf__n_neighbors=2, pca__n_components=9, score=0.835, total=   0.0s\n[CV] knn_clf__n_neighbors=2, pca__n_components=9 .....................\n[CV]  knn_clf__n_neighbors=2, pca__n_components=9, score=0.734, total=   0.0s\n[CV] knn_clf__n_neighbors=3, pca__n_components=1 .....................\n[CV]  knn_clf__n_neighbors=3, pca__n_components=1, score=0.778, total=   0.0s\n[CV] knn_clf__n_neighbors=3, pca__n_components=1 .....................\n[CV]  knn_clf__n_neighbors=3, pca__n_components=1, score=0.778, total=   0.0s\n[CV] knn_clf__n_neighbors=3, pca__n_components=1 .....................\n[CV]  knn_clf__n_neighbors=3, pca__n_components=1, score=0.662, total=   0.0s\n[CV] knn_clf__n_neighbors=3, pca__n_components=1 .....................\n[CV]  knn_clf__n_neighbors=3, pca__n_components=1, score=0.713, total=   0.0s\n[CV] knn_clf__n_neighbors=3, pca__n_components=1 .....................\n[CV]  knn_clf__n_neighbors=3, pca__n_components=1, score=0.762, total=   0.0s\n[CV] knn_clf__n_neighbors=3, pca__n_components=1 .....................\n[CV]  knn_clf__n_neighbors=3, pca__n_components=1, score=0.675, total=   0.0s\n[CV] knn_clf__n_neighbors=3, pca__n_components=1 .....................\n[CV]  knn_clf__n_neighbors=3, pca__n_components=1, score=0.762, total=   0.0s\n[CV] knn_clf__n_neighbors=3, pca__n_components=1 .....................\n[CV]  knn_clf__n_neighbors=3, pca__n_components=1, score=0.713, total=   0.0s\n[CV] knn_clf__n_neighbors=3, pca__n_components=1 .....................\n[CV]  knn_clf__n_neighbors=3, pca__n_components=1, score=0.785, total=   0.0s\n[CV] knn_clf__n_neighbors=3, pca__n_components=1 .....................\n[CV]  knn_clf__n_neighbors=3, pca__n_components=1, score=0.722, total=   0.0s\n[CV] knn_clf__n_neighbors=3, pca__n_components=2 .....................\n\n\n[CV]  knn_clf__n_neighbors=3, pca__n_components=2, score=0.901, total=   0.0s\n[CV] knn_clf__n_neighbors=3, pca__n_components=2 .....................\n[CV]  knn_clf__n_neighbors=3, pca__n_components=2, score=0.889, total=   0.0s\n[CV] knn_clf__n_neighbors=3, pca__n_components=2 .....................\n[CV]  knn_clf__n_neighbors=3, pca__n_components=2, score=0.887, total=   0.0s\n[CV] knn_clf__n_neighbors=3, pca__n_components=2 .....................\n[CV]  knn_clf__n_neighbors=3, pca__n_components=2, score=0.900, total=   0.0s\n[CV] knn_clf__n_neighbors=3, pca__n_components=2 .....................\n[CV]  knn_clf__n_neighbors=3, pca__n_components=2, score=0.900, total=   0.0s\n[CV] knn_clf__n_neighbors=3, pca__n_components=2 .....................\n[CV]  knn_clf__n_neighbors=3, pca__n_components=2, score=0.938, total=   0.0s\n[CV] knn_clf__n_neighbors=3, pca__n_components=2 .....................\n[CV]  knn_clf__n_neighbors=3, pca__n_components=2, score=0.887, total=   0.0s\n[CV] knn_clf__n_neighbors=3, pca__n_components=2 .....................\n[CV]  knn_clf__n_neighbors=3, pca__n_components=2, score=0.850, total=   0.0s\n[CV] knn_clf__n_neighbors=3, pca__n_components=2 .....................\n[CV]  knn_clf__n_neighbors=3, pca__n_components=2, score=0.848, total=   0.0s\n[CV] knn_clf__n_neighbors=3, pca__n_components=2 .....................\n[CV]  knn_clf__n_neighbors=3, pca__n_components=2, score=0.873, total=   0.0s\n[CV] knn_clf__n_neighbors=3, pca__n_components=3 .....................\n[CV]  knn_clf__n_neighbors=3, pca__n_components=3, score=0.852, total=   0.0s\n[CV] knn_clf__n_neighbors=3, pca__n_components=3 .....................\n[CV]  knn_clf__n_neighbors=3, pca__n_components=3, score=0.901, total=   0.0s\n[CV] knn_clf__n_neighbors=3, pca__n_components=3 .....................\n[CV]  knn_clf__n_neighbors=3, pca__n_components=3, score=0.887, total=   0.0s\n[CV] knn_clf__n_neighbors=3, pca__n_components=3 .....................\n[CV]  knn_clf__n_neighbors=3, pca__n_components=3, score=0.875, total=   0.0s\n[CV] knn_clf__n_neighbors=3, pca__n_components=3 .....................\n[CV]  knn_clf__n_neighbors=3, pca__n_components=3, score=0.900, total=   0.0s\n[CV] knn_clf__n_neighbors=3, pca__n_components=3 .....................\n[CV]  knn_clf__n_neighbors=3, pca__n_components=3, score=0.887, total=   0.0s\n[CV] knn_clf__n_neighbors=3, pca__n_components=3 .....................\n[CV]  knn_clf__n_neighbors=3, pca__n_components=3, score=0.900, total=   0.0s\n[CV] knn_clf__n_neighbors=3, pca__n_components=3 .....................\n[CV]  knn_clf__n_neighbors=3, pca__n_components=3, score=0.812, total=   0.0s\n[CV] knn_clf__n_neighbors=3, pca__n_components=3 .....................\n[CV]  knn_clf__n_neighbors=3, pca__n_components=3, score=0.861, total=   0.0s\n[CV] knn_clf__n_neighbors=3, pca__n_components=3 .....................\n[CV]  knn_clf__n_neighbors=3, pca__n_components=3, score=0.835, total=   0.0s\n[CV] knn_clf__n_neighbors=3, pca__n_components=4 .....................\n[CV]  knn_clf__n_neighbors=3, pca__n_components=4, score=0.914, total=   0.0s\n[CV] knn_clf__n_neighbors=3, pca__n_components=4 .....................\n[CV]  knn_clf__n_neighbors=3, pca__n_components=4, score=0.852, total=   0.0s\n[CV] knn_clf__n_neighbors=3, pca__n_components=4 .....................\n[CV]  knn_clf__n_neighbors=3, pca__n_components=4, score=0.838, total=   0.0s\n[CV] knn_clf__n_neighbors=3, pca__n_components=4 .....................\n[CV]  knn_clf__n_neighbors=3, pca__n_components=4, score=0.850, total=   0.0s\n[CV] knn_clf__n_neighbors=3, pca__n_components=4 .....................\n[CV]  knn_clf__n_neighbors=3, pca__n_components=4, score=0.887, total=   0.0s\n[CV] knn_clf__n_neighbors=3, pca__n_components=4 .....................\n[CV]  knn_clf__n_neighbors=3, pca__n_components=4, score=0.887, total=   0.0s\n[CV] knn_clf__n_neighbors=3, pca__n_components=4 .....................\n[CV]  knn_clf__n_neighbors=3, pca__n_components=4, score=0.825, total=   0.0s\n[CV] knn_clf__n_neighbors=3, pca__n_components=4 .....................\n[CV]  knn_clf__n_neighbors=3, pca__n_components=4, score=0.812, total=   0.0s\n[CV] knn_clf__n_neighbors=3, pca__n_components=4 .....................\n[CV]  knn_clf__n_neighbors=3, pca__n_components=4, score=0.848, total=   0.0s\n[CV] knn_clf__n_neighbors=3, pca__n_components=4 .....................\n[CV]  knn_clf__n_neighbors=3, pca__n_components=4, score=0.835, total=   0.0s\n[CV] knn_clf__n_neighbors=3, pca__n_components=5 .....................\n[CV]  knn_clf__n_neighbors=3, pca__n_components=5, score=0.864, total=   0.0s\n[CV] knn_clf__n_neighbors=3, pca__n_components=5 .....................\n[CV]  knn_clf__n_neighbors=3, pca__n_components=5, score=0.827, total=   0.0s\n[CV] knn_clf__n_neighbors=3, pca__n_components=5 .....................\n[CV]  knn_clf__n_neighbors=3, pca__n_components=5, score=0.825, total=   0.0s\n[CV] knn_clf__n_neighbors=3, pca__n_components=5 .....................\n[CV]  knn_clf__n_neighbors=3, pca__n_components=5, score=0.887, total=   0.0s\n[CV] knn_clf__n_neighbors=3, pca__n_components=5 .....................\n[CV]  knn_clf__n_neighbors=3, pca__n_components=5, score=0.863, total=   0.0s\n[CV] knn_clf__n_neighbors=3, pca__n_components=5 .....................\n[CV]  knn_clf__n_neighbors=3, pca__n_components=5, score=0.900, total=   0.0s\n[CV] knn_clf__n_neighbors=3, pca__n_components=5 .....................\n[CV]  knn_clf__n_neighbors=3, pca__n_components=5, score=0.863, total=   0.0s\n[CV] knn_clf__n_neighbors=3, pca__n_components=5 .....................\n[CV]  knn_clf__n_neighbors=3, pca__n_components=5, score=0.812, total=   0.0s\n[CV] knn_clf__n_neighbors=3, pca__n_components=5 .....................\n[CV]  knn_clf__n_neighbors=3, pca__n_components=5, score=0.835, total=   0.0s\n[CV] knn_clf__n_neighbors=3, pca__n_components=5 .....................\n[CV]  knn_clf__n_neighbors=3, pca__n_components=5, score=0.835, total=   0.0s\n[CV] knn_clf__n_neighbors=3, pca__n_components=6 .....................\n[CV]  knn_clf__n_neighbors=3, pca__n_components=6, score=0.827, total=   0.0s\n[CV] knn_clf__n_neighbors=3, pca__n_components=6 .....................\n[CV]  knn_clf__n_neighbors=3, pca__n_components=6, score=0.852, total=   0.0s\n[CV] knn_clf__n_neighbors=3, pca__n_components=6 .....................\n[CV]  knn_clf__n_neighbors=3, pca__n_components=6, score=0.838, total=   0.0s\n[CV] knn_clf__n_neighbors=3, pca__n_components=6 .....................\n[CV]  knn_clf__n_neighbors=3, pca__n_components=6, score=0.863, total=   0.0s\n[CV] knn_clf__n_neighbors=3, pca__n_components=6 .....................\n[CV]  knn_clf__n_neighbors=3, pca__n_components=6, score=0.887, total=   0.0s\n[CV] knn_clf__n_neighbors=3, pca__n_components=6 .....................\n[CV]  knn_clf__n_neighbors=3, pca__n_components=6, score=0.938, total=   0.0s\n[CV] knn_clf__n_neighbors=3, pca__n_components=6 .....................\n[CV]  knn_clf__n_neighbors=3, pca__n_components=6, score=0.825, total=   0.0s\n[CV] knn_clf__n_neighbors=3, pca__n_components=6 .....................\n[CV]  knn_clf__n_neighbors=3, pca__n_components=6, score=0.825, total=   0.0s\n[CV] knn_clf__n_neighbors=3, pca__n_components=6 .....................\n[CV]  knn_clf__n_neighbors=3, pca__n_components=6, score=0.835, total=   0.0s\n[CV] knn_clf__n_neighbors=3, pca__n_components=6 .....................\n[CV]  knn_clf__n_neighbors=3, pca__n_components=6, score=0.835, total=   0.0s\n[CV] knn_clf__n_neighbors=3, pca__n_components=7 .....................\n[CV]  knn_clf__n_neighbors=3, pca__n_components=7, score=0.852, total=   0.0s\n[CV] knn_clf__n_neighbors=3, pca__n_components=7 .....................\n[CV]  knn_clf__n_neighbors=3, pca__n_components=7, score=0.827, total=   0.0s\n[CV] knn_clf__n_neighbors=3, pca__n_components=7 .....................\n[CV]  knn_clf__n_neighbors=3, pca__n_components=7, score=0.825, total=   0.0s\n[CV] knn_clf__n_neighbors=3, pca__n_components=7 .....................\n[CV]  knn_clf__n_neighbors=3, pca__n_components=7, score=0.863, total=   0.0s\n[CV] knn_clf__n_neighbors=3, pca__n_components=7 .....................\n[CV]  knn_clf__n_neighbors=3, pca__n_components=7, score=0.838, total=   0.0s\n[CV] knn_clf__n_neighbors=3, pca__n_components=7 .....................\n[CV]  knn_clf__n_neighbors=3, pca__n_components=7, score=0.825, total=   0.0s\n[CV] knn_clf__n_neighbors=3, pca__n_components=7 .....................\n[CV]  knn_clf__n_neighbors=3, pca__n_components=7, score=0.800, total=   0.0s\n[CV] knn_clf__n_neighbors=3, pca__n_components=7 .....................\n[CV]  knn_clf__n_neighbors=3, pca__n_components=7, score=0.838, total=   0.0s\n[CV] knn_clf__n_neighbors=3, pca__n_components=7 .....................\n\n\n[CV]  knn_clf__n_neighbors=3, pca__n_components=7, score=0.810, total=   0.0s\n[CV] knn_clf__n_neighbors=3, pca__n_components=7 .....................\n[CV]  knn_clf__n_neighbors=3, pca__n_components=7, score=0.823, total=   0.0s\n[CV] knn_clf__n_neighbors=3, pca__n_components=8 .....................\n[CV]  knn_clf__n_neighbors=3, pca__n_components=8, score=0.840, total=   0.0s\n[CV] knn_clf__n_neighbors=3, pca__n_components=8 .....................\n[CV]  knn_clf__n_neighbors=3, pca__n_components=8, score=0.790, total=   0.0s\n[CV] knn_clf__n_neighbors=3, pca__n_components=8 .....................\n[CV]  knn_clf__n_neighbors=3, pca__n_components=8, score=0.863, total=   0.0s\n[CV] knn_clf__n_neighbors=3, pca__n_components=8 .....................\n[CV]  knn_clf__n_neighbors=3, pca__n_components=8, score=0.838, total=   0.0s\n[CV] knn_clf__n_neighbors=3, pca__n_components=8 .....................\n[CV]  knn_clf__n_neighbors=3, pca__n_components=8, score=0.863, total=   0.0s\n[CV] knn_clf__n_neighbors=3, pca__n_components=8 .....................\n[CV]  knn_clf__n_neighbors=3, pca__n_components=8, score=0.812, total=   0.0s\n[CV] knn_clf__n_neighbors=3, pca__n_components=8 .....................\n[CV]  knn_clf__n_neighbors=3, pca__n_components=8, score=0.762, total=   0.0s\n[CV] knn_clf__n_neighbors=3, pca__n_components=8 .....................\n[CV]  knn_clf__n_neighbors=3, pca__n_components=8, score=0.825, total=   0.0s\n[CV] knn_clf__n_neighbors=3, pca__n_components=8 .....................\n[CV]  knn_clf__n_neighbors=3, pca__n_components=8, score=0.810, total=   0.0s\n[CV] knn_clf__n_neighbors=3, pca__n_components=8 .....................\n[CV]  knn_clf__n_neighbors=3, pca__n_components=8, score=0.810, total=   0.0s\n[CV] knn_clf__n_neighbors=3, pca__n_components=9 .....................\n[CV]  knn_clf__n_neighbors=3, pca__n_components=9, score=0.852, total=   0.0s\n[CV] knn_clf__n_neighbors=3, pca__n_components=9 .....................\n[CV]  knn_clf__n_neighbors=3, pca__n_components=9, score=0.802, total=   0.0s\n[CV] knn_clf__n_neighbors=3, pca__n_components=9 .....................\n[CV]  knn_clf__n_neighbors=3, pca__n_components=9, score=0.838, total=   0.0s\n[CV] knn_clf__n_neighbors=3, pca__n_components=9 .....................\n[CV]  knn_clf__n_neighbors=3, pca__n_components=9, score=0.850, total=   0.0s\n[CV] knn_clf__n_neighbors=3, pca__n_components=9 .....................\n[CV]  knn_clf__n_neighbors=3, pca__n_components=9, score=0.800, total=   0.0s\n[CV] knn_clf__n_neighbors=3, pca__n_components=9 .....................\n[CV]  knn_clf__n_neighbors=3, pca__n_components=9, score=0.863, total=   0.0s\n[CV] knn_clf__n_neighbors=3, pca__n_components=9 .....................\n[CV]  knn_clf__n_neighbors=3, pca__n_components=9, score=0.762, total=   0.0s\n[CV] knn_clf__n_neighbors=3, pca__n_components=9 .....................\n[CV]  knn_clf__n_neighbors=3, pca__n_components=9, score=0.825, total=   0.0s\n[CV] knn_clf__n_neighbors=3, pca__n_components=9 .....................\n[CV]  knn_clf__n_neighbors=3, pca__n_components=9, score=0.823, total=   0.0s\n[CV] knn_clf__n_neighbors=3, pca__n_components=9 .....................\n[CV]  knn_clf__n_neighbors=3, pca__n_components=9, score=0.797, total=   0.0s\n[CV] knn_clf__n_neighbors=4, pca__n_components=1 .....................\n[CV]  knn_clf__n_neighbors=4, pca__n_components=1, score=0.765, total=   0.0s\n[CV] knn_clf__n_neighbors=4, pca__n_components=1 .....................\n[CV]  knn_clf__n_neighbors=4, pca__n_components=1, score=0.741, total=   0.0s\n[CV] knn_clf__n_neighbors=4, pca__n_components=1 .....................\n[CV]  knn_clf__n_neighbors=4, pca__n_components=1, score=0.725, total=   0.0s\n[CV] knn_clf__n_neighbors=4, pca__n_components=1 .....................\n[CV]  knn_clf__n_neighbors=4, pca__n_components=1, score=0.738, total=   0.0s\n[CV] knn_clf__n_neighbors=4, pca__n_components=1 .....................\n[CV]  knn_clf__n_neighbors=4, pca__n_components=1, score=0.762, total=   0.0s\n[CV] knn_clf__n_neighbors=4, pca__n_components=1 .....................\n[CV]  knn_clf__n_neighbors=4, pca__n_components=1, score=0.775, total=   0.0s\n[CV] knn_clf__n_neighbors=4, pca__n_components=1 .....................\n[CV]  knn_clf__n_neighbors=4, pca__n_components=1, score=0.762, total=   0.0s\n[CV] knn_clf__n_neighbors=4, pca__n_components=1 .....................\n[CV]  knn_clf__n_neighbors=4, pca__n_components=1, score=0.738, total=   0.0s\n[CV] knn_clf__n_neighbors=4, pca__n_components=1 .....................\n[CV]  knn_clf__n_neighbors=4, pca__n_components=1, score=0.785, total=   0.0s\n[CV] knn_clf__n_neighbors=4, pca__n_components=1 .....................\n[CV]  knn_clf__n_neighbors=4, pca__n_components=1, score=0.734, total=   0.0s\n[CV] knn_clf__n_neighbors=4, pca__n_components=2 .....................\n[CV]  knn_clf__n_neighbors=4, pca__n_components=2, score=0.877, total=   0.0s\n[CV] knn_clf__n_neighbors=4, pca__n_components=2 .....................\n[CV]  knn_clf__n_neighbors=4, pca__n_components=2, score=0.889, total=   0.0s\n[CV] knn_clf__n_neighbors=4, pca__n_components=2 .....................\n[CV]  knn_clf__n_neighbors=4, pca__n_components=2, score=0.863, total=   0.0s\n[CV] knn_clf__n_neighbors=4, pca__n_components=2 .....................\n[CV]  knn_clf__n_neighbors=4, pca__n_components=2, score=0.887, total=   0.0s\n[CV] knn_clf__n_neighbors=4, pca__n_components=2 .....................\n[CV]  knn_clf__n_neighbors=4, pca__n_components=2, score=0.900, total=   0.0s\n[CV] knn_clf__n_neighbors=4, pca__n_components=2 .....................\n[CV]  knn_clf__n_neighbors=4, pca__n_components=2, score=0.912, total=   0.0s\n[CV] knn_clf__n_neighbors=4, pca__n_components=2 .....................\n[CV]  knn_clf__n_neighbors=4, pca__n_components=2, score=0.900, total=   0.0s\n[CV] knn_clf__n_neighbors=4, pca__n_components=2 .....................\n[CV]  knn_clf__n_neighbors=4, pca__n_components=2, score=0.863, total=   0.0s\n[CV] knn_clf__n_neighbors=4, pca__n_components=2 .....................\n[CV]  knn_clf__n_neighbors=4, pca__n_components=2, score=0.861, total=   0.0s\n[CV] knn_clf__n_neighbors=4, pca__n_components=2 .....................\n[CV]  knn_clf__n_neighbors=4, pca__n_components=2, score=0.861, total=   0.0s\n[CV] knn_clf__n_neighbors=4, pca__n_components=3 .....................\n[CV]  knn_clf__n_neighbors=4, pca__n_components=3, score=0.864, total=   0.0s\n[CV] knn_clf__n_neighbors=4, pca__n_components=3 .....................\n[CV]  knn_clf__n_neighbors=4, pca__n_components=3, score=0.914, total=   0.0s\n[CV] knn_clf__n_neighbors=4, pca__n_components=3 .....................\n[CV]  knn_clf__n_neighbors=4, pca__n_components=3, score=0.900, total=   0.0s\n[CV] knn_clf__n_neighbors=4, pca__n_components=3 .....................\n[CV]  knn_clf__n_neighbors=4, pca__n_components=3, score=0.863, total=   0.0s\n[CV] knn_clf__n_neighbors=4, pca__n_components=3 .....................\n[CV]  knn_clf__n_neighbors=4, pca__n_components=3, score=0.925, total=   0.0s\n[CV] knn_clf__n_neighbors=4, pca__n_components=3 .....................\n[CV]  knn_clf__n_neighbors=4, pca__n_components=3, score=0.887, total=   0.0s\n[CV] knn_clf__n_neighbors=4, pca__n_components=3 .....................\n[CV]  knn_clf__n_neighbors=4, pca__n_components=3, score=0.863, total=   0.0s\n[CV] knn_clf__n_neighbors=4, pca__n_components=3 .....................\n[CV]  knn_clf__n_neighbors=4, pca__n_components=3, score=0.838, total=   0.0s\n[CV] knn_clf__n_neighbors=4, pca__n_components=3 .....................\n[CV]  knn_clf__n_neighbors=4, pca__n_components=3, score=0.886, total=   0.0s\n[CV] knn_clf__n_neighbors=4, pca__n_components=3 .....................\n[CV]  knn_clf__n_neighbors=4, pca__n_components=3, score=0.835, total=   0.0s\n[CV] knn_clf__n_neighbors=4, pca__n_components=4 .....................\n[CV]  knn_clf__n_neighbors=4, pca__n_components=4, score=0.877, total=   0.0s\n[CV] knn_clf__n_neighbors=4, pca__n_components=4 .....................\n[CV]  knn_clf__n_neighbors=4, pca__n_components=4, score=0.864, total=   0.0s\n[CV] knn_clf__n_neighbors=4, pca__n_components=4 .....................\n[CV]  knn_clf__n_neighbors=4, pca__n_components=4, score=0.825, total=   0.0s\n[CV] knn_clf__n_neighbors=4, pca__n_components=4 .....................\n[CV]  knn_clf__n_neighbors=4, pca__n_components=4, score=0.850, total=   0.0s\n[CV] knn_clf__n_neighbors=4, pca__n_components=4 .....................\n[CV]  knn_clf__n_neighbors=4, pca__n_components=4, score=0.900, total=   0.0s\n[CV] knn_clf__n_neighbors=4, pca__n_components=4 .....................\n[CV]  knn_clf__n_neighbors=4, pca__n_components=4, score=0.912, total=   0.0s\n[CV] knn_clf__n_neighbors=4, pca__n_components=4 .....................\n[CV]  knn_clf__n_neighbors=4, pca__n_components=4, score=0.863, total=   0.0s\n[CV] knn_clf__n_neighbors=4, pca__n_components=4 .....................\n[CV]  knn_clf__n_neighbors=4, pca__n_components=4, score=0.800, total=   0.0s\n[CV] knn_clf__n_neighbors=4, pca__n_components=4 .....................\n[CV]  knn_clf__n_neighbors=4, pca__n_components=4, score=0.899, total=   0.0s\n\n\n[CV] knn_clf__n_neighbors=4, pca__n_components=4 .....................\n[CV]  knn_clf__n_neighbors=4, pca__n_components=4, score=0.810, total=   0.0s\n[CV] knn_clf__n_neighbors=4, pca__n_components=5 .....................\n[CV]  knn_clf__n_neighbors=4, pca__n_components=5, score=0.877, total=   0.0s\n[CV] knn_clf__n_neighbors=4, pca__n_components=5 .....................\n[CV]  knn_clf__n_neighbors=4, pca__n_components=5, score=0.852, total=   0.0s\n[CV] knn_clf__n_neighbors=4, pca__n_components=5 .....................\n[CV]  knn_clf__n_neighbors=4, pca__n_components=5, score=0.825, total=   0.0s\n[CV] knn_clf__n_neighbors=4, pca__n_components=5 .....................\n[CV]  knn_clf__n_neighbors=4, pca__n_components=5, score=0.850, total=   0.0s\n[CV] knn_clf__n_neighbors=4, pca__n_components=5 .....................\n[CV]  knn_clf__n_neighbors=4, pca__n_components=5, score=0.850, total=   0.0s\n[CV] knn_clf__n_neighbors=4, pca__n_components=5 .....................\n[CV]  knn_clf__n_neighbors=4, pca__n_components=5, score=0.912, total=   0.0s\n[CV] knn_clf__n_neighbors=4, pca__n_components=5 .....................\n[CV]  knn_clf__n_neighbors=4, pca__n_components=5, score=0.850, total=   0.0s\n[CV] knn_clf__n_neighbors=4, pca__n_components=5 .....................\n[CV]  knn_clf__n_neighbors=4, pca__n_components=5, score=0.787, total=   0.0s\n[CV] knn_clf__n_neighbors=4, pca__n_components=5 .....................\n[CV]  knn_clf__n_neighbors=4, pca__n_components=5, score=0.861, total=   0.0s\n[CV] knn_clf__n_neighbors=4, pca__n_components=5 .....................\n[CV]  knn_clf__n_neighbors=4, pca__n_components=5, score=0.848, total=   0.0s\n[CV] knn_clf__n_neighbors=4, pca__n_components=6 .....................\n[CV]  knn_clf__n_neighbors=4, pca__n_components=6, score=0.864, total=   0.0s\n[CV] knn_clf__n_neighbors=4, pca__n_components=6 .....................\n[CV]  knn_clf__n_neighbors=4, pca__n_components=6, score=0.877, total=   0.0s\n[CV] knn_clf__n_neighbors=4, pca__n_components=6 .....................\n[CV]  knn_clf__n_neighbors=4, pca__n_components=6, score=0.812, total=   0.0s\n[CV] knn_clf__n_neighbors=4, pca__n_components=6 .....................\n[CV]  knn_clf__n_neighbors=4, pca__n_components=6, score=0.838, total=   0.0s\n[CV] knn_clf__n_neighbors=4, pca__n_components=6 .....................\n[CV]  knn_clf__n_neighbors=4, pca__n_components=6, score=0.900, total=   0.0s\n[CV] knn_clf__n_neighbors=4, pca__n_components=6 .....................\n[CV]  knn_clf__n_neighbors=4, pca__n_components=6, score=0.925, total=   0.0s\n[CV] knn_clf__n_neighbors=4, pca__n_components=6 .....................\n[CV]  knn_clf__n_neighbors=4, pca__n_components=6, score=0.825, total=   0.0s\n[CV] knn_clf__n_neighbors=4, pca__n_components=6 .....................\n[CV]  knn_clf__n_neighbors=4, pca__n_components=6, score=0.838, total=   0.0s\n[CV] knn_clf__n_neighbors=4, pca__n_components=6 .....................\n[CV]  knn_clf__n_neighbors=4, pca__n_components=6, score=0.848, total=   0.0s\n[CV] knn_clf__n_neighbors=4, pca__n_components=6 .....................\n[CV]  knn_clf__n_neighbors=4, pca__n_components=6, score=0.797, total=   0.0s\n[CV] knn_clf__n_neighbors=4, pca__n_components=7 .....................\n[CV]  knn_clf__n_neighbors=4, pca__n_components=7, score=0.827, total=   0.0s\n[CV] knn_clf__n_neighbors=4, pca__n_components=7 .....................\n[CV]  knn_clf__n_neighbors=4, pca__n_components=7, score=0.778, total=   0.0s\n[CV] knn_clf__n_neighbors=4, pca__n_components=7 .....................\n[CV]  knn_clf__n_neighbors=4, pca__n_components=7, score=0.825, total=   0.0s\n[CV] knn_clf__n_neighbors=4, pca__n_components=7 .....................\n[CV]  knn_clf__n_neighbors=4, pca__n_components=7, score=0.825, total=   0.0s\n[CV] knn_clf__n_neighbors=4, pca__n_components=7 .....................\n[CV]  knn_clf__n_neighbors=4, pca__n_components=7, score=0.850, total=   0.0s\n[CV] knn_clf__n_neighbors=4, pca__n_components=7 .....................\n[CV]  knn_clf__n_neighbors=4, pca__n_components=7, score=0.850, total=   0.0s\n[CV] knn_clf__n_neighbors=4, pca__n_components=7 .....................\n[CV]  knn_clf__n_neighbors=4, pca__n_components=7, score=0.838, total=   0.0s\n[CV] knn_clf__n_neighbors=4, pca__n_components=7 .....................\n[CV]  knn_clf__n_neighbors=4, pca__n_components=7, score=0.787, total=   0.0s\n[CV] knn_clf__n_neighbors=4, pca__n_components=7 .....................\n[CV]  knn_clf__n_neighbors=4, pca__n_components=7, score=0.810, total=   0.0s\n[CV] knn_clf__n_neighbors=4, pca__n_components=7 .....................\n[CV]  knn_clf__n_neighbors=4, pca__n_components=7, score=0.835, total=   0.0s\n[CV] knn_clf__n_neighbors=4, pca__n_components=8 .....................\n[CV]  knn_clf__n_neighbors=4, pca__n_components=8, score=0.877, total=   0.0s\n[CV] knn_clf__n_neighbors=4, pca__n_components=8 .....................\n[CV]  knn_clf__n_neighbors=4, pca__n_components=8, score=0.802, total=   0.0s\n[CV] knn_clf__n_neighbors=4, pca__n_components=8 .....................\n[CV]  knn_clf__n_neighbors=4, pca__n_components=8, score=0.787, total=   0.0s\n[CV] knn_clf__n_neighbors=4, pca__n_components=8 .....................\n[CV]  knn_clf__n_neighbors=4, pca__n_components=8, score=0.850, total=   0.1s\n[CV] knn_clf__n_neighbors=4, pca__n_components=8 .....................\n[CV]  knn_clf__n_neighbors=4, pca__n_components=8, score=0.850, total=   0.0s\n[CV] knn_clf__n_neighbors=4, pca__n_components=8 .....................\n[CV]  knn_clf__n_neighbors=4, pca__n_components=8, score=0.825, total=   0.0s\n[CV] knn_clf__n_neighbors=4, pca__n_components=8 .....................\n[CV]  knn_clf__n_neighbors=4, pca__n_components=8, score=0.800, total=   0.0s\n[CV] knn_clf__n_neighbors=4, pca__n_components=8 .....................\n[CV]  knn_clf__n_neighbors=4, pca__n_components=8, score=0.812, total=   0.0s\n[CV] knn_clf__n_neighbors=4, pca__n_components=8 .....................\n[CV]  knn_clf__n_neighbors=4, pca__n_components=8, score=0.810, total=   0.0s\n[CV] knn_clf__n_neighbors=4, pca__n_components=8 .....................\n[CV]  knn_clf__n_neighbors=4, pca__n_components=8, score=0.785, total=   0.0s\n[CV] knn_clf__n_neighbors=4, pca__n_components=9 .....................\n[CV]  knn_clf__n_neighbors=4, pca__n_components=9, score=0.827, total=   0.0s\n[CV] knn_clf__n_neighbors=4, pca__n_components=9 .....................\n[CV]  knn_clf__n_neighbors=4, pca__n_components=9, score=0.802, total=   0.0s\n[CV] knn_clf__n_neighbors=4, pca__n_components=9 .....................\n[CV]  knn_clf__n_neighbors=4, pca__n_components=9, score=0.812, total=   0.0s\n[CV] knn_clf__n_neighbors=4, pca__n_components=9 .....................\n[CV]  knn_clf__n_neighbors=4, pca__n_components=9, score=0.838, total=   0.0s\n[CV] knn_clf__n_neighbors=4, pca__n_components=9 .....................\n[CV]  knn_clf__n_neighbors=4, pca__n_components=9, score=0.800, total=   0.0s\n[CV] knn_clf__n_neighbors=4, pca__n_components=9 .....................\n[CV]  knn_clf__n_neighbors=4, pca__n_components=9, score=0.850, total=   0.0s\n[CV] knn_clf__n_neighbors=4, pca__n_components=9 .....................\n[CV]  knn_clf__n_neighbors=4, pca__n_components=9, score=0.775, total=   0.0s\n[CV] knn_clf__n_neighbors=4, pca__n_components=9 .....................\n[CV]  knn_clf__n_neighbors=4, pca__n_components=9, score=0.812, total=   0.0s\n[CV] knn_clf__n_neighbors=4, pca__n_components=9 .....................\n[CV]  knn_clf__n_neighbors=4, pca__n_components=9, score=0.797, total=   0.0s\n[CV] knn_clf__n_neighbors=4, pca__n_components=9 .....................\n[CV]  knn_clf__n_neighbors=4, pca__n_components=9, score=0.772, total=   0.0s\n[CV] knn_clf__n_neighbors=5, pca__n_components=1 .....................\n[CV]  knn_clf__n_neighbors=5, pca__n_components=1, score=0.765, total=   0.0s\n[CV] knn_clf__n_neighbors=5, pca__n_components=1 .....................\n[CV]  knn_clf__n_neighbors=5, pca__n_components=1, score=0.704, total=   0.0s\n[CV] knn_clf__n_neighbors=5, pca__n_components=1 .....................\n[CV]  knn_clf__n_neighbors=5, pca__n_components=1, score=0.700, total=   0.0s\n[CV] knn_clf__n_neighbors=5, pca__n_components=1 .....................\n[CV]  knn_clf__n_neighbors=5, pca__n_components=1, score=0.762, total=   0.0s\n[CV] knn_clf__n_neighbors=5, pca__n_components=1 .....................\n[CV]  knn_clf__n_neighbors=5, pca__n_components=1, score=0.738, total=   0.0s\n[CV] knn_clf__n_neighbors=5, pca__n_components=1 .....................\n[CV]  knn_clf__n_neighbors=5, pca__n_components=1, score=0.750, total=   0.0s\n[CV] knn_clf__n_neighbors=5, pca__n_components=1 .....................\n[CV]  knn_clf__n_neighbors=5, pca__n_components=1, score=0.787, total=   0.0s\n[CV] knn_clf__n_neighbors=5, pca__n_components=1 .....................\n[CV]  knn_clf__n_neighbors=5, pca__n_components=1, score=0.738, total=   0.0s\n[CV] knn_clf__n_neighbors=5, pca__n_components=1 .....................\n[CV]  knn_clf__n_neighbors=5, pca__n_components=1, score=0.797, total=   0.0s\n[CV] knn_clf__n_neighbors=5, pca__n_components=1 .....................\n[CV]  knn_clf__n_neighbors=5, pca__n_components=1, score=0.734, total=   0.0s\n[CV] knn_clf__n_neighbors=5, pca__n_components=2 .....................\n[CV]  knn_clf__n_neighbors=5, pca__n_components=2, score=0.889, total=   0.0s\n[CV] knn_clf__n_neighbors=5, pca__n_components=2 .....................\n[CV]  knn_clf__n_neighbors=5, pca__n_components=2, score=0.901, total=   0.0s\n[CV] knn_clf__n_neighbors=5, pca__n_components=2 .....................\n[CV]  knn_clf__n_neighbors=5, pca__n_components=2, score=0.863, total=   0.0s\n[CV] knn_clf__n_neighbors=5, pca__n_components=2 .....................\n\n\n[CV]  knn_clf__n_neighbors=5, pca__n_components=2, score=0.912, total=   0.0s\n[CV] knn_clf__n_neighbors=5, pca__n_components=2 .....................\n[CV]  knn_clf__n_neighbors=5, pca__n_components=2, score=0.950, total=   0.0s\n[CV] knn_clf__n_neighbors=5, pca__n_components=2 .....................\n[CV]  knn_clf__n_neighbors=5, pca__n_components=2, score=0.950, total=   0.0s\n[CV] knn_clf__n_neighbors=5, pca__n_components=2 .....................\n[CV]  knn_clf__n_neighbors=5, pca__n_components=2, score=0.925, total=   0.0s\n[CV] knn_clf__n_neighbors=5, pca__n_components=2 .....................\n[CV]  knn_clf__n_neighbors=5, pca__n_components=2, score=0.850, total=   0.0s\n[CV] knn_clf__n_neighbors=5, pca__n_components=2 .....................\n[CV]  knn_clf__n_neighbors=5, pca__n_components=2, score=0.873, total=   0.0s\n[CV] knn_clf__n_neighbors=5, pca__n_components=2 .....................\n[CV]  knn_clf__n_neighbors=5, pca__n_components=2, score=0.886, total=   0.0s\n[CV] knn_clf__n_neighbors=5, pca__n_components=3 .....................\n[CV]  knn_clf__n_neighbors=5, pca__n_components=3, score=0.864, total=   0.0s\n[CV] knn_clf__n_neighbors=5, pca__n_components=3 .....................\n[CV]  knn_clf__n_neighbors=5, pca__n_components=3, score=0.926, total=   0.0s\n[CV] knn_clf__n_neighbors=5, pca__n_components=3 .....................\n[CV]  knn_clf__n_neighbors=5, pca__n_components=3, score=0.875, total=   0.0s\n[CV] knn_clf__n_neighbors=5, pca__n_components=3 .....................\n[CV]  knn_clf__n_neighbors=5, pca__n_components=3, score=0.863, total=   0.0s\n[CV] knn_clf__n_neighbors=5, pca__n_components=3 .....................\n[CV]  knn_clf__n_neighbors=5, pca__n_components=3, score=0.938, total=   0.0s\n[CV] knn_clf__n_neighbors=5, pca__n_components=3 .....................\n[CV]  knn_clf__n_neighbors=5, pca__n_components=3, score=0.900, total=   0.0s\n[CV] knn_clf__n_neighbors=5, pca__n_components=3 .....................\n[CV]  knn_clf__n_neighbors=5, pca__n_components=3, score=0.900, total=   0.0s\n[CV] knn_clf__n_neighbors=5, pca__n_components=3 .....................\n[CV]  knn_clf__n_neighbors=5, pca__n_components=3, score=0.850, total=   0.0s\n[CV] knn_clf__n_neighbors=5, pca__n_components=3 .....................\n[CV]  knn_clf__n_neighbors=5, pca__n_components=3, score=0.873, total=   0.0s\n[CV] knn_clf__n_neighbors=5, pca__n_components=3 .....................\n[CV]  knn_clf__n_neighbors=5, pca__n_components=3, score=0.848, total=   0.0s\n[CV] knn_clf__n_neighbors=5, pca__n_components=4 .....................\n[CV]  knn_clf__n_neighbors=5, pca__n_components=4, score=0.877, total=   0.0s\n[CV] knn_clf__n_neighbors=5, pca__n_components=4 .....................\n[CV]  knn_clf__n_neighbors=5, pca__n_components=4, score=0.864, total=   0.0s\n[CV] knn_clf__n_neighbors=5, pca__n_components=4 .....................\n[CV]  knn_clf__n_neighbors=5, pca__n_components=4, score=0.850, total=   0.0s\n[CV] knn_clf__n_neighbors=5, pca__n_components=4 .....................\n[CV]  knn_clf__n_neighbors=5, pca__n_components=4, score=0.850, total=   0.0s\n[CV] knn_clf__n_neighbors=5, pca__n_components=4 .....................\n[CV]  knn_clf__n_neighbors=5, pca__n_components=4, score=0.875, total=   0.0s\n[CV] knn_clf__n_neighbors=5, pca__n_components=4 .....................\n[CV]  knn_clf__n_neighbors=5, pca__n_components=4, score=0.900, total=   0.0s\n[CV] knn_clf__n_neighbors=5, pca__n_components=4 .....................\n[CV]  knn_clf__n_neighbors=5, pca__n_components=4, score=0.887, total=   0.0s\n[CV] knn_clf__n_neighbors=5, pca__n_components=4 .....................\n[CV]  knn_clf__n_neighbors=5, pca__n_components=4, score=0.812, total=   0.0s\n[CV] knn_clf__n_neighbors=5, pca__n_components=4 .....................\n[CV]  knn_clf__n_neighbors=5, pca__n_components=4, score=0.861, total=   0.0s\n[CV] knn_clf__n_neighbors=5, pca__n_components=4 .....................\n[CV]  knn_clf__n_neighbors=5, pca__n_components=4, score=0.823, total=   0.0s\n[CV] knn_clf__n_neighbors=5, pca__n_components=5 .....................\n[CV]  knn_clf__n_neighbors=5, pca__n_components=5, score=0.864, total=   0.0s\n[CV] knn_clf__n_neighbors=5, pca__n_components=5 .....................\n[CV]  knn_clf__n_neighbors=5, pca__n_components=5, score=0.827, total=   0.0s\n[CV] knn_clf__n_neighbors=5, pca__n_components=5 .....................\n[CV]  knn_clf__n_neighbors=5, pca__n_components=5, score=0.863, total=   0.0s\n[CV] knn_clf__n_neighbors=5, pca__n_components=5 .....................\n[CV]  knn_clf__n_neighbors=5, pca__n_components=5, score=0.887, total=   0.0s\n[CV] knn_clf__n_neighbors=5, pca__n_components=5 .....................\n[CV]  knn_clf__n_neighbors=5, pca__n_components=5, score=0.863, total=   0.0s\n[CV] knn_clf__n_neighbors=5, pca__n_components=5 .....................\n[CV]  knn_clf__n_neighbors=5, pca__n_components=5, score=0.950, total=   0.0s\n[CV] knn_clf__n_neighbors=5, pca__n_components=5 .....................\n[CV]  knn_clf__n_neighbors=5, pca__n_components=5, score=0.863, total=   0.0s\n[CV] knn_clf__n_neighbors=5, pca__n_components=5 .....................\n[CV]  knn_clf__n_neighbors=5, pca__n_components=5, score=0.812, total=   0.0s\n[CV] knn_clf__n_neighbors=5, pca__n_components=5 .....................\n[CV]  knn_clf__n_neighbors=5, pca__n_components=5, score=0.823, total=   0.0s\n[CV] knn_clf__n_neighbors=5, pca__n_components=5 .....................\n[CV]  knn_clf__n_neighbors=5, pca__n_components=5, score=0.848, total=   0.0s\n[CV] knn_clf__n_neighbors=5, pca__n_components=6 .....................\n[CV]  knn_clf__n_neighbors=5, pca__n_components=6, score=0.864, total=   0.0s\n[CV] knn_clf__n_neighbors=5, pca__n_components=6 .....................\n[CV]  knn_clf__n_neighbors=5, pca__n_components=6, score=0.852, total=   0.0s\n[CV] knn_clf__n_neighbors=5, pca__n_components=6 .....................\n[CV]  knn_clf__n_neighbors=5, pca__n_components=6, score=0.863, total=   0.0s\n[CV] knn_clf__n_neighbors=5, pca__n_components=6 .....................\n[CV]  knn_clf__n_neighbors=5, pca__n_components=6, score=0.875, total=   0.0s\n[CV] knn_clf__n_neighbors=5, pca__n_components=6 .....................\n[CV]  knn_clf__n_neighbors=5, pca__n_components=6, score=0.900, total=   0.0s\n[CV] knn_clf__n_neighbors=5, pca__n_components=6 .....................\n[CV]  knn_clf__n_neighbors=5, pca__n_components=6, score=0.912, total=   0.0s\n[CV] knn_clf__n_neighbors=5, pca__n_components=6 .....................\n[CV]  knn_clf__n_neighbors=5, pca__n_components=6, score=0.812, total=   0.0s\n[CV] knn_clf__n_neighbors=5, pca__n_components=6 .....................\n[CV]  knn_clf__n_neighbors=5, pca__n_components=6, score=0.838, total=   0.0s\n[CV] knn_clf__n_neighbors=5, pca__n_components=6 .....................\n[CV]  knn_clf__n_neighbors=5, pca__n_components=6, score=0.848, total=   0.0s\n[CV] knn_clf__n_neighbors=5, pca__n_components=6 .....................\n[CV]  knn_clf__n_neighbors=5, pca__n_components=6, score=0.861, total=   0.0s\n[CV] knn_clf__n_neighbors=5, pca__n_components=7 .....................\n[CV]  knn_clf__n_neighbors=5, pca__n_components=7, score=0.852, total=   0.0s\n[CV] knn_clf__n_neighbors=5, pca__n_components=7 .....................\n[CV]  knn_clf__n_neighbors=5, pca__n_components=7, score=0.802, total=   0.0s\n[CV] knn_clf__n_neighbors=5, pca__n_components=7 .....................\n[CV]  knn_clf__n_neighbors=5, pca__n_components=7, score=0.863, total=   0.0s\n[CV] knn_clf__n_neighbors=5, pca__n_components=7 .....................\n[CV]  knn_clf__n_neighbors=5, pca__n_components=7, score=0.838, total=   0.0s\n[CV] knn_clf__n_neighbors=5, pca__n_components=7 .....................\n[CV]  knn_clf__n_neighbors=5, pca__n_components=7, score=0.850, total=   0.0s\n[CV] knn_clf__n_neighbors=5, pca__n_components=7 .....................\n[CV]  knn_clf__n_neighbors=5, pca__n_components=7, score=0.875, total=   0.0s\n[CV] knn_clf__n_neighbors=5, pca__n_components=7 .....................\n[CV]  knn_clf__n_neighbors=5, pca__n_components=7, score=0.775, total=   0.0s\n[CV] knn_clf__n_neighbors=5, pca__n_components=7 .....................\n[CV]  knn_clf__n_neighbors=5, pca__n_components=7, score=0.825, total=   0.0s\n[CV] knn_clf__n_neighbors=5, pca__n_components=7 .....................\n[CV]  knn_clf__n_neighbors=5, pca__n_components=7, score=0.835, total=   0.0s\n[CV] knn_clf__n_neighbors=5, pca__n_components=7 .....................\n[CV]  knn_clf__n_neighbors=5, pca__n_components=7, score=0.823, total=   0.0s\n[CV] knn_clf__n_neighbors=5, pca__n_components=8 .....................\n\n\n[CV]  knn_clf__n_neighbors=5, pca__n_components=8, score=0.901, total=   0.0s\n[CV] knn_clf__n_neighbors=5, pca__n_components=8 .....................\n[CV]  knn_clf__n_neighbors=5, pca__n_components=8, score=0.802, total=   0.0s\n[CV] knn_clf__n_neighbors=5, pca__n_components=8 .....................\n[CV]  knn_clf__n_neighbors=5, pca__n_components=8, score=0.875, total=   0.0s\n[CV] knn_clf__n_neighbors=5, pca__n_components=8 .....................\n[CV]  knn_clf__n_neighbors=5, pca__n_components=8, score=0.875, total=   0.0s\n[CV] knn_clf__n_neighbors=5, pca__n_components=8 .....................\n[CV]  knn_clf__n_neighbors=5, pca__n_components=8, score=0.863, total=   0.0s\n[CV] knn_clf__n_neighbors=5, pca__n_components=8 .....................\n[CV]  knn_clf__n_neighbors=5, pca__n_components=8, score=0.887, total=   0.0s\n[CV] knn_clf__n_neighbors=5, pca__n_components=8 .....................\n[CV]  knn_clf__n_neighbors=5, pca__n_components=8, score=0.800, total=   0.0s\n[CV] knn_clf__n_neighbors=5, pca__n_components=8 .....................\n[CV]  knn_clf__n_neighbors=5, pca__n_components=8, score=0.838, total=   0.0s\n[CV] knn_clf__n_neighbors=5, pca__n_components=8 .....................\n[CV]  knn_clf__n_neighbors=5, pca__n_components=8, score=0.810, total=   0.0s\n[CV] knn_clf__n_neighbors=5, pca__n_components=8 .....................\n[CV]  knn_clf__n_neighbors=5, pca__n_components=8, score=0.823, total=   0.0s\n[CV] knn_clf__n_neighbors=5, pca__n_components=9 .....................\n[CV]  knn_clf__n_neighbors=5, pca__n_components=9, score=0.827, total=   0.0s\n[CV] knn_clf__n_neighbors=5, pca__n_components=9 .....................\n[CV]  knn_clf__n_neighbors=5, pca__n_components=9, score=0.802, total=   0.0s\n[CV] knn_clf__n_neighbors=5, pca__n_components=9 .....................\n[CV]  knn_clf__n_neighbors=5, pca__n_components=9, score=0.887, total=   0.0s\n[CV] knn_clf__n_neighbors=5, pca__n_components=9 .....................\n[CV]  knn_clf__n_neighbors=5, pca__n_components=9, score=0.875, total=   0.0s\n[CV] knn_clf__n_neighbors=5, pca__n_components=9 .....................\n[CV]  knn_clf__n_neighbors=5, pca__n_components=9, score=0.850, total=   0.0s\n[CV] knn_clf__n_neighbors=5, pca__n_components=9 .....................\n[CV]  knn_clf__n_neighbors=5, pca__n_components=9, score=0.900, total=   0.0s\n[CV] knn_clf__n_neighbors=5, pca__n_components=9 .....................\n[CV]  knn_clf__n_neighbors=5, pca__n_components=9, score=0.775, total=   0.0s\n[CV] knn_clf__n_neighbors=5, pca__n_components=9 .....................\n[CV]  knn_clf__n_neighbors=5, pca__n_components=9, score=0.838, total=   0.0s\n[CV] knn_clf__n_neighbors=5, pca__n_components=9 .....................\n[CV]  knn_clf__n_neighbors=5, pca__n_components=9, score=0.797, total=   0.0s\n[CV] knn_clf__n_neighbors=5, pca__n_components=9 .....................\n[CV]  knn_clf__n_neighbors=5, pca__n_components=9, score=0.861, total=   0.0s\n[CV] knn_clf__n_neighbors=6, pca__n_components=1 .....................\n[CV]  knn_clf__n_neighbors=6, pca__n_components=1, score=0.790, total=   0.0s\n[CV] knn_clf__n_neighbors=6, pca__n_components=1 .....................\n[CV]  knn_clf__n_neighbors=6, pca__n_components=1, score=0.741, total=   0.0s\n[CV] knn_clf__n_neighbors=6, pca__n_components=1 .....................\n[CV]  knn_clf__n_neighbors=6, pca__n_components=1, score=0.725, total=   0.0s\n[CV] knn_clf__n_neighbors=6, pca__n_components=1 .....................\n[CV]  knn_clf__n_neighbors=6, pca__n_components=1, score=0.750, total=   0.0s\n[CV] knn_clf__n_neighbors=6, pca__n_components=1 .....................\n[CV]  knn_clf__n_neighbors=6, pca__n_components=1, score=0.762, total=   0.0s\n[CV] knn_clf__n_neighbors=6, pca__n_components=1 .....................\n[CV]  knn_clf__n_neighbors=6, pca__n_components=1, score=0.750, total=   0.0s\n[CV] knn_clf__n_neighbors=6, pca__n_components=1 .....................\n[CV]  knn_clf__n_neighbors=6, pca__n_components=1, score=0.812, total=   0.0s\n[CV] knn_clf__n_neighbors=6, pca__n_components=1 .....................\n[CV]  knn_clf__n_neighbors=6, pca__n_components=1, score=0.738, total=   0.0s\n[CV] knn_clf__n_neighbors=6, pca__n_components=1 .....................\n[CV]  knn_clf__n_neighbors=6, pca__n_components=1, score=0.810, total=   0.0s\n[CV] knn_clf__n_neighbors=6, pca__n_components=1 .....................\n[CV]  knn_clf__n_neighbors=6, pca__n_components=1, score=0.772, total=   0.0s\n[CV] knn_clf__n_neighbors=6, pca__n_components=2 .....................\n[CV]  knn_clf__n_neighbors=6, pca__n_components=2, score=0.877, total=   0.0s\n[CV] knn_clf__n_neighbors=6, pca__n_components=2 .....................\n[CV]  knn_clf__n_neighbors=6, pca__n_components=2, score=0.889, total=   0.0s\n[CV] knn_clf__n_neighbors=6, pca__n_components=2 .....................\n[CV]  knn_clf__n_neighbors=6, pca__n_components=2, score=0.875, total=   0.0s\n[CV] knn_clf__n_neighbors=6, pca__n_components=2 .....................\n[CV]  knn_clf__n_neighbors=6, pca__n_components=2, score=0.912, total=   0.0s\n[CV] knn_clf__n_neighbors=6, pca__n_components=2 .....................\n[CV]  knn_clf__n_neighbors=6, pca__n_components=2, score=0.925, total=   0.0s\n[CV] knn_clf__n_neighbors=6, pca__n_components=2 .....................\n[CV]  knn_clf__n_neighbors=6, pca__n_components=2, score=0.925, total=   0.0s\n[CV] knn_clf__n_neighbors=6, pca__n_components=2 .....................\n[CV]  knn_clf__n_neighbors=6, pca__n_components=2, score=0.900, total=   0.0s\n[CV] knn_clf__n_neighbors=6, pca__n_components=2 .....................\n[CV]  knn_clf__n_neighbors=6, pca__n_components=2, score=0.863, total=   0.0s\n[CV] knn_clf__n_neighbors=6, pca__n_components=2 .....................\n[CV]  knn_clf__n_neighbors=6, pca__n_components=2, score=0.861, total=   0.0s\n[CV] knn_clf__n_neighbors=6, pca__n_components=2 .....................\n[CV]  knn_clf__n_neighbors=6, pca__n_components=2, score=0.886, total=   0.0s\n[CV] knn_clf__n_neighbors=6, pca__n_components=3 .....................\n[CV]  knn_clf__n_neighbors=6, pca__n_components=3, score=0.864, total=   0.0s\n[CV] knn_clf__n_neighbors=6, pca__n_components=3 .....................\n[CV]  knn_clf__n_neighbors=6, pca__n_components=3, score=0.914, total=   0.0s\n[CV] knn_clf__n_neighbors=6, pca__n_components=3 .....................\n[CV]  knn_clf__n_neighbors=6, pca__n_components=3, score=0.900, total=   0.0s\n[CV] knn_clf__n_neighbors=6, pca__n_components=3 .....................\n[CV]  knn_clf__n_neighbors=6, pca__n_components=3, score=0.863, total=   0.0s\n[CV] knn_clf__n_neighbors=6, pca__n_components=3 .....................\n[CV]  knn_clf__n_neighbors=6, pca__n_components=3, score=0.912, total=   0.0s\n[CV] knn_clf__n_neighbors=6, pca__n_components=3 .....................\n[CV]  knn_clf__n_neighbors=6, pca__n_components=3, score=0.900, total=   0.0s\n[CV] knn_clf__n_neighbors=6, pca__n_components=3 .....................\n[CV]  knn_clf__n_neighbors=6, pca__n_components=3, score=0.900, total=   0.0s\n[CV] knn_clf__n_neighbors=6, pca__n_components=3 .....................\n[CV]  knn_clf__n_neighbors=6, pca__n_components=3, score=0.850, total=   0.0s\n[CV] knn_clf__n_neighbors=6, pca__n_components=3 .....................\n[CV]  knn_clf__n_neighbors=6, pca__n_components=3, score=0.911, total=   0.0s\n[CV] knn_clf__n_neighbors=6, pca__n_components=3 .....................\n[CV]  knn_clf__n_neighbors=6, pca__n_components=3, score=0.848, total=   0.0s\n[CV] knn_clf__n_neighbors=6, pca__n_components=4 .....................\n[CV]  knn_clf__n_neighbors=6, pca__n_components=4, score=0.901, total=   0.0s\n[CV] knn_clf__n_neighbors=6, pca__n_components=4 .....................\n[CV]  knn_clf__n_neighbors=6, pca__n_components=4, score=0.840, total=   0.0s\n[CV] knn_clf__n_neighbors=6, pca__n_components=4 .....................\n[CV]  knn_clf__n_neighbors=6, pca__n_components=4, score=0.838, total=   0.0s\n[CV] knn_clf__n_neighbors=6, pca__n_components=4 .....................\n[CV]  knn_clf__n_neighbors=6, pca__n_components=4, score=0.850, total=   0.0s\n[CV] knn_clf__n_neighbors=6, pca__n_components=4 .....................\n[CV]  knn_clf__n_neighbors=6, pca__n_components=4, score=0.887, total=   0.0s\n[CV] knn_clf__n_neighbors=6, pca__n_components=4 .....................\n[CV]  knn_clf__n_neighbors=6, pca__n_components=4, score=0.900, total=   0.0s\n[CV] knn_clf__n_neighbors=6, pca__n_components=4 .....................\n[CV]  knn_clf__n_neighbors=6, pca__n_components=4, score=0.863, total=   0.0s\n[CV] knn_clf__n_neighbors=6, pca__n_components=4 .....................\n[CV]  knn_clf__n_neighbors=6, pca__n_components=4, score=0.812, total=   0.0s\n[CV] knn_clf__n_neighbors=6, pca__n_components=4 .....................\n[CV]  knn_clf__n_neighbors=6, pca__n_components=4, score=0.911, total=   0.0s\n[CV] knn_clf__n_neighbors=6, pca__n_components=4 .....................\n\n\n[CV]  knn_clf__n_neighbors=6, pca__n_components=4, score=0.823, total=   0.0s\n[CV] knn_clf__n_neighbors=6, pca__n_components=5 .....................\n[CV]  knn_clf__n_neighbors=6, pca__n_components=5, score=0.864, total=   0.0s\n[CV] knn_clf__n_neighbors=6, pca__n_components=5 .....................\n[CV]  knn_clf__n_neighbors=6, pca__n_components=5, score=0.852, total=   0.0s\n[CV] knn_clf__n_neighbors=6, pca__n_components=5 .....................\n[CV]  knn_clf__n_neighbors=6, pca__n_components=5, score=0.863, total=   0.0s\n[CV] knn_clf__n_neighbors=6, pca__n_components=5 .....................\n[CV]  knn_clf__n_neighbors=6, pca__n_components=5, score=0.887, total=   0.0s\n[CV] knn_clf__n_neighbors=6, pca__n_components=5 .....................\n[CV]  knn_clf__n_neighbors=6, pca__n_components=5, score=0.875, total=   0.0s\n[CV] knn_clf__n_neighbors=6, pca__n_components=5 .....................\n[CV]  knn_clf__n_neighbors=6, pca__n_components=5, score=0.925, total=   0.0s\n[CV] knn_clf__n_neighbors=6, pca__n_components=5 .....................\n[CV]  knn_clf__n_neighbors=6, pca__n_components=5, score=0.850, total=   0.0s\n[CV] knn_clf__n_neighbors=6, pca__n_components=5 .....................\n[CV]  knn_clf__n_neighbors=6, pca__n_components=5, score=0.800, total=   0.0s\n[CV] knn_clf__n_neighbors=6, pca__n_components=5 .....................\n[CV]  knn_clf__n_neighbors=6, pca__n_components=5, score=0.835, total=   0.0s\n[CV] knn_clf__n_neighbors=6, pca__n_components=5 .....................\n[CV]  knn_clf__n_neighbors=6, pca__n_components=5, score=0.823, total=   0.0s\n[CV] knn_clf__n_neighbors=6, pca__n_components=6 .....................\n[CV]  knn_clf__n_neighbors=6, pca__n_components=6, score=0.864, total=   0.0s\n[CV] knn_clf__n_neighbors=6, pca__n_components=6 .....................\n[CV]  knn_clf__n_neighbors=6, pca__n_components=6, score=0.815, total=   0.0s\n[CV] knn_clf__n_neighbors=6, pca__n_components=6 .....................\n[CV]  knn_clf__n_neighbors=6, pca__n_components=6, score=0.863, total=   0.0s\n[CV] knn_clf__n_neighbors=6, pca__n_components=6 .....................\n[CV]  knn_clf__n_neighbors=6, pca__n_components=6, score=0.850, total=   0.0s\n[CV] knn_clf__n_neighbors=6, pca__n_components=6 .....................\n[CV]  knn_clf__n_neighbors=6, pca__n_components=6, score=0.900, total=   0.0s\n[CV] knn_clf__n_neighbors=6, pca__n_components=6 .....................\n[CV]  knn_clf__n_neighbors=6, pca__n_components=6, score=0.887, total=   0.0s\n[CV] knn_clf__n_neighbors=6, pca__n_components=6 .....................\n[CV]  knn_clf__n_neighbors=6, pca__n_components=6, score=0.812, total=   0.0s\n[CV] knn_clf__n_neighbors=6, pca__n_components=6 .....................\n[CV]  knn_clf__n_neighbors=6, pca__n_components=6, score=0.800, total=   0.0s\n[CV] knn_clf__n_neighbors=6, pca__n_components=6 .....................\n[CV]  knn_clf__n_neighbors=6, pca__n_components=6, score=0.848, total=   0.0s\n[CV] knn_clf__n_neighbors=6, pca__n_components=6 .....................\n[CV]  knn_clf__n_neighbors=6, pca__n_components=6, score=0.810, total=   0.0s\n[CV] knn_clf__n_neighbors=6, pca__n_components=7 .....................\n[CV]  knn_clf__n_neighbors=6, pca__n_components=7, score=0.864, total=   0.0s\n[CV] knn_clf__n_neighbors=6, pca__n_components=7 .....................\n[CV]  knn_clf__n_neighbors=6, pca__n_components=7, score=0.790, total=   0.0s\n[CV] knn_clf__n_neighbors=6, pca__n_components=7 .....................\n[CV]  knn_clf__n_neighbors=6, pca__n_components=7, score=0.863, total=   0.0s\n[CV] knn_clf__n_neighbors=6, pca__n_components=7 .....................\n[CV]  knn_clf__n_neighbors=6, pca__n_components=7, score=0.838, total=   0.0s\n[CV] knn_clf__n_neighbors=6, pca__n_components=7 .....................\n[CV]  knn_clf__n_neighbors=6, pca__n_components=7, score=0.863, total=   0.0s\n[CV] knn_clf__n_neighbors=6, pca__n_components=7 .....................\n[CV]  knn_clf__n_neighbors=6, pca__n_components=7, score=0.863, total=   0.0s\n[CV] knn_clf__n_neighbors=6, pca__n_components=7 .....................\n[CV]  knn_clf__n_neighbors=6, pca__n_components=7, score=0.825, total=   0.0s\n[CV] knn_clf__n_neighbors=6, pca__n_components=7 .....................\n[CV]  knn_clf__n_neighbors=6, pca__n_components=7, score=0.800, total=   0.0s\n[CV] knn_clf__n_neighbors=6, pca__n_components=7 .....................\n[CV]  knn_clf__n_neighbors=6, pca__n_components=7, score=0.848, total=   0.0s\n[CV] knn_clf__n_neighbors=6, pca__n_components=7 .....................\n[CV]  knn_clf__n_neighbors=6, pca__n_components=7, score=0.810, total=   0.0s\n[CV] knn_clf__n_neighbors=6, pca__n_components=8 .....................\n[CV]  knn_clf__n_neighbors=6, pca__n_components=8, score=0.901, total=   0.0s\n[CV] knn_clf__n_neighbors=6, pca__n_components=8 .....................\n[CV]  knn_clf__n_neighbors=6, pca__n_components=8, score=0.815, total=   0.0s\n[CV] knn_clf__n_neighbors=6, pca__n_components=8 .....................\n[CV]  knn_clf__n_neighbors=6, pca__n_components=8, score=0.838, total=   0.0s\n[CV] knn_clf__n_neighbors=6, pca__n_components=8 .....................\n[CV]  knn_clf__n_neighbors=6, pca__n_components=8, score=0.825, total=   0.0s\n[CV] knn_clf__n_neighbors=6, pca__n_components=8 .....................\n[CV]  knn_clf__n_neighbors=6, pca__n_components=8, score=0.850, total=   0.0s\n[CV] knn_clf__n_neighbors=6, pca__n_components=8 .....................\n[CV]  knn_clf__n_neighbors=6, pca__n_components=8, score=0.825, total=   0.0s\n[CV] knn_clf__n_neighbors=6, pca__n_components=8 .....................\n[CV]  knn_clf__n_neighbors=6, pca__n_components=8, score=0.800, total=   0.0s\n[CV] knn_clf__n_neighbors=6, pca__n_components=8 .....................\n[CV]  knn_clf__n_neighbors=6, pca__n_components=8, score=0.812, total=   0.0s\n[CV] knn_clf__n_neighbors=6, pca__n_components=8 .....................\n[CV]  knn_clf__n_neighbors=6, pca__n_components=8, score=0.810, total=   0.0s\n[CV] knn_clf__n_neighbors=6, pca__n_components=8 .....................\n[CV]  knn_clf__n_neighbors=6, pca__n_components=8, score=0.810, total=   0.0s\n[CV] knn_clf__n_neighbors=6, pca__n_components=9 .....................\n[CV]  knn_clf__n_neighbors=6, pca__n_components=9, score=0.852, total=   0.0s\n[CV] knn_clf__n_neighbors=6, pca__n_components=9 .....................\n[CV]  knn_clf__n_neighbors=6, pca__n_components=9, score=0.815, total=   0.0s\n[CV] knn_clf__n_neighbors=6, pca__n_components=9 .....................\n[CV]  knn_clf__n_neighbors=6, pca__n_components=9, score=0.850, total=   0.0s\n[CV] knn_clf__n_neighbors=6, pca__n_components=9 .....................\n[CV]  knn_clf__n_neighbors=6, pca__n_components=9, score=0.838, total=   0.0s\n[CV] knn_clf__n_neighbors=6, pca__n_components=9 .....................\n[CV]  knn_clf__n_neighbors=6, pca__n_components=9, score=0.863, total=   0.0s\n[CV] knn_clf__n_neighbors=6, pca__n_components=9 .....................\n[CV]  knn_clf__n_neighbors=6, pca__n_components=9, score=0.838, total=   0.0s\n[CV] knn_clf__n_neighbors=6, pca__n_components=9 .....................\n[CV]  knn_clf__n_neighbors=6, pca__n_components=9, score=0.775, total=   0.0s\n[CV] knn_clf__n_neighbors=6, pca__n_components=9 .....................\n[CV]  knn_clf__n_neighbors=6, pca__n_components=9, score=0.812, total=   0.0s\n[CV] knn_clf__n_neighbors=6, pca__n_components=9 .....................\n[CV]  knn_clf__n_neighbors=6, pca__n_components=9, score=0.835, total=   0.0s\n[CV] knn_clf__n_neighbors=6, pca__n_components=9 .....................\n[CV]  knn_clf__n_neighbors=6, pca__n_components=9, score=0.797, total=   0.0s\n[CV] knn_clf__n_neighbors=7, pca__n_components=1 .....................\n[CV]  knn_clf__n_neighbors=7, pca__n_components=1, score=0.778, total=   0.0s\n[CV] knn_clf__n_neighbors=7, pca__n_components=1 .....................\n[CV]  knn_clf__n_neighbors=7, pca__n_components=1, score=0.765, total=   0.0s\n[CV] knn_clf__n_neighbors=7, pca__n_components=1 .....................\n[CV]  knn_clf__n_neighbors=7, pca__n_components=1, score=0.713, total=   0.0s\n[CV] knn_clf__n_neighbors=7, pca__n_components=1 .....................\n[CV]  knn_clf__n_neighbors=7, pca__n_components=1, score=0.713, total=   0.0s\n[CV] knn_clf__n_neighbors=7, pca__n_components=1 .....................\n[CV]  knn_clf__n_neighbors=7, pca__n_components=1, score=0.762, total=   0.0s\n[CV] knn_clf__n_neighbors=7, pca__n_components=1 .....................\n[CV]  knn_clf__n_neighbors=7, pca__n_components=1, score=0.725, total=   0.0s\n\n\n[CV] knn_clf__n_neighbors=7, pca__n_components=1 .....................\n[CV]  knn_clf__n_neighbors=7, pca__n_components=1, score=0.800, total=   0.0s\n[CV] knn_clf__n_neighbors=7, pca__n_components=1 .....................\n[CV]  knn_clf__n_neighbors=7, pca__n_components=1, score=0.713, total=   0.0s\n[CV] knn_clf__n_neighbors=7, pca__n_components=1 .....................\n[CV]  knn_clf__n_neighbors=7, pca__n_components=1, score=0.797, total=   0.0s\n[CV] knn_clf__n_neighbors=7, pca__n_components=1 .....................\n[CV]  knn_clf__n_neighbors=7, pca__n_components=1, score=0.722, total=   0.0s\n[CV] knn_clf__n_neighbors=7, pca__n_components=2 .....................\n[CV]  knn_clf__n_neighbors=7, pca__n_components=2, score=0.877, total=   0.0s\n[CV] knn_clf__n_neighbors=7, pca__n_components=2 .....................\n[CV]  knn_clf__n_neighbors=7, pca__n_components=2, score=0.914, total=   0.0s\n[CV] knn_clf__n_neighbors=7, pca__n_components=2 .....................\n[CV]  knn_clf__n_neighbors=7, pca__n_components=2, score=0.875, total=   0.0s\n[CV] knn_clf__n_neighbors=7, pca__n_components=2 .....................\n[CV]  knn_clf__n_neighbors=7, pca__n_components=2, score=0.912, total=   0.0s\n[CV] knn_clf__n_neighbors=7, pca__n_components=2 .....................\n[CV]  knn_clf__n_neighbors=7, pca__n_components=2, score=0.938, total=   0.0s\n[CV] knn_clf__n_neighbors=7, pca__n_components=2 .....................\n[CV]  knn_clf__n_neighbors=7, pca__n_components=2, score=0.912, total=   0.0s\n[CV] knn_clf__n_neighbors=7, pca__n_components=2 .....................\n[CV]  knn_clf__n_neighbors=7, pca__n_components=2, score=0.912, total=   0.0s\n[CV] knn_clf__n_neighbors=7, pca__n_components=2 .....................\n[CV]  knn_clf__n_neighbors=7, pca__n_components=2, score=0.850, total=   0.0s\n[CV] knn_clf__n_neighbors=7, pca__n_components=2 .....................\n[CV]  knn_clf__n_neighbors=7, pca__n_components=2, score=0.861, total=   0.0s\n[CV] knn_clf__n_neighbors=7, pca__n_components=2 .....................\n[CV]  knn_clf__n_neighbors=7, pca__n_components=2, score=0.911, total=   0.0s\n[CV] knn_clf__n_neighbors=7, pca__n_components=3 .....................\n[CV]  knn_clf__n_neighbors=7, pca__n_components=3, score=0.889, total=   0.0s\n[CV] knn_clf__n_neighbors=7, pca__n_components=3 .....................\n[CV]  knn_clf__n_neighbors=7, pca__n_components=3, score=0.901, total=   0.0s\n[CV] knn_clf__n_neighbors=7, pca__n_components=3 .....................\n[CV]  knn_clf__n_neighbors=7, pca__n_components=3, score=0.900, total=   0.0s\n[CV] knn_clf__n_neighbors=7, pca__n_components=3 .....................\n[CV]  knn_clf__n_neighbors=7, pca__n_components=3, score=0.887, total=   0.0s\n[CV] knn_clf__n_neighbors=7, pca__n_components=3 .....................\n[CV]  knn_clf__n_neighbors=7, pca__n_components=3, score=0.938, total=   0.0s\n[CV] knn_clf__n_neighbors=7, pca__n_components=3 .....................\n[CV]  knn_clf__n_neighbors=7, pca__n_components=3, score=0.912, total=   0.0s\n[CV] knn_clf__n_neighbors=7, pca__n_components=3 .....................\n[CV]  knn_clf__n_neighbors=7, pca__n_components=3, score=0.925, total=   0.0s\n[CV] knn_clf__n_neighbors=7, pca__n_components=3 .....................\n[CV]  knn_clf__n_neighbors=7, pca__n_components=3, score=0.838, total=   0.0s\n[CV] knn_clf__n_neighbors=7, pca__n_components=3 .....................\n[CV]  knn_clf__n_neighbors=7, pca__n_components=3, score=0.886, total=   0.0s\n[CV] knn_clf__n_neighbors=7, pca__n_components=3 .....................\n[CV]  knn_clf__n_neighbors=7, pca__n_components=3, score=0.848, total=   0.0s\n[CV] knn_clf__n_neighbors=7, pca__n_components=4 .....................\n[CV]  knn_clf__n_neighbors=7, pca__n_components=4, score=0.901, total=   0.0s\n[CV] knn_clf__n_neighbors=7, pca__n_components=4 .....................\n[CV]  knn_clf__n_neighbors=7, pca__n_components=4, score=0.827, total=   0.0s\n[CV] knn_clf__n_neighbors=7, pca__n_components=4 .....................\n[CV]  knn_clf__n_neighbors=7, pca__n_components=4, score=0.875, total=   0.0s\n[CV] knn_clf__n_neighbors=7, pca__n_components=4 .....................\n[CV]  knn_clf__n_neighbors=7, pca__n_components=4, score=0.863, total=   0.0s\n[CV] knn_clf__n_neighbors=7, pca__n_components=4 .....................\n[CV]  knn_clf__n_neighbors=7, pca__n_components=4, score=0.887, total=   0.0s\n[CV] knn_clf__n_neighbors=7, pca__n_components=4 .....................\n[CV]  knn_clf__n_neighbors=7, pca__n_components=4, score=0.912, total=   0.0s\n[CV] knn_clf__n_neighbors=7, pca__n_components=4 .....................\n[CV]  knn_clf__n_neighbors=7, pca__n_components=4, score=0.863, total=   0.0s\n[CV] knn_clf__n_neighbors=7, pca__n_components=4 .....................\n[CV]  knn_clf__n_neighbors=7, pca__n_components=4, score=0.800, total=   0.0s\n[CV] knn_clf__n_neighbors=7, pca__n_components=4 .....................\n[CV]  knn_clf__n_neighbors=7, pca__n_components=4, score=0.873, total=   0.0s\n[CV] knn_clf__n_neighbors=7, pca__n_components=4 .....................\n[CV]  knn_clf__n_neighbors=7, pca__n_components=4, score=0.823, total=   0.0s\n[CV] knn_clf__n_neighbors=7, pca__n_components=5 .....................\n[CV]  knn_clf__n_neighbors=7, pca__n_components=5, score=0.852, total=   0.0s\n[CV] knn_clf__n_neighbors=7, pca__n_components=5 .....................\n[CV]  knn_clf__n_neighbors=7, pca__n_components=5, score=0.901, total=   0.0s\n[CV] knn_clf__n_neighbors=7, pca__n_components=5 .....................\n[CV]  knn_clf__n_neighbors=7, pca__n_components=5, score=0.863, total=   0.0s\n[CV] knn_clf__n_neighbors=7, pca__n_components=5 .....................\n[CV]  knn_clf__n_neighbors=7, pca__n_components=5, score=0.887, total=   0.0s\n[CV] knn_clf__n_neighbors=7, pca__n_components=5 .....................\n[CV]  knn_clf__n_neighbors=7, pca__n_components=5, score=0.887, total=   0.0s\n[CV] knn_clf__n_neighbors=7, pca__n_components=5 .....................\n[CV]  knn_clf__n_neighbors=7, pca__n_components=5, score=0.938, total=   0.0s\n[CV] knn_clf__n_neighbors=7, pca__n_components=5 .....................\n[CV]  knn_clf__n_neighbors=7, pca__n_components=5, score=0.838, total=   0.0s\n[CV] knn_clf__n_neighbors=7, pca__n_components=5 .....................\n[CV]  knn_clf__n_neighbors=7, pca__n_components=5, score=0.812, total=   0.0s\n[CV] knn_clf__n_neighbors=7, pca__n_components=5 .....................\n[CV]  knn_clf__n_neighbors=7, pca__n_components=5, score=0.848, total=   0.0s\n[CV] knn_clf__n_neighbors=7, pca__n_components=5 .....................\n[CV]  knn_clf__n_neighbors=7, pca__n_components=5, score=0.823, total=   0.0s\n[CV] knn_clf__n_neighbors=7, pca__n_components=6 .....................\n[CV]  knn_clf__n_neighbors=7, pca__n_components=6, score=0.877, total=   0.0s\n[CV] knn_clf__n_neighbors=7, pca__n_components=6 .....................\n[CV]  knn_clf__n_neighbors=7, pca__n_components=6, score=0.827, total=   0.1s\n[CV] knn_clf__n_neighbors=7, pca__n_components=6 .....................\n[CV]  knn_clf__n_neighbors=7, pca__n_components=6, score=0.875, total=   0.1s\n[CV] knn_clf__n_neighbors=7, pca__n_components=6 .....................\n[CV]  knn_clf__n_neighbors=7, pca__n_components=6, score=0.863, total=   0.0s\n[CV] knn_clf__n_neighbors=7, pca__n_components=6 .....................\n[CV]  knn_clf__n_neighbors=7, pca__n_components=6, score=0.887, total=   0.0s\n[CV] knn_clf__n_neighbors=7, pca__n_components=6 .....................\n[CV]  knn_clf__n_neighbors=7, pca__n_components=6, score=0.925, total=   0.0s\n[CV] knn_clf__n_neighbors=7, pca__n_components=6 .....................\n[CV]  knn_clf__n_neighbors=7, pca__n_components=6, score=0.812, total=   0.0s\n[CV] knn_clf__n_neighbors=7, pca__n_components=6 .....................\n[CV]  knn_clf__n_neighbors=7, pca__n_components=6, score=0.825, total=   0.1s\n[CV] knn_clf__n_neighbors=7, pca__n_components=6 .....................\n[CV]  knn_clf__n_neighbors=7, pca__n_components=6, score=0.873, total=   0.0s\n[CV] knn_clf__n_neighbors=7, pca__n_components=6 .....................\n[CV]  knn_clf__n_neighbors=7, pca__n_components=6, score=0.835, total=   0.0s\n[CV] knn_clf__n_neighbors=7, pca__n_components=7 .....................\n[CV]  knn_clf__n_neighbors=7, pca__n_components=7, score=0.852, total=   0.1s\n[CV] knn_clf__n_neighbors=7, pca__n_components=7 .....................\n[CV]  knn_clf__n_neighbors=7, pca__n_components=7, score=0.790, total=   0.0s\n[CV] knn_clf__n_neighbors=7, pca__n_components=7 .....................\n[CV]  knn_clf__n_neighbors=7, pca__n_components=7, score=0.887, total=   0.0s\n[CV] knn_clf__n_neighbors=7, pca__n_components=7 .....................\n[CV]  knn_clf__n_neighbors=7, pca__n_components=7, score=0.838, total=   0.0s\n[CV] knn_clf__n_neighbors=7, pca__n_components=7 .....................\n[CV]  knn_clf__n_neighbors=7, pca__n_components=7, score=0.900, total=   0.1s\n[CV] knn_clf__n_neighbors=7, pca__n_components=7 .....................\n[CV]  knn_clf__n_neighbors=7, pca__n_components=7, score=0.875, total=   0.0s\n[CV] knn_clf__n_neighbors=7, pca__n_components=7 .....................\n\n\n[CV]  knn_clf__n_neighbors=7, pca__n_components=7, score=0.838, total=   0.0s\n[CV] knn_clf__n_neighbors=7, pca__n_components=7 .....................\n[CV]  knn_clf__n_neighbors=7, pca__n_components=7, score=0.812, total=   0.1s\n[CV] knn_clf__n_neighbors=7, pca__n_components=7 .....................\n[CV]  knn_clf__n_neighbors=7, pca__n_components=7, score=0.823, total=   0.0s\n[CV] knn_clf__n_neighbors=7, pca__n_components=7 .....................\n[CV]  knn_clf__n_neighbors=7, pca__n_components=7, score=0.810, total=   0.1s\n[CV] knn_clf__n_neighbors=7, pca__n_components=8 .....................\n[CV]  knn_clf__n_neighbors=7, pca__n_components=8, score=0.889, total=   0.0s\n[CV] knn_clf__n_neighbors=7, pca__n_components=8 .....................\n[CV]  knn_clf__n_neighbors=7, pca__n_components=8, score=0.827, total=   0.0s\n[CV] knn_clf__n_neighbors=7, pca__n_components=8 .....................\n[CV]  knn_clf__n_neighbors=7, pca__n_components=8, score=0.850, total=   0.0s\n[CV] knn_clf__n_neighbors=7, pca__n_components=8 .....................\n[CV]  knn_clf__n_neighbors=7, pca__n_components=8, score=0.887, total=   0.0s\n[CV] knn_clf__n_neighbors=7, pca__n_components=8 .....................\n[CV]  knn_clf__n_neighbors=7, pca__n_components=8, score=0.875, total=   0.0s\n[CV] knn_clf__n_neighbors=7, pca__n_components=8 .....................\n[CV]  knn_clf__n_neighbors=7, pca__n_components=8, score=0.838, total=   0.0s\n[CV] knn_clf__n_neighbors=7, pca__n_components=8 .....................\n[CV]  knn_clf__n_neighbors=7, pca__n_components=8, score=0.812, total=   0.0s\n[CV] knn_clf__n_neighbors=7, pca__n_components=8 .....................\n[CV]  knn_clf__n_neighbors=7, pca__n_components=8, score=0.863, total=   0.0s\n[CV] knn_clf__n_neighbors=7, pca__n_components=8 .....................\n[CV]  knn_clf__n_neighbors=7, pca__n_components=8, score=0.823, total=   0.0s\n[CV] knn_clf__n_neighbors=7, pca__n_components=8 .....................\n[CV]  knn_clf__n_neighbors=7, pca__n_components=8, score=0.823, total=   0.0s\n[CV] knn_clf__n_neighbors=7, pca__n_components=9 .....................\n[CV]  knn_clf__n_neighbors=7, pca__n_components=9, score=0.852, total=   0.0s\n[CV] knn_clf__n_neighbors=7, pca__n_components=9 .....................\n[CV]  knn_clf__n_neighbors=7, pca__n_components=9, score=0.802, total=   0.0s\n[CV] knn_clf__n_neighbors=7, pca__n_components=9 .....................\n[CV]  knn_clf__n_neighbors=7, pca__n_components=9, score=0.863, total=   0.0s\n[CV] knn_clf__n_neighbors=7, pca__n_components=9 .....................\n[CV]  knn_clf__n_neighbors=7, pca__n_components=9, score=0.887, total=   0.0s\n[CV] knn_clf__n_neighbors=7, pca__n_components=9 .....................\n[CV]  knn_clf__n_neighbors=7, pca__n_components=9, score=0.850, total=   0.1s\n[CV] knn_clf__n_neighbors=7, pca__n_components=9 .....................\n[CV]  knn_clf__n_neighbors=7, pca__n_components=9, score=0.863, total=   0.0s\n[CV] knn_clf__n_neighbors=7, pca__n_components=9 .....................\n[CV]  knn_clf__n_neighbors=7, pca__n_components=9, score=0.812, total=   0.0s\n[CV] knn_clf__n_neighbors=7, pca__n_components=9 .....................\n[CV]  knn_clf__n_neighbors=7, pca__n_components=9, score=0.825, total=   0.0s\n[CV] knn_clf__n_neighbors=7, pca__n_components=9 .....................\n[CV]  knn_clf__n_neighbors=7, pca__n_components=9, score=0.823, total=   0.0s\n[CV] knn_clf__n_neighbors=7, pca__n_components=9 .....................\n[CV]  knn_clf__n_neighbors=7, pca__n_components=9, score=0.835, total=   0.0s\n[CV] knn_clf__n_neighbors=8, pca__n_components=1 .....................\n[CV]  knn_clf__n_neighbors=8, pca__n_components=1, score=0.765, total=   0.1s\n[CV] knn_clf__n_neighbors=8, pca__n_components=1 .....................\n[CV]  knn_clf__n_neighbors=8, pca__n_components=1, score=0.753, total=   0.0s\n[CV] knn_clf__n_neighbors=8, pca__n_components=1 .....................\n[CV]  knn_clf__n_neighbors=8, pca__n_components=1, score=0.738, total=   0.1s\n[CV] knn_clf__n_neighbors=8, pca__n_components=1 .....................\n[CV]  knn_clf__n_neighbors=8, pca__n_components=1, score=0.725, total=   0.1s\n[CV] knn_clf__n_neighbors=8, pca__n_components=1 .....................\n[CV]  knn_clf__n_neighbors=8, pca__n_components=1, score=0.775, total=   0.0s\n[CV] knn_clf__n_neighbors=8, pca__n_components=1 .....................\n[CV]  knn_clf__n_neighbors=8, pca__n_components=1, score=0.750, total=   0.0s\n[CV] knn_clf__n_neighbors=8, pca__n_components=1 .....................\n[CV]  knn_clf__n_neighbors=8, pca__n_components=1, score=0.812, total=   0.1s\n[CV] knn_clf__n_neighbors=8, pca__n_components=1 .....................\n[CV]  knn_clf__n_neighbors=8, pca__n_components=1, score=0.700, total=   0.0s\n[CV] knn_clf__n_neighbors=8, pca__n_components=1 .....................\n[CV]  knn_clf__n_neighbors=8, pca__n_components=1, score=0.823, total=   0.1s\n[CV] knn_clf__n_neighbors=8, pca__n_components=1 .....................\n[CV]  knn_clf__n_neighbors=8, pca__n_components=1, score=0.772, total=   0.0s\n[CV] knn_clf__n_neighbors=8, pca__n_components=2 .....................\n[CV]  knn_clf__n_neighbors=8, pca__n_components=2, score=0.889, total=   0.0s\n[CV] knn_clf__n_neighbors=8, pca__n_components=2 .....................\n[CV]  knn_clf__n_neighbors=8, pca__n_components=2, score=0.914, total=   0.1s\n[CV] knn_clf__n_neighbors=8, pca__n_components=2 .....................\n[CV]  knn_clf__n_neighbors=8, pca__n_components=2, score=0.875, total=   0.0s\n[CV] knn_clf__n_neighbors=8, pca__n_components=2 .....................\n[CV]  knn_clf__n_neighbors=8, pca__n_components=2, score=0.887, total=   0.0s\n[CV] knn_clf__n_neighbors=8, pca__n_components=2 .....................\n[CV]  knn_clf__n_neighbors=8, pca__n_components=2, score=0.938, total=   0.0s\n[CV] knn_clf__n_neighbors=8, pca__n_components=2 .....................\n[CV]  knn_clf__n_neighbors=8, pca__n_components=2, score=0.925, total=   0.0s\n[CV] knn_clf__n_neighbors=8, pca__n_components=2 .....................\n[CV]  knn_clf__n_neighbors=8, pca__n_components=2, score=0.912, total=   0.0s\n[CV] knn_clf__n_neighbors=8, pca__n_components=2 .....................\n[CV]  knn_clf__n_neighbors=8, pca__n_components=2, score=0.863, total=   0.1s\n[CV] knn_clf__n_neighbors=8, pca__n_components=2 .....................\n[CV]  knn_clf__n_neighbors=8, pca__n_components=2, score=0.861, total=   0.0s\n[CV] knn_clf__n_neighbors=8, pca__n_components=2 .....................\n[CV]  knn_clf__n_neighbors=8, pca__n_components=2, score=0.873, total=   0.0s\n[CV] knn_clf__n_neighbors=8, pca__n_components=3 .....................\n[CV]  knn_clf__n_neighbors=8, pca__n_components=3, score=0.877, total=   0.0s\n[CV] knn_clf__n_neighbors=8, pca__n_components=3 .....................\n[CV]  knn_clf__n_neighbors=8, pca__n_components=3, score=0.889, total=   0.0s\n[CV] knn_clf__n_neighbors=8, pca__n_components=3 .....................\n[CV]  knn_clf__n_neighbors=8, pca__n_components=3, score=0.912, total=   0.1s\n[CV] knn_clf__n_neighbors=8, pca__n_components=3 .....................\n[CV]  knn_clf__n_neighbors=8, pca__n_components=3, score=0.875, total=   0.0s\n[CV] knn_clf__n_neighbors=8, pca__n_components=3 .....................\n[CV]  knn_clf__n_neighbors=8, pca__n_components=3, score=0.938, total=   0.0s\n[CV] knn_clf__n_neighbors=8, pca__n_components=3 .....................\n[CV]  knn_clf__n_neighbors=8, pca__n_components=3, score=0.887, total=   0.0s\n[CV] knn_clf__n_neighbors=8, pca__n_components=3 .....................\n[CV]  knn_clf__n_neighbors=8, pca__n_components=3, score=0.925, total=   0.0s\n[CV] knn_clf__n_neighbors=8, pca__n_components=3 .....................\n[CV]  knn_clf__n_neighbors=8, pca__n_components=3, score=0.838, total=   0.0s\n[CV] knn_clf__n_neighbors=8, pca__n_components=3 .....................\n[CV]  knn_clf__n_neighbors=8, pca__n_components=3, score=0.911, total=   0.0s\n[CV] knn_clf__n_neighbors=8, pca__n_components=3 .....................\n[CV]  knn_clf__n_neighbors=8, pca__n_components=3, score=0.848, total=   0.0s\n[CV] knn_clf__n_neighbors=8, pca__n_components=4 .....................\n[CV]  knn_clf__n_neighbors=8, pca__n_components=4, score=0.864, total=   0.0s\n[CV] knn_clf__n_neighbors=8, pca__n_components=4 .....................\n[CV]  knn_clf__n_neighbors=8, pca__n_components=4, score=0.840, total=   0.0s\n[CV] knn_clf__n_neighbors=8, pca__n_components=4 .....................\n[CV]  knn_clf__n_neighbors=8, pca__n_components=4, score=0.863, total=   0.0s\n[CV] knn_clf__n_neighbors=8, pca__n_components=4 .....................\n[CV]  knn_clf__n_neighbors=8, pca__n_components=4, score=0.838, total=   0.0s\n[CV] knn_clf__n_neighbors=8, pca__n_components=4 .....................\n\n\n[CV]  knn_clf__n_neighbors=8, pca__n_components=4, score=0.887, total=   0.0s\n[CV] knn_clf__n_neighbors=8, pca__n_components=4 .....................\n[CV]  knn_clf__n_neighbors=8, pca__n_components=4, score=0.887, total=   0.0s\n[CV] knn_clf__n_neighbors=8, pca__n_components=4 .....................\n[CV]  knn_clf__n_neighbors=8, pca__n_components=4, score=0.863, total=   0.0s\n[CV] knn_clf__n_neighbors=8, pca__n_components=4 .....................\n[CV]  knn_clf__n_neighbors=8, pca__n_components=4, score=0.812, total=   0.0s\n[CV] knn_clf__n_neighbors=8, pca__n_components=4 .....................\n[CV]  knn_clf__n_neighbors=8, pca__n_components=4, score=0.886, total=   0.0s\n[CV] knn_clf__n_neighbors=8, pca__n_components=4 .....................\n[CV]  knn_clf__n_neighbors=8, pca__n_components=4, score=0.810, total=   0.0s\n[CV] knn_clf__n_neighbors=8, pca__n_components=5 .....................\n[CV]  knn_clf__n_neighbors=8, pca__n_components=5, score=0.827, total=   0.0s\n[CV] knn_clf__n_neighbors=8, pca__n_components=5 .....................\n[CV]  knn_clf__n_neighbors=8, pca__n_components=5, score=0.864, total=   0.0s\n[CV] knn_clf__n_neighbors=8, pca__n_components=5 .....................\n[CV]  knn_clf__n_neighbors=8, pca__n_components=5, score=0.850, total=   0.0s\n[CV] knn_clf__n_neighbors=8, pca__n_components=5 .....................\n[CV]  knn_clf__n_neighbors=8, pca__n_components=5, score=0.887, total=   0.0s\n[CV] knn_clf__n_neighbors=8, pca__n_components=5 .....................\n[CV]  knn_clf__n_neighbors=8, pca__n_components=5, score=0.912, total=   0.0s\n[CV] knn_clf__n_neighbors=8, pca__n_components=5 .....................\n[CV]  knn_clf__n_neighbors=8, pca__n_components=5, score=0.925, total=   0.0s\n[CV] knn_clf__n_neighbors=8, pca__n_components=5 .....................\n[CV]  knn_clf__n_neighbors=8, pca__n_components=5, score=0.850, total=   0.0s\n[CV] knn_clf__n_neighbors=8, pca__n_components=5 .....................\n[CV]  knn_clf__n_neighbors=8, pca__n_components=5, score=0.800, total=   0.0s\n[CV] knn_clf__n_neighbors=8, pca__n_components=5 .....................\n[CV]  knn_clf__n_neighbors=8, pca__n_components=5, score=0.848, total=   0.0s\n[CV] knn_clf__n_neighbors=8, pca__n_components=5 .....................\n[CV]  knn_clf__n_neighbors=8, pca__n_components=5, score=0.835, total=   0.0s\n[CV] knn_clf__n_neighbors=8, pca__n_components=6 .....................\n[CV]  knn_clf__n_neighbors=8, pca__n_components=6, score=0.877, total=   0.0s\n[CV] knn_clf__n_neighbors=8, pca__n_components=6 .....................\n[CV]  knn_clf__n_neighbors=8, pca__n_components=6, score=0.840, total=   0.0s\n[CV] knn_clf__n_neighbors=8, pca__n_components=6 .....................\n[CV]  knn_clf__n_neighbors=8, pca__n_components=6, score=0.825, total=   0.0s\n[CV] knn_clf__n_neighbors=8, pca__n_components=6 .....................\n[CV]  knn_clf__n_neighbors=8, pca__n_components=6, score=0.875, total=   0.0s\n[CV] knn_clf__n_neighbors=8, pca__n_components=6 .....................\n[CV]  knn_clf__n_neighbors=8, pca__n_components=6, score=0.900, total=   0.0s\n[CV] knn_clf__n_neighbors=8, pca__n_components=6 .....................\n[CV]  knn_clf__n_neighbors=8, pca__n_components=6, score=0.887, total=   0.0s\n[CV] knn_clf__n_neighbors=8, pca__n_components=6 .....................\n[CV]  knn_clf__n_neighbors=8, pca__n_components=6, score=0.825, total=   0.0s\n[CV] knn_clf__n_neighbors=8, pca__n_components=6 .....................\n[CV]  knn_clf__n_neighbors=8, pca__n_components=6, score=0.800, total=   0.0s\n[CV] knn_clf__n_neighbors=8, pca__n_components=6 .....................\n[CV]  knn_clf__n_neighbors=8, pca__n_components=6, score=0.873, total=   0.0s\n[CV] knn_clf__n_neighbors=8, pca__n_components=6 .....................\n[CV]  knn_clf__n_neighbors=8, pca__n_components=6, score=0.823, total=   0.0s\n[CV] knn_clf__n_neighbors=8, pca__n_components=7 .....................\n[CV]  knn_clf__n_neighbors=8, pca__n_components=7, score=0.864, total=   0.0s\n[CV] knn_clf__n_neighbors=8, pca__n_components=7 .....................\n[CV]  knn_clf__n_neighbors=8, pca__n_components=7, score=0.802, total=   0.0s\n[CV] knn_clf__n_neighbors=8, pca__n_components=7 .....................\n[CV]  knn_clf__n_neighbors=8, pca__n_components=7, score=0.825, total=   0.0s\n[CV] knn_clf__n_neighbors=8, pca__n_components=7 .....................\n[CV]  knn_clf__n_neighbors=8, pca__n_components=7, score=0.838, total=   0.0s\n[CV] knn_clf__n_neighbors=8, pca__n_components=7 .....................\n[CV]  knn_clf__n_neighbors=8, pca__n_components=7, score=0.887, total=   0.0s\n[CV] knn_clf__n_neighbors=8, pca__n_components=7 .....................\n[CV]  knn_clf__n_neighbors=8, pca__n_components=7, score=0.850, total=   0.0s\n[CV] knn_clf__n_neighbors=8, pca__n_components=7 .....................\n[CV]  knn_clf__n_neighbors=8, pca__n_components=7, score=0.825, total=   0.0s\n[CV] knn_clf__n_neighbors=8, pca__n_components=7 .....................\n[CV]  knn_clf__n_neighbors=8, pca__n_components=7, score=0.800, total=   0.0s\n[CV] knn_clf__n_neighbors=8, pca__n_components=7 .....................\n[CV]  knn_clf__n_neighbors=8, pca__n_components=7, score=0.823, total=   0.0s\n[CV] knn_clf__n_neighbors=8, pca__n_components=7 .....................\n[CV]  knn_clf__n_neighbors=8, pca__n_components=7, score=0.810, total=   0.0s\n[CV] knn_clf__n_neighbors=8, pca__n_components=8 .....................\n[CV]  knn_clf__n_neighbors=8, pca__n_components=8, score=0.889, total=   0.0s\n[CV] knn_clf__n_neighbors=8, pca__n_components=8 .....................\n[CV]  knn_clf__n_neighbors=8, pca__n_components=8, score=0.815, total=   0.0s\n[CV] knn_clf__n_neighbors=8, pca__n_components=8 .....................\n[CV]  knn_clf__n_neighbors=8, pca__n_components=8, score=0.812, total=   0.0s\n[CV] knn_clf__n_neighbors=8, pca__n_components=8 .....................\n[CV]  knn_clf__n_neighbors=8, pca__n_components=8, score=0.863, total=   0.0s\n[CV] knn_clf__n_neighbors=8, pca__n_components=8 .....................\n[CV]  knn_clf__n_neighbors=8, pca__n_components=8, score=0.887, total=   0.0s\n[CV] knn_clf__n_neighbors=8, pca__n_components=8 .....................\n[CV]  knn_clf__n_neighbors=8, pca__n_components=8, score=0.812, total=   0.0s\n[CV] knn_clf__n_neighbors=8, pca__n_components=8 .....................\n[CV]  knn_clf__n_neighbors=8, pca__n_components=8, score=0.800, total=   0.0s\n[CV] knn_clf__n_neighbors=8, pca__n_components=8 .....................\n[CV]  knn_clf__n_neighbors=8, pca__n_components=8, score=0.825, total=   0.0s\n[CV] knn_clf__n_neighbors=8, pca__n_components=8 .....................\n[CV]  knn_clf__n_neighbors=8, pca__n_components=8, score=0.823, total=   0.0s\n[CV] knn_clf__n_neighbors=8, pca__n_components=8 .....................\n[CV]  knn_clf__n_neighbors=8, pca__n_components=8, score=0.785, total=   0.0s\n[CV] knn_clf__n_neighbors=8, pca__n_components=9 .....................\n[CV]  knn_clf__n_neighbors=8, pca__n_components=9, score=0.815, total=   0.0s\n[CV] knn_clf__n_neighbors=8, pca__n_components=9 .....................\n[CV]  knn_clf__n_neighbors=8, pca__n_components=9, score=0.790, total=   0.0s\n[CV] knn_clf__n_neighbors=8, pca__n_components=9 .....................\n[CV]  knn_clf__n_neighbors=8, pca__n_components=9, score=0.812, total=   0.0s\n[CV] knn_clf__n_neighbors=8, pca__n_components=9 .....................\n[CV]  knn_clf__n_neighbors=8, pca__n_components=9, score=0.875, total=   0.0s\n[CV] knn_clf__n_neighbors=8, pca__n_components=9 .....................\n[CV]  knn_clf__n_neighbors=8, pca__n_components=9, score=0.875, total=   0.0s\n[CV] knn_clf__n_neighbors=8, pca__n_components=9 .....................\n[CV]  knn_clf__n_neighbors=8, pca__n_components=9, score=0.838, total=   0.0s\n[CV] knn_clf__n_neighbors=8, pca__n_components=9 .....................\n[CV]  knn_clf__n_neighbors=8, pca__n_components=9, score=0.812, total=   0.0s\n[CV] knn_clf__n_neighbors=8, pca__n_components=9 .....................\n[CV]  knn_clf__n_neighbors=8, pca__n_components=9, score=0.812, total=   0.0s\n[CV] knn_clf__n_neighbors=8, pca__n_components=9 .....................\n[CV]  knn_clf__n_neighbors=8, pca__n_components=9, score=0.835, total=   0.0s\n[CV] knn_clf__n_neighbors=8, pca__n_components=9 .....................\n\n\n[CV]  knn_clf__n_neighbors=8, pca__n_components=9, score=0.797, total=   0.0s\n[CV] knn_clf__n_neighbors=9, pca__n_components=1 .....................\n[CV]  knn_clf__n_neighbors=9, pca__n_components=1, score=0.790, total=   0.1s\n[CV] knn_clf__n_neighbors=9, pca__n_components=1 .....................\n[CV]  knn_clf__n_neighbors=9, pca__n_components=1, score=0.765, total=   0.0s\n[CV] knn_clf__n_neighbors=9, pca__n_components=1 .....................\n[CV]  knn_clf__n_neighbors=9, pca__n_components=1, score=0.725, total=   0.0s\n[CV] knn_clf__n_neighbors=9, pca__n_components=1 .....................\n[CV]  knn_clf__n_neighbors=9, pca__n_components=1, score=0.738, total=   0.0s\n[CV] knn_clf__n_neighbors=9, pca__n_components=1 .....................\n[CV]  knn_clf__n_neighbors=9, pca__n_components=1, score=0.775, total=   0.0s\n[CV] knn_clf__n_neighbors=9, pca__n_components=1 .....................\n[CV]  knn_clf__n_neighbors=9, pca__n_components=1, score=0.688, total=   0.0s\n[CV] knn_clf__n_neighbors=9, pca__n_components=1 .....................\n[CV]  knn_clf__n_neighbors=9, pca__n_components=1, score=0.812, total=   0.0s\n[CV] knn_clf__n_neighbors=9, pca__n_components=1 .....................\n[CV]  knn_clf__n_neighbors=9, pca__n_components=1, score=0.713, total=   0.0s\n[CV] knn_clf__n_neighbors=9, pca__n_components=1 .....................\n[CV]  knn_clf__n_neighbors=9, pca__n_components=1, score=0.797, total=   0.0s\n[CV] knn_clf__n_neighbors=9, pca__n_components=1 .....................\n[CV]  knn_clf__n_neighbors=9, pca__n_components=1, score=0.759, total=   0.0s\n[CV] knn_clf__n_neighbors=9, pca__n_components=2 .....................\n[CV]  knn_clf__n_neighbors=9, pca__n_components=2, score=0.877, total=   0.0s\n[CV] knn_clf__n_neighbors=9, pca__n_components=2 .....................\n[CV]  knn_clf__n_neighbors=9, pca__n_components=2, score=0.926, total=   0.0s\n[CV] knn_clf__n_neighbors=9, pca__n_components=2 .....................\n[CV]  knn_clf__n_neighbors=9, pca__n_components=2, score=0.875, total=   0.0s\n[CV] knn_clf__n_neighbors=9, pca__n_components=2 .....................\n[CV]  knn_clf__n_neighbors=9, pca__n_components=2, score=0.912, total=   0.0s\n[CV] knn_clf__n_neighbors=9, pca__n_components=2 .....................\n[CV]  knn_clf__n_neighbors=9, pca__n_components=2, score=0.950, total=   0.0s\n[CV] knn_clf__n_neighbors=9, pca__n_components=2 .....................\n[CV]  knn_clf__n_neighbors=9, pca__n_components=2, score=0.938, total=   0.0s\n[CV] knn_clf__n_neighbors=9, pca__n_components=2 .....................\n[CV]  knn_clf__n_neighbors=9, pca__n_components=2, score=0.912, total=   0.0s\n[CV] knn_clf__n_neighbors=9, pca__n_components=2 .....................\n[CV]  knn_clf__n_neighbors=9, pca__n_components=2, score=0.875, total=   0.0s\n[CV] knn_clf__n_neighbors=9, pca__n_components=2 .....................\n[CV]  knn_clf__n_neighbors=9, pca__n_components=2, score=0.861, total=   0.0s\n[CV] knn_clf__n_neighbors=9, pca__n_components=2 .....................\n[CV]  knn_clf__n_neighbors=9, pca__n_components=2, score=0.911, total=   0.0s\n[CV] knn_clf__n_neighbors=9, pca__n_components=3 .....................\n[CV]  knn_clf__n_neighbors=9, pca__n_components=3, score=0.877, total=   0.1s\n[CV] knn_clf__n_neighbors=9, pca__n_components=3 .....................\n[CV]  knn_clf__n_neighbors=9, pca__n_components=3, score=0.901, total=   0.0s\n[CV] knn_clf__n_neighbors=9, pca__n_components=3 .....................\n[CV]  knn_clf__n_neighbors=9, pca__n_components=3, score=0.912, total=   0.0s\n[CV] knn_clf__n_neighbors=9, pca__n_components=3 .....................\n[CV]  knn_clf__n_neighbors=9, pca__n_components=3, score=0.887, total=   0.0s\n[CV] knn_clf__n_neighbors=9, pca__n_components=3 .....................\n[CV]  knn_clf__n_neighbors=9, pca__n_components=3, score=0.900, total=   0.0s\n[CV] knn_clf__n_neighbors=9, pca__n_components=3 .....................\n[CV]  knn_clf__n_neighbors=9, pca__n_components=3, score=0.887, total=   0.0s\n[CV] knn_clf__n_neighbors=9, pca__n_components=3 .....................\n[CV]  knn_clf__n_neighbors=9, pca__n_components=3, score=0.900, total=   0.0s\n[CV] knn_clf__n_neighbors=9, pca__n_components=3 .....................\n[CV]  knn_clf__n_neighbors=9, pca__n_components=3, score=0.850, total=   0.0s\n[CV] knn_clf__n_neighbors=9, pca__n_components=3 .....................\n[CV]  knn_clf__n_neighbors=9, pca__n_components=3, score=0.873, total=   0.0s\n[CV] knn_clf__n_neighbors=9, pca__n_components=3 .....................\n[CV]  knn_clf__n_neighbors=9, pca__n_components=3, score=0.873, total=   0.0s\n[CV] knn_clf__n_neighbors=9, pca__n_components=4 .....................\n[CV]  knn_clf__n_neighbors=9, pca__n_components=4, score=0.877, total=   0.0s\n[CV] knn_clf__n_neighbors=9, pca__n_components=4 .....................\n[CV]  knn_clf__n_neighbors=9, pca__n_components=4, score=0.877, total=   0.0s\n[CV] knn_clf__n_neighbors=9, pca__n_components=4 .....................\n[CV]  knn_clf__n_neighbors=9, pca__n_components=4, score=0.863, total=   0.0s\n[CV] knn_clf__n_neighbors=9, pca__n_components=4 .....................\n[CV]  knn_clf__n_neighbors=9, pca__n_components=4, score=0.850, total=   0.0s\n[CV] knn_clf__n_neighbors=9, pca__n_components=4 .....................\n[CV]  knn_clf__n_neighbors=9, pca__n_components=4, score=0.900, total=   0.0s\n[CV] knn_clf__n_neighbors=9, pca__n_components=4 .....................\n[CV]  knn_clf__n_neighbors=9, pca__n_components=4, score=0.912, total=   0.0s\n[CV] knn_clf__n_neighbors=9, pca__n_components=4 .....................\n[CV]  knn_clf__n_neighbors=9, pca__n_components=4, score=0.875, total=   0.0s\n[CV] knn_clf__n_neighbors=9, pca__n_components=4 .....................\n[CV]  knn_clf__n_neighbors=9, pca__n_components=4, score=0.800, total=   0.0s\n[CV] knn_clf__n_neighbors=9, pca__n_components=4 .....................\n[CV]  knn_clf__n_neighbors=9, pca__n_components=4, score=0.873, total=   0.0s\n[CV] knn_clf__n_neighbors=9, pca__n_components=4 .....................\n[CV]  knn_clf__n_neighbors=9, pca__n_components=4, score=0.810, total=   0.0s\n[CV] knn_clf__n_neighbors=9, pca__n_components=5 .....................\n[CV]  knn_clf__n_neighbors=9, pca__n_components=5, score=0.852, total=   0.0s\n[CV] knn_clf__n_neighbors=9, pca__n_components=5 .....................\n[CV]  knn_clf__n_neighbors=9, pca__n_components=5, score=0.877, total=   0.0s\n[CV] knn_clf__n_neighbors=9, pca__n_components=5 .....................\n[CV]  knn_clf__n_neighbors=9, pca__n_components=5, score=0.863, total=   0.0s\n[CV] knn_clf__n_neighbors=9, pca__n_components=5 .....................\n[CV]  knn_clf__n_neighbors=9, pca__n_components=5, score=0.875, total=   0.0s\n[CV] knn_clf__n_neighbors=9, pca__n_components=5 .....................\n[CV]  knn_clf__n_neighbors=9, pca__n_components=5, score=0.912, total=   0.0s\n[CV] knn_clf__n_neighbors=9, pca__n_components=5 .....................\n[CV]  knn_clf__n_neighbors=9, pca__n_components=5, score=0.912, total=   0.0s\n[CV] knn_clf__n_neighbors=9, pca__n_components=5 .....................\n[CV]  knn_clf__n_neighbors=9, pca__n_components=5, score=0.850, total=   0.0s\n[CV] knn_clf__n_neighbors=9, pca__n_components=5 .....................\n[CV]  knn_clf__n_neighbors=9, pca__n_components=5, score=0.838, total=   0.0s\n[CV] knn_clf__n_neighbors=9, pca__n_components=5 .....................\n[CV]  knn_clf__n_neighbors=9, pca__n_components=5, score=0.835, total=   0.0s\n[CV] knn_clf__n_neighbors=9, pca__n_components=5 .....................\n[CV]  knn_clf__n_neighbors=9, pca__n_components=5, score=0.823, total=   0.0s\n[CV] knn_clf__n_neighbors=9, pca__n_components=6 .....................\n[CV]  knn_clf__n_neighbors=9, pca__n_components=6, score=0.877, total=   0.0s\n[CV] knn_clf__n_neighbors=9, pca__n_components=6 .....................\n[CV]  knn_clf__n_neighbors=9, pca__n_components=6, score=0.840, total=   0.0s\n[CV] knn_clf__n_neighbors=9, pca__n_components=6 .....................\n[CV]  knn_clf__n_neighbors=9, pca__n_components=6, score=0.825, total=   0.0s\n[CV] knn_clf__n_neighbors=9, pca__n_components=6 .....................\n[CV]  knn_clf__n_neighbors=9, pca__n_components=6, score=0.900, total=   0.0s\n[CV] knn_clf__n_neighbors=9, pca__n_components=6 .....................\n[CV]  knn_clf__n_neighbors=9, pca__n_components=6, score=0.875, total=   0.0s\n[CV] knn_clf__n_neighbors=9, pca__n_components=6 .....................\n[CV]  knn_clf__n_neighbors=9, pca__n_components=6, score=0.925, total=   0.0s\n[CV] knn_clf__n_neighbors=9, pca__n_components=6 .....................\n[CV]  knn_clf__n_neighbors=9, pca__n_components=6, score=0.863, total=   0.0s\n[CV] knn_clf__n_neighbors=9, pca__n_components=6 .....................\n[CV]  knn_clf__n_neighbors=9, pca__n_components=6, score=0.800, total=   0.0s\n[CV] knn_clf__n_neighbors=9, pca__n_components=6 .....................\n[CV]  knn_clf__n_neighbors=9, pca__n_components=6, score=0.861, total=   0.0s\n[CV] knn_clf__n_neighbors=9, pca__n_components=6 .....................\n[CV]  knn_clf__n_neighbors=9, pca__n_components=6, score=0.835, total=   0.0s\n[CV] knn_clf__n_neighbors=9, pca__n_components=7 .....................\n[CV]  knn_clf__n_neighbors=9, pca__n_components=7, score=0.864, total=   0.0s\n[CV] knn_clf__n_neighbors=9, pca__n_components=7 .....................\n[CV]  knn_clf__n_neighbors=9, pca__n_components=7, score=0.778, total=   0.0s\n[CV] knn_clf__n_neighbors=9, pca__n_components=7 .....................\n\n\n[CV]  knn_clf__n_neighbors=9, pca__n_components=7, score=0.887, total=   0.0s\n[CV] knn_clf__n_neighbors=9, pca__n_components=7 .....................\n[CV]  knn_clf__n_neighbors=9, pca__n_components=7, score=0.863, total=   0.0s\n[CV] knn_clf__n_neighbors=9, pca__n_components=7 .....................\n[CV]  knn_clf__n_neighbors=9, pca__n_components=7, score=0.900, total=   0.0s\n[CV] knn_clf__n_neighbors=9, pca__n_components=7 .....................\n[CV]  knn_clf__n_neighbors=9, pca__n_components=7, score=0.900, total=   0.0s\n[CV] knn_clf__n_neighbors=9, pca__n_components=7 .....................\n[CV]  knn_clf__n_neighbors=9, pca__n_components=7, score=0.838, total=   0.0s\n[CV] knn_clf__n_neighbors=9, pca__n_components=7 .....................\n[CV]  knn_clf__n_neighbors=9, pca__n_components=7, score=0.812, total=   0.0s\n[CV] knn_clf__n_neighbors=9, pca__n_components=7 .....................\n[CV]  knn_clf__n_neighbors=9, pca__n_components=7, score=0.835, total=   0.0s\n[CV] knn_clf__n_neighbors=9, pca__n_components=7 .....................\n[CV]  knn_clf__n_neighbors=9, pca__n_components=7, score=0.810, total=   0.0s\n[CV] knn_clf__n_neighbors=9, pca__n_components=8 .....................\n[CV]  knn_clf__n_neighbors=9, pca__n_components=8, score=0.877, total=   0.0s\n[CV] knn_clf__n_neighbors=9, pca__n_components=8 .....................\n[CV]  knn_clf__n_neighbors=9, pca__n_components=8, score=0.815, total=   0.0s\n[CV] knn_clf__n_neighbors=9, pca__n_components=8 .....................\n[CV]  knn_clf__n_neighbors=9, pca__n_components=8, score=0.825, total=   0.0s\n[CV] knn_clf__n_neighbors=9, pca__n_components=8 .....................\n[CV]  knn_clf__n_neighbors=9, pca__n_components=8, score=0.900, total=   0.0s\n[CV] knn_clf__n_neighbors=9, pca__n_components=8 .....................\n[CV]  knn_clf__n_neighbors=9, pca__n_components=8, score=0.887, total=   0.0s\n[CV] knn_clf__n_neighbors=9, pca__n_components=8 .....................\n[CV]  knn_clf__n_neighbors=9, pca__n_components=8, score=0.863, total=   0.0s\n[CV] knn_clf__n_neighbors=9, pca__n_components=8 .....................\n[CV]  knn_clf__n_neighbors=9, pca__n_components=8, score=0.812, total=   0.0s\n[CV] knn_clf__n_neighbors=9, pca__n_components=8 .....................\n[CV]  knn_clf__n_neighbors=9, pca__n_components=8, score=0.875, total=   0.0s\n[CV] knn_clf__n_neighbors=9, pca__n_components=8 .....................\n[CV]  knn_clf__n_neighbors=9, pca__n_components=8, score=0.835, total=   0.0s\n[CV] knn_clf__n_neighbors=9, pca__n_components=8 .....................\n[CV]  knn_clf__n_neighbors=9, pca__n_components=8, score=0.797, total=   0.0s\n[CV] knn_clf__n_neighbors=9, pca__n_components=9 .....................\n[CV]  knn_clf__n_neighbors=9, pca__n_components=9, score=0.852, total=   0.0s\n[CV] knn_clf__n_neighbors=9, pca__n_components=9 .....................\n[CV]  knn_clf__n_neighbors=9, pca__n_components=9, score=0.778, total=   0.0s\n[CV] knn_clf__n_neighbors=9, pca__n_components=9 .....................\n[CV]  knn_clf__n_neighbors=9, pca__n_components=9, score=0.825, total=   0.0s\n[CV] knn_clf__n_neighbors=9, pca__n_components=9 .....................\n[CV]  knn_clf__n_neighbors=9, pca__n_components=9, score=0.900, total=   0.0s\n[CV] knn_clf__n_neighbors=9, pca__n_components=9 .....................\n[CV]  knn_clf__n_neighbors=9, pca__n_components=9, score=0.850, total=   0.0s\n[CV] knn_clf__n_neighbors=9, pca__n_components=9 .....................\n[CV]  knn_clf__n_neighbors=9, pca__n_components=9, score=0.863, total=   0.0s\n[CV] knn_clf__n_neighbors=9, pca__n_components=9 .....................\n[CV]  knn_clf__n_neighbors=9, pca__n_components=9, score=0.800, total=   0.0s\n[CV] knn_clf__n_neighbors=9, pca__n_components=9 .....................\n[CV]  knn_clf__n_neighbors=9, pca__n_components=9, score=0.863, total=   0.0s\n[CV] knn_clf__n_neighbors=9, pca__n_components=9 .....................\n[CV]  knn_clf__n_neighbors=9, pca__n_components=9, score=0.823, total=   0.0s\n[CV] knn_clf__n_neighbors=9, pca__n_components=9 .....................\n[CV]  knn_clf__n_neighbors=9, pca__n_components=9, score=0.823, total=   0.0s\n[CV] knn_clf__n_neighbors=10, pca__n_components=1 ....................\n[CV]  knn_clf__n_neighbors=10, pca__n_components=1, score=0.790, total=   0.0s\n[CV] knn_clf__n_neighbors=10, pca__n_components=1 ....................\n[CV]  knn_clf__n_neighbors=10, pca__n_components=1, score=0.753, total=   0.0s\n[CV] knn_clf__n_neighbors=10, pca__n_components=1 ....................\n[CV]  knn_clf__n_neighbors=10, pca__n_components=1, score=0.750, total=   0.0s\n[CV] knn_clf__n_neighbors=10, pca__n_components=1 ....................\n[CV]  knn_clf__n_neighbors=10, pca__n_components=1, score=0.750, total=   0.0s\n[CV] knn_clf__n_neighbors=10, pca__n_components=1 ....................\n[CV]  knn_clf__n_neighbors=10, pca__n_components=1, score=0.825, total=   0.0s\n[CV] knn_clf__n_neighbors=10, pca__n_components=1 ....................\n[CV]  knn_clf__n_neighbors=10, pca__n_components=1, score=0.700, total=   0.0s\n[CV] knn_clf__n_neighbors=10, pca__n_components=1 ....................\n[CV]  knn_clf__n_neighbors=10, pca__n_components=1, score=0.800, total=   0.0s\n[CV] knn_clf__n_neighbors=10, pca__n_components=1 ....................\n[CV]  knn_clf__n_neighbors=10, pca__n_components=1, score=0.738, total=   0.0s\n[CV] knn_clf__n_neighbors=10, pca__n_components=1 ....................\n[CV]  knn_clf__n_neighbors=10, pca__n_components=1, score=0.823, total=   0.0s\n[CV] knn_clf__n_neighbors=10, pca__n_components=1 ....................\n[CV]  knn_clf__n_neighbors=10, pca__n_components=1, score=0.772, total=   0.0s\n[CV] knn_clf__n_neighbors=10, pca__n_components=2 ....................\n[CV]  knn_clf__n_neighbors=10, pca__n_components=2, score=0.877, total=   0.0s\n[CV] knn_clf__n_neighbors=10, pca__n_components=2 ....................\n[CV]  knn_clf__n_neighbors=10, pca__n_components=2, score=0.926, total=   0.0s\n[CV] knn_clf__n_neighbors=10, pca__n_components=2 ....................\n[CV]  knn_clf__n_neighbors=10, pca__n_components=2, score=0.875, total=   0.0s\n[CV] knn_clf__n_neighbors=10, pca__n_components=2 ....................\n[CV]  knn_clf__n_neighbors=10, pca__n_components=2, score=0.925, total=   0.0s\n[CV] knn_clf__n_neighbors=10, pca__n_components=2 ....................\n[CV]  knn_clf__n_neighbors=10, pca__n_components=2, score=0.938, total=   0.0s\n[CV] knn_clf__n_neighbors=10, pca__n_components=2 ....................\n[CV]  knn_clf__n_neighbors=10, pca__n_components=2, score=0.912, total=   0.0s\n[CV] knn_clf__n_neighbors=10, pca__n_components=2 ....................\n[CV]  knn_clf__n_neighbors=10, pca__n_components=2, score=0.925, total=   0.0s\n[CV] knn_clf__n_neighbors=10, pca__n_components=2 ....................\n[CV]  knn_clf__n_neighbors=10, pca__n_components=2, score=0.875, total=   0.0s\n[CV] knn_clf__n_neighbors=10, pca__n_components=2 ....................\n[CV]  knn_clf__n_neighbors=10, pca__n_components=2, score=0.848, total=   0.0s\n[CV] knn_clf__n_neighbors=10, pca__n_components=2 ....................\n[CV]  knn_clf__n_neighbors=10, pca__n_components=2, score=0.899, total=   0.0s\n[CV] knn_clf__n_neighbors=10, pca__n_components=3 ....................\n[CV]  knn_clf__n_neighbors=10, pca__n_components=3, score=0.877, total=   0.0s\n[CV] knn_clf__n_neighbors=10, pca__n_components=3 ....................\n[CV]  knn_clf__n_neighbors=10, pca__n_components=3, score=0.901, total=   0.0s\n[CV] knn_clf__n_neighbors=10, pca__n_components=3 ....................\n[CV]  knn_clf__n_neighbors=10, pca__n_components=3, score=0.912, total=   0.0s\n[CV] knn_clf__n_neighbors=10, pca__n_components=3 ....................\n[CV]  knn_clf__n_neighbors=10, pca__n_components=3, score=0.900, total=   0.0s\n[CV] knn_clf__n_neighbors=10, pca__n_components=3 ....................\n[CV]  knn_clf__n_neighbors=10, pca__n_components=3, score=0.925, total=   0.1s\n[CV] knn_clf__n_neighbors=10, pca__n_components=3 ....................\n[CV]  knn_clf__n_neighbors=10, pca__n_components=3, score=0.887, total=   0.1s\n[CV] knn_clf__n_neighbors=10, pca__n_components=3 ....................\n[CV]  knn_clf__n_neighbors=10, pca__n_components=3, score=0.875, total=   0.0s\n[CV] knn_clf__n_neighbors=10, pca__n_components=3 ....................\n[CV]  knn_clf__n_neighbors=10, pca__n_components=3, score=0.825, total=   0.0s\n[CV] knn_clf__n_neighbors=10, pca__n_components=3 ....................\n[CV]  knn_clf__n_neighbors=10, pca__n_components=3, score=0.886, total=   0.0s\n[CV] knn_clf__n_neighbors=10, pca__n_components=3 ....................\n[CV]  knn_clf__n_neighbors=10, pca__n_components=3, score=0.848, total=   0.0s\n[CV] knn_clf__n_neighbors=10, pca__n_components=4 ....................\n[CV]  knn_clf__n_neighbors=10, pca__n_components=4, score=0.864, total=   0.0s\n[CV] knn_clf__n_neighbors=10, pca__n_components=4 ....................\n[CV]  knn_clf__n_neighbors=10, pca__n_components=4, score=0.864, total=   0.0s\n[CV] knn_clf__n_neighbors=10, pca__n_components=4 ....................\n[CV]  knn_clf__n_neighbors=10, pca__n_components=4, score=0.850, total=   0.0s\n[CV] knn_clf__n_neighbors=10, pca__n_components=4 ....................\n[CV]  knn_clf__n_neighbors=10, pca__n_components=4, score=0.838, total=   0.0s\n[CV] knn_clf__n_neighbors=10, pca__n_components=4 ....................\n[CV]  knn_clf__n_neighbors=10, pca__n_components=4, score=0.900, total=   0.0s\n[CV] knn_clf__n_neighbors=10, pca__n_components=4 ....................\n[CV]  knn_clf__n_neighbors=10, pca__n_components=4, score=0.900, total=   0.0s\n[CV] knn_clf__n_neighbors=10, pca__n_components=4 ....................\n[CV]  knn_clf__n_neighbors=10, pca__n_components=4, score=0.887, total=   0.0s\n[CV] knn_clf__n_neighbors=10, pca__n_components=4 ....................\n\n\n[CV]  knn_clf__n_neighbors=10, pca__n_components=4, score=0.812, total=   0.0s\n[CV] knn_clf__n_neighbors=10, pca__n_components=4 ....................\n[CV]  knn_clf__n_neighbors=10, pca__n_components=4, score=0.873, total=   0.0s\n[CV] knn_clf__n_neighbors=10, pca__n_components=4 ....................\n[CV]  knn_clf__n_neighbors=10, pca__n_components=4, score=0.810, total=   0.0s\n[CV] knn_clf__n_neighbors=10, pca__n_components=5 ....................\n[CV]  knn_clf__n_neighbors=10, pca__n_components=5, score=0.852, total=   0.0s\n[CV] knn_clf__n_neighbors=10, pca__n_components=5 ....................\n[CV]  knn_clf__n_neighbors=10, pca__n_components=5, score=0.852, total=   0.0s\n[CV] knn_clf__n_neighbors=10, pca__n_components=5 ....................\n[CV]  knn_clf__n_neighbors=10, pca__n_components=5, score=0.850, total=   0.0s\n[CV] knn_clf__n_neighbors=10, pca__n_components=5 ....................\n[CV]  knn_clf__n_neighbors=10, pca__n_components=5, score=0.875, total=   0.0s\n[CV] knn_clf__n_neighbors=10, pca__n_components=5 ....................\n[CV]  knn_clf__n_neighbors=10, pca__n_components=5, score=0.900, total=   0.0s\n[CV] knn_clf__n_neighbors=10, pca__n_components=5 ....................\n[CV]  knn_clf__n_neighbors=10, pca__n_components=5, score=0.887, total=   0.0s\n[CV] knn_clf__n_neighbors=10, pca__n_components=5 ....................\n[CV]  knn_clf__n_neighbors=10, pca__n_components=5, score=0.863, total=   0.0s\n[CV] knn_clf__n_neighbors=10, pca__n_components=5 ....................\n[CV]  knn_clf__n_neighbors=10, pca__n_components=5, score=0.825, total=   0.0s\n[CV] knn_clf__n_neighbors=10, pca__n_components=5 ....................\n[CV]  knn_clf__n_neighbors=10, pca__n_components=5, score=0.861, total=   0.0s\n[CV] knn_clf__n_neighbors=10, pca__n_components=5 ....................\n[CV]  knn_clf__n_neighbors=10, pca__n_components=5, score=0.823, total=   0.0s\n[CV] knn_clf__n_neighbors=10, pca__n_components=6 ....................\n[CV]  knn_clf__n_neighbors=10, pca__n_components=6, score=0.877, total=   0.0s\n[CV] knn_clf__n_neighbors=10, pca__n_components=6 ....................\n[CV]  knn_clf__n_neighbors=10, pca__n_components=6, score=0.852, total=   0.0s\n[CV] knn_clf__n_neighbors=10, pca__n_components=6 ....................\n[CV]  knn_clf__n_neighbors=10, pca__n_components=6, score=0.812, total=   0.0s\n[CV] knn_clf__n_neighbors=10, pca__n_components=6 ....................\n[CV]  knn_clf__n_neighbors=10, pca__n_components=6, score=0.875, total=   0.0s\n[CV] knn_clf__n_neighbors=10, pca__n_components=6 ....................\n[CV]  knn_clf__n_neighbors=10, pca__n_components=6, score=0.875, total=   0.0s\n[CV] knn_clf__n_neighbors=10, pca__n_components=6 ....................\n[CV]  knn_clf__n_neighbors=10, pca__n_components=6, score=0.912, total=   0.0s\n[CV] knn_clf__n_neighbors=10, pca__n_components=6 ....................\n[CV]  knn_clf__n_neighbors=10, pca__n_components=6, score=0.838, total=   0.0s\n[CV] knn_clf__n_neighbors=10, pca__n_components=6 ....................\n[CV]  knn_clf__n_neighbors=10, pca__n_components=6, score=0.800, total=   0.0s\n[CV] knn_clf__n_neighbors=10, pca__n_components=6 ....................\n[CV]  knn_clf__n_neighbors=10, pca__n_components=6, score=0.873, total=   0.0s\n[CV] knn_clf__n_neighbors=10, pca__n_components=6 ....................\n[CV]  knn_clf__n_neighbors=10, pca__n_components=6, score=0.823, total=   0.0s\n[CV] knn_clf__n_neighbors=10, pca__n_components=7 ....................\n[CV]  knn_clf__n_neighbors=10, pca__n_components=7, score=0.877, total=   0.0s\n[CV] knn_clf__n_neighbors=10, pca__n_components=7 ....................\n[CV]  knn_clf__n_neighbors=10, pca__n_components=7, score=0.802, total=   0.0s\n[CV] knn_clf__n_neighbors=10, pca__n_components=7 ....................\n[CV]  knn_clf__n_neighbors=10, pca__n_components=7, score=0.863, total=   0.0s\n[CV] knn_clf__n_neighbors=10, pca__n_components=7 ....................\n[CV]  knn_clf__n_neighbors=10, pca__n_components=7, score=0.863, total=   0.0s\n[CV] knn_clf__n_neighbors=10, pca__n_components=7 ....................\n[CV]  knn_clf__n_neighbors=10, pca__n_components=7, score=0.887, total=   0.0s\n[CV] knn_clf__n_neighbors=10, pca__n_components=7 ....................\n[CV]  knn_clf__n_neighbors=10, pca__n_components=7, score=0.863, total=   0.0s\n[CV] knn_clf__n_neighbors=10, pca__n_components=7 ....................\n[CV]  knn_clf__n_neighbors=10, pca__n_components=7, score=0.838, total=   0.0s\n[CV] knn_clf__n_neighbors=10, pca__n_components=7 ....................\n[CV]  knn_clf__n_neighbors=10, pca__n_components=7, score=0.812, total=   0.0s\n[CV] knn_clf__n_neighbors=10, pca__n_components=7 ....................\n[CV]  knn_clf__n_neighbors=10, pca__n_components=7, score=0.861, total=   0.0s\n[CV] knn_clf__n_neighbors=10, pca__n_components=7 ....................\n[CV]  knn_clf__n_neighbors=10, pca__n_components=7, score=0.772, total=   0.0s\n[CV] knn_clf__n_neighbors=10, pca__n_components=8 ....................\n[CV]  knn_clf__n_neighbors=10, pca__n_components=8, score=0.901, total=   0.0s\n[CV] knn_clf__n_neighbors=10, pca__n_components=8 ....................\n[CV]  knn_clf__n_neighbors=10, pca__n_components=8, score=0.802, total=   0.0s\n[CV] knn_clf__n_neighbors=10, pca__n_components=8 ....................\n[CV]  knn_clf__n_neighbors=10, pca__n_components=8, score=0.787, total=   0.0s\n[CV] knn_clf__n_neighbors=10, pca__n_components=8 ....................\n[CV]  knn_clf__n_neighbors=10, pca__n_components=8, score=0.887, total=   0.0s\n[CV] knn_clf__n_neighbors=10, pca__n_components=8 ....................\n[CV]  knn_clf__n_neighbors=10, pca__n_components=8, score=0.900, total=   0.0s\n[CV] knn_clf__n_neighbors=10, pca__n_components=8 ....................\n[CV]  knn_clf__n_neighbors=10, pca__n_components=8, score=0.825, total=   0.0s\n[CV] knn_clf__n_neighbors=10, pca__n_components=8 ....................\n[CV]  knn_clf__n_neighbors=10, pca__n_components=8, score=0.800, total=   0.0s\n[CV] knn_clf__n_neighbors=10, pca__n_components=8 ....................\n[CV]  knn_clf__n_neighbors=10, pca__n_components=8, score=0.850, total=   0.0s\n[CV] knn_clf__n_neighbors=10, pca__n_components=8 ....................\n[CV]  knn_clf__n_neighbors=10, pca__n_components=8, score=0.848, total=   0.0s\n[CV] knn_clf__n_neighbors=10, pca__n_components=8 ....................\n[CV]  knn_clf__n_neighbors=10, pca__n_components=8, score=0.772, total=   0.0s\n[CV] knn_clf__n_neighbors=10, pca__n_components=9 ....................\n[CV]  knn_clf__n_neighbors=10, pca__n_components=9, score=0.840, total=   0.0s\n[CV] knn_clf__n_neighbors=10, pca__n_components=9 ....................\n[CV]  knn_clf__n_neighbors=10, pca__n_components=9, score=0.827, total=   0.0s\n[CV] knn_clf__n_neighbors=10, pca__n_components=9 ....................\n[CV]  knn_clf__n_neighbors=10, pca__n_components=9, score=0.825, total=   0.0s\n[CV] knn_clf__n_neighbors=10, pca__n_components=9 ....................\n[CV]  knn_clf__n_neighbors=10, pca__n_components=9, score=0.875, total=   0.0s\n[CV] knn_clf__n_neighbors=10, pca__n_components=9 ....................\n[CV]  knn_clf__n_neighbors=10, pca__n_components=9, score=0.850, total=   0.0s\n[CV] knn_clf__n_neighbors=10, pca__n_components=9 ....................\n[CV]  knn_clf__n_neighbors=10, pca__n_components=9, score=0.863, total=   0.0s\n[CV] knn_clf__n_neighbors=10, pca__n_components=9 ....................\n[CV]  knn_clf__n_neighbors=10, pca__n_components=9, score=0.787, total=   0.0s\n[CV] knn_clf__n_neighbors=10, pca__n_components=9 ....................\n[CV]  knn_clf__n_neighbors=10, pca__n_components=9, score=0.825, total=   0.0s\n[CV] knn_clf__n_neighbors=10, pca__n_components=9 ....................\n[CV]  knn_clf__n_neighbors=10, pca__n_components=9, score=0.861, total=   0.0s\n[CV] knn_clf__n_neighbors=10, pca__n_components=9 ....................\n[CV]  knn_clf__n_neighbors=10, pca__n_components=9, score=0.797, total=   0.0s\n[CV] knn_clf__n_neighbors=11, pca__n_components=1 ....................\n[CV]  knn_clf__n_neighbors=11, pca__n_components=1, score=0.790, total=   0.0s\n[CV] knn_clf__n_neighbors=11, pca__n_components=1 ....................\n[CV]  knn_clf__n_neighbors=11, pca__n_components=1, score=0.741, total=   0.0s\n[CV] knn_clf__n_neighbors=11, pca__n_components=1 ....................\n[CV]  knn_clf__n_neighbors=11, pca__n_components=1, score=0.738, total=   0.0s\n[CV] knn_clf__n_neighbors=11, pca__n_components=1 ....................\n\n\n[CV]  knn_clf__n_neighbors=11, pca__n_components=1, score=0.725, total=   0.0s\n[CV] knn_clf__n_neighbors=11, pca__n_components=1 ....................\n[CV]  knn_clf__n_neighbors=11, pca__n_components=1, score=0.800, total=   0.0s\n[CV] knn_clf__n_neighbors=11, pca__n_components=1 ....................\n[CV]  knn_clf__n_neighbors=11, pca__n_components=1, score=0.750, total=   0.0s\n[CV] knn_clf__n_neighbors=11, pca__n_components=1 ....................\n[CV]  knn_clf__n_neighbors=11, pca__n_components=1, score=0.787, total=   0.0s\n[CV] knn_clf__n_neighbors=11, pca__n_components=1 ....................\n[CV]  knn_clf__n_neighbors=11, pca__n_components=1, score=0.700, total=   0.0s\n[CV] knn_clf__n_neighbors=11, pca__n_components=1 ....................\n[CV]  knn_clf__n_neighbors=11, pca__n_components=1, score=0.835, total=   0.0s\n[CV] knn_clf__n_neighbors=11, pca__n_components=1 ....................\n[CV]  knn_clf__n_neighbors=11, pca__n_components=1, score=0.759, total=   0.0s\n[CV] knn_clf__n_neighbors=11, pca__n_components=2 ....................\n[CV]  knn_clf__n_neighbors=11, pca__n_components=2, score=0.901, total=   0.0s\n[CV] knn_clf__n_neighbors=11, pca__n_components=2 ....................\n[CV]  knn_clf__n_neighbors=11, pca__n_components=2, score=0.926, total=   0.0s\n[CV] knn_clf__n_neighbors=11, pca__n_components=2 ....................\n[CV]  knn_clf__n_neighbors=11, pca__n_components=2, score=0.875, total=   0.0s\n[CV] knn_clf__n_neighbors=11, pca__n_components=2 ....................\n[CV]  knn_clf__n_neighbors=11, pca__n_components=2, score=0.925, total=   0.0s\n[CV] knn_clf__n_neighbors=11, pca__n_components=2 ....................\n[CV]  knn_clf__n_neighbors=11, pca__n_components=2, score=0.950, total=   0.0s\n[CV] knn_clf__n_neighbors=11, pca__n_components=2 ....................\n[CV]  knn_clf__n_neighbors=11, pca__n_components=2, score=0.925, total=   0.0s\n[CV] knn_clf__n_neighbors=11, pca__n_components=2 ....................\n[CV]  knn_clf__n_neighbors=11, pca__n_components=2, score=0.925, total=   0.0s\n[CV] knn_clf__n_neighbors=11, pca__n_components=2 ....................\n[CV]  knn_clf__n_neighbors=11, pca__n_components=2, score=0.863, total=   0.0s\n[CV] knn_clf__n_neighbors=11, pca__n_components=2 ....................\n[CV]  knn_clf__n_neighbors=11, pca__n_components=2, score=0.848, total=   0.0s\n[CV] knn_clf__n_neighbors=11, pca__n_components=2 ....................\n[CV]  knn_clf__n_neighbors=11, pca__n_components=2, score=0.911, total=   0.0s\n[CV] knn_clf__n_neighbors=11, pca__n_components=3 ....................\n[CV]  knn_clf__n_neighbors=11, pca__n_components=3, score=0.901, total=   0.0s\n[CV] knn_clf__n_neighbors=11, pca__n_components=3 ....................\n[CV]  knn_clf__n_neighbors=11, pca__n_components=3, score=0.889, total=   0.0s\n[CV] knn_clf__n_neighbors=11, pca__n_components=3 ....................\n[CV]  knn_clf__n_neighbors=11, pca__n_components=3, score=0.925, total=   0.0s\n[CV] knn_clf__n_neighbors=11, pca__n_components=3 ....................\n[CV]  knn_clf__n_neighbors=11, pca__n_components=3, score=0.875, total=   0.0s\n[CV] knn_clf__n_neighbors=11, pca__n_components=3 ....................\n[CV]  knn_clf__n_neighbors=11, pca__n_components=3, score=0.912, total=   0.0s\n[CV] knn_clf__n_neighbors=11, pca__n_components=3 ....................\n[CV]  knn_clf__n_neighbors=11, pca__n_components=3, score=0.912, total=   0.0s\n[CV] knn_clf__n_neighbors=11, pca__n_components=3 ....................\n[CV]  knn_clf__n_neighbors=11, pca__n_components=3, score=0.900, total=   0.0s\n[CV] knn_clf__n_neighbors=11, pca__n_components=3 ....................\n[CV]  knn_clf__n_neighbors=11, pca__n_components=3, score=0.812, total=   0.0s\n[CV] knn_clf__n_neighbors=11, pca__n_components=3 ....................\n[CV]  knn_clf__n_neighbors=11, pca__n_components=3, score=0.873, total=   0.0s\n[CV] knn_clf__n_neighbors=11, pca__n_components=3 ....................\n[CV]  knn_clf__n_neighbors=11, pca__n_components=3, score=0.873, total=   0.0s\n[CV] knn_clf__n_neighbors=11, pca__n_components=4 ....................\n[CV]  knn_clf__n_neighbors=11, pca__n_components=4, score=0.889, total=   0.0s\n[CV] knn_clf__n_neighbors=11, pca__n_components=4 ....................\n[CV]  knn_clf__n_neighbors=11, pca__n_components=4, score=0.877, total=   0.0s\n[CV] knn_clf__n_neighbors=11, pca__n_components=4 ....................\n[CV]  knn_clf__n_neighbors=11, pca__n_components=4, score=0.875, total=   0.0s\n[CV] knn_clf__n_neighbors=11, pca__n_components=4 ....................\n[CV]  knn_clf__n_neighbors=11, pca__n_components=4, score=0.863, total=   0.0s\n[CV] knn_clf__n_neighbors=11, pca__n_components=4 ....................\n[CV]  knn_clf__n_neighbors=11, pca__n_components=4, score=0.887, total=   0.0s\n[CV] knn_clf__n_neighbors=11, pca__n_components=4 ....................\n[CV]  knn_clf__n_neighbors=11, pca__n_components=4, score=0.925, total=   0.0s\n[CV] knn_clf__n_neighbors=11, pca__n_components=4 ....................\n[CV]  knn_clf__n_neighbors=11, pca__n_components=4, score=0.900, total=   0.0s\n[CV] knn_clf__n_neighbors=11, pca__n_components=4 ....................\n[CV]  knn_clf__n_neighbors=11, pca__n_components=4, score=0.838, total=   0.0s\n[CV] knn_clf__n_neighbors=11, pca__n_components=4 ....................\n[CV]  knn_clf__n_neighbors=11, pca__n_components=4, score=0.861, total=   0.0s\n[CV] knn_clf__n_neighbors=11, pca__n_components=4 ....................\n[CV]  knn_clf__n_neighbors=11, pca__n_components=4, score=0.823, total=   0.0s\n[CV] knn_clf__n_neighbors=11, pca__n_components=5 ....................\n[CV]  knn_clf__n_neighbors=11, pca__n_components=5, score=0.840, total=   0.0s\n[CV] knn_clf__n_neighbors=11, pca__n_components=5 ....................\n[CV]  knn_clf__n_neighbors=11, pca__n_components=5, score=0.864, total=   0.0s\n[CV] knn_clf__n_neighbors=11, pca__n_components=5 ....................\n[CV]  knn_clf__n_neighbors=11, pca__n_components=5, score=0.887, total=   0.0s\n[CV] knn_clf__n_neighbors=11, pca__n_components=5 ....................\n[CV]  knn_clf__n_neighbors=11, pca__n_components=5, score=0.863, total=   0.0s\n[CV] knn_clf__n_neighbors=11, pca__n_components=5 ....................\n[CV]  knn_clf__n_neighbors=11, pca__n_components=5, score=0.887, total=   0.0s\n[CV] knn_clf__n_neighbors=11, pca__n_components=5 ....................\n[CV]  knn_clf__n_neighbors=11, pca__n_components=5, score=0.887, total=   0.0s\n[CV] knn_clf__n_neighbors=11, pca__n_components=5 ....................\n[CV]  knn_clf__n_neighbors=11, pca__n_components=5, score=0.863, total=   0.0s\n[CV] knn_clf__n_neighbors=11, pca__n_components=5 ....................\n[CV]  knn_clf__n_neighbors=11, pca__n_components=5, score=0.825, total=   0.0s\n[CV] knn_clf__n_neighbors=11, pca__n_components=5 ....................\n[CV]  knn_clf__n_neighbors=11, pca__n_components=5, score=0.835, total=   0.0s\n[CV] knn_clf__n_neighbors=11, pca__n_components=5 ....................\n[CV]  knn_clf__n_neighbors=11, pca__n_components=5, score=0.835, total=   0.0s\n[CV] knn_clf__n_neighbors=11, pca__n_components=6 ....................\n[CV]  knn_clf__n_neighbors=11, pca__n_components=6, score=0.877, total=   0.0s\n[CV] knn_clf__n_neighbors=11, pca__n_components=6 ....................\n[CV]  knn_clf__n_neighbors=11, pca__n_components=6, score=0.815, total=   0.0s\n[CV] knn_clf__n_neighbors=11, pca__n_components=6 ....................\n[CV]  knn_clf__n_neighbors=11, pca__n_components=6, score=0.838, total=   0.0s\n[CV] knn_clf__n_neighbors=11, pca__n_components=6 ....................\n[CV]  knn_clf__n_neighbors=11, pca__n_components=6, score=0.875, total=   0.0s\n[CV] knn_clf__n_neighbors=11, pca__n_components=6 ....................\n[CV]  knn_clf__n_neighbors=11, pca__n_components=6, score=0.863, total=   0.0s\n[CV] knn_clf__n_neighbors=11, pca__n_components=6 ....................\n[CV]  knn_clf__n_neighbors=11, pca__n_components=6, score=0.887, total=   0.0s\n[CV] knn_clf__n_neighbors=11, pca__n_components=6 ....................\n[CV]  knn_clf__n_neighbors=11, pca__n_components=6, score=0.863, total=   0.0s\n[CV] knn_clf__n_neighbors=11, pca__n_components=6 ....................\n[CV]  knn_clf__n_neighbors=11, pca__n_components=6, score=0.812, total=   0.0s\n[CV] knn_clf__n_neighbors=11, pca__n_components=6 ....................\n[CV]  knn_clf__n_neighbors=11, pca__n_components=6, score=0.873, total=   0.0s\n[CV] knn_clf__n_neighbors=11, pca__n_components=6 ....................\n[CV]  knn_clf__n_neighbors=11, pca__n_components=6, score=0.835, total=   0.0s\n[CV] knn_clf__n_neighbors=11, pca__n_components=7 ....................\n\n\n[CV]  knn_clf__n_neighbors=11, pca__n_components=7, score=0.864, total=   0.0s\n[CV] knn_clf__n_neighbors=11, pca__n_components=7 ....................\n[CV]  knn_clf__n_neighbors=11, pca__n_components=7, score=0.827, total=   0.0s\n[CV] knn_clf__n_neighbors=11, pca__n_components=7 ....................\n[CV]  knn_clf__n_neighbors=11, pca__n_components=7, score=0.875, total=   0.0s\n[CV] knn_clf__n_neighbors=11, pca__n_components=7 ....................\n[CV]  knn_clf__n_neighbors=11, pca__n_components=7, score=0.887, total=   0.0s\n[CV] knn_clf__n_neighbors=11, pca__n_components=7 ....................\n[CV]  knn_clf__n_neighbors=11, pca__n_components=7, score=0.900, total=   0.0s\n[CV] knn_clf__n_neighbors=11, pca__n_components=7 ....................\n[CV]  knn_clf__n_neighbors=11, pca__n_components=7, score=0.850, total=   0.0s\n[CV] knn_clf__n_neighbors=11, pca__n_components=7 ....................\n[CV]  knn_clf__n_neighbors=11, pca__n_components=7, score=0.838, total=   0.0s\n[CV] knn_clf__n_neighbors=11, pca__n_components=7 ....................\n[CV]  knn_clf__n_neighbors=11, pca__n_components=7, score=0.812, total=   0.0s\n[CV] knn_clf__n_neighbors=11, pca__n_components=7 ....................\n[CV]  knn_clf__n_neighbors=11, pca__n_components=7, score=0.835, total=   0.0s\n[CV] knn_clf__n_neighbors=11, pca__n_components=7 ....................\n[CV]  knn_clf__n_neighbors=11, pca__n_components=7, score=0.785, total=   0.0s\n[CV] knn_clf__n_neighbors=11, pca__n_components=8 ....................\n[CV]  knn_clf__n_neighbors=11, pca__n_components=8, score=0.889, total=   0.0s\n[CV] knn_clf__n_neighbors=11, pca__n_components=8 ....................\n[CV]  knn_clf__n_neighbors=11, pca__n_components=8, score=0.827, total=   0.0s\n[CV] knn_clf__n_neighbors=11, pca__n_components=8 ....................\n[CV]  knn_clf__n_neighbors=11, pca__n_components=8, score=0.812, total=   0.0s\n[CV] knn_clf__n_neighbors=11, pca__n_components=8 ....................\n[CV]  knn_clf__n_neighbors=11, pca__n_components=8, score=0.900, total=   0.0s\n[CV] knn_clf__n_neighbors=11, pca__n_components=8 ....................\n[CV]  knn_clf__n_neighbors=11, pca__n_components=8, score=0.900, total=   0.0s\n[CV] knn_clf__n_neighbors=11, pca__n_components=8 ....................\n[CV]  knn_clf__n_neighbors=11, pca__n_components=8, score=0.875, total=   0.0s\n[CV] knn_clf__n_neighbors=11, pca__n_components=8 ....................\n[CV]  knn_clf__n_neighbors=11, pca__n_components=8, score=0.825, total=   0.0s\n[CV] knn_clf__n_neighbors=11, pca__n_components=8 ....................\n[CV]  knn_clf__n_neighbors=11, pca__n_components=8, score=0.850, total=   0.0s\n[CV] knn_clf__n_neighbors=11, pca__n_components=8 ....................\n[CV]  knn_clf__n_neighbors=11, pca__n_components=8, score=0.861, total=   0.0s\n[CV] knn_clf__n_neighbors=11, pca__n_components=8 ....................\n[CV]  knn_clf__n_neighbors=11, pca__n_components=8, score=0.835, total=   0.0s\n[CV] knn_clf__n_neighbors=11, pca__n_components=9 ....................\n[CV]  knn_clf__n_neighbors=11, pca__n_components=9, score=0.864, total=   0.0s\n[CV] knn_clf__n_neighbors=11, pca__n_components=9 ....................\n[CV]  knn_clf__n_neighbors=11, pca__n_components=9, score=0.815, total=   0.0s\n[CV] knn_clf__n_neighbors=11, pca__n_components=9 ....................\n[CV]  knn_clf__n_neighbors=11, pca__n_components=9, score=0.825, total=   0.0s\n[CV] knn_clf__n_neighbors=11, pca__n_components=9 ....................\n[CV]  knn_clf__n_neighbors=11, pca__n_components=9, score=0.875, total=   0.0s\n[CV] knn_clf__n_neighbors=11, pca__n_components=9 ....................\n[CV]  knn_clf__n_neighbors=11, pca__n_components=9, score=0.875, total=   0.0s\n[CV] knn_clf__n_neighbors=11, pca__n_components=9 ....................\n[CV]  knn_clf__n_neighbors=11, pca__n_components=9, score=0.838, total=   0.0s\n[CV] knn_clf__n_neighbors=11, pca__n_components=9 ....................\n[CV]  knn_clf__n_neighbors=11, pca__n_components=9, score=0.800, total=   0.0s\n[CV] knn_clf__n_neighbors=11, pca__n_components=9 ....................\n[CV]  knn_clf__n_neighbors=11, pca__n_components=9, score=0.863, total=   0.0s\n[CV] knn_clf__n_neighbors=11, pca__n_components=9 ....................\n[CV]  knn_clf__n_neighbors=11, pca__n_components=9, score=0.835, total=   0.0s\n[CV] knn_clf__n_neighbors=11, pca__n_components=9 ....................\n[CV]  knn_clf__n_neighbors=11, pca__n_components=9, score=0.835, total=   0.0s\n[CV] knn_clf__n_neighbors=12, pca__n_components=1 ....................\n[CV]  knn_clf__n_neighbors=12, pca__n_components=1, score=0.790, total=   0.0s\n[CV] knn_clf__n_neighbors=12, pca__n_components=1 ....................\n[CV]  knn_clf__n_neighbors=12, pca__n_components=1, score=0.778, total=   0.0s\n[CV] knn_clf__n_neighbors=12, pca__n_components=1 ....................\n[CV]  knn_clf__n_neighbors=12, pca__n_components=1, score=0.738, total=   0.0s\n[CV] knn_clf__n_neighbors=12, pca__n_components=1 ....................\n[CV]  knn_clf__n_neighbors=12, pca__n_components=1, score=0.725, total=   0.0s\n[CV] knn_clf__n_neighbors=12, pca__n_components=1 ....................\n[CV]  knn_clf__n_neighbors=12, pca__n_components=1, score=0.825, total=   0.0s\n[CV] knn_clf__n_neighbors=12, pca__n_components=1 ....................\n[CV]  knn_clf__n_neighbors=12, pca__n_components=1, score=0.750, total=   0.0s\n[CV] knn_clf__n_neighbors=12, pca__n_components=1 ....................\n[CV]  knn_clf__n_neighbors=12, pca__n_components=1, score=0.825, total=   0.0s\n[CV] knn_clf__n_neighbors=12, pca__n_components=1 ....................\n[CV]  knn_clf__n_neighbors=12, pca__n_components=1, score=0.725, total=   0.0s\n[CV] knn_clf__n_neighbors=12, pca__n_components=1 ....................\n[CV]  knn_clf__n_neighbors=12, pca__n_components=1, score=0.835, total=   0.0s\n[CV] knn_clf__n_neighbors=12, pca__n_components=1 ....................\n[CV]  knn_clf__n_neighbors=12, pca__n_components=1, score=0.759, total=   0.0s\n[CV] knn_clf__n_neighbors=12, pca__n_components=2 ....................\n[CV]  knn_clf__n_neighbors=12, pca__n_components=2, score=0.877, total=   0.0s\n[CV] knn_clf__n_neighbors=12, pca__n_components=2 ....................\n[CV]  knn_clf__n_neighbors=12, pca__n_components=2, score=0.926, total=   0.0s\n[CV] knn_clf__n_neighbors=12, pca__n_components=2 ....................\n[CV]  knn_clf__n_neighbors=12, pca__n_components=2, score=0.875, total=   0.0s\n[CV] knn_clf__n_neighbors=12, pca__n_components=2 ....................\n[CV]  knn_clf__n_neighbors=12, pca__n_components=2, score=0.925, total=   0.0s\n[CV] knn_clf__n_neighbors=12, pca__n_components=2 ....................\n[CV]  knn_clf__n_neighbors=12, pca__n_components=2, score=0.938, total=   0.0s\n[CV] knn_clf__n_neighbors=12, pca__n_components=2 ....................\n[CV]  knn_clf__n_neighbors=12, pca__n_components=2, score=0.912, total=   0.0s\n[CV] knn_clf__n_neighbors=12, pca__n_components=2 ....................\n[CV]  knn_clf__n_neighbors=12, pca__n_components=2, score=0.912, total=   0.0s\n[CV] knn_clf__n_neighbors=12, pca__n_components=2 ....................\n[CV]  knn_clf__n_neighbors=12, pca__n_components=2, score=0.863, total=   0.0s\n[CV] knn_clf__n_neighbors=12, pca__n_components=2 ....................\n[CV]  knn_clf__n_neighbors=12, pca__n_components=2, score=0.848, total=   0.0s\n[CV] knn_clf__n_neighbors=12, pca__n_components=2 ....................\n[CV]  knn_clf__n_neighbors=12, pca__n_components=2, score=0.899, total=   0.0s\n[CV] knn_clf__n_neighbors=12, pca__n_components=3 ....................\n[CV]  knn_clf__n_neighbors=12, pca__n_components=3, score=0.877, total=   0.0s\n[CV] knn_clf__n_neighbors=12, pca__n_components=3 ....................\n[CV]  knn_clf__n_neighbors=12, pca__n_components=3, score=0.889, total=   0.0s\n[CV] knn_clf__n_neighbors=12, pca__n_components=3 ....................\n[CV]  knn_clf__n_neighbors=12, pca__n_components=3, score=0.925, total=   0.0s\n[CV] knn_clf__n_neighbors=12, pca__n_components=3 ....................\n[CV]  knn_clf__n_neighbors=12, pca__n_components=3, score=0.887, total=   0.0s\n[CV] knn_clf__n_neighbors=12, pca__n_components=3 ....................\n[CV]  knn_clf__n_neighbors=12, pca__n_components=3, score=0.950, total=   0.0s\n[CV] knn_clf__n_neighbors=12, pca__n_components=3 ....................\n[CV]  knn_clf__n_neighbors=12, pca__n_components=3, score=0.912, total=   0.0s\n[CV] knn_clf__n_neighbors=12, pca__n_components=3 ....................\n[CV]  knn_clf__n_neighbors=12, pca__n_components=3, score=0.875, total=   0.0s\n[CV] knn_clf__n_neighbors=12, pca__n_components=3 ....................\n[CV]  knn_clf__n_neighbors=12, pca__n_components=3, score=0.825, total=   0.0s\n[CV] knn_clf__n_neighbors=12, pca__n_components=3 ....................\n\n\n[CV]  knn_clf__n_neighbors=12, pca__n_components=3, score=0.873, total=   0.0s\n[CV] knn_clf__n_neighbors=12, pca__n_components=3 ....................\n[CV]  knn_clf__n_neighbors=12, pca__n_components=3, score=0.848, total=   0.0s\n[CV] knn_clf__n_neighbors=12, pca__n_components=4 ....................\n[CV]  knn_clf__n_neighbors=12, pca__n_components=4, score=0.901, total=   0.0s\n[CV] knn_clf__n_neighbors=12, pca__n_components=4 ....................\n[CV]  knn_clf__n_neighbors=12, pca__n_components=4, score=0.877, total=   0.0s\n[CV] knn_clf__n_neighbors=12, pca__n_components=4 ....................\n[CV]  knn_clf__n_neighbors=12, pca__n_components=4, score=0.887, total=   0.0s\n[CV] knn_clf__n_neighbors=12, pca__n_components=4 ....................\n[CV]  knn_clf__n_neighbors=12, pca__n_components=4, score=0.850, total=   0.0s\n[CV] knn_clf__n_neighbors=12, pca__n_components=4 ....................\n[CV]  knn_clf__n_neighbors=12, pca__n_components=4, score=0.887, total=   0.0s\n[CV] knn_clf__n_neighbors=12, pca__n_components=4 ....................\n[CV]  knn_clf__n_neighbors=12, pca__n_components=4, score=0.900, total=   0.0s\n[CV] knn_clf__n_neighbors=12, pca__n_components=4 ....................\n[CV]  knn_clf__n_neighbors=12, pca__n_components=4, score=0.887, total=   0.0s\n[CV] knn_clf__n_neighbors=12, pca__n_components=4 ....................\n[CV]  knn_clf__n_neighbors=12, pca__n_components=4, score=0.800, total=   0.0s\n[CV] knn_clf__n_neighbors=12, pca__n_components=4 ....................\n[CV]  knn_clf__n_neighbors=12, pca__n_components=4, score=0.886, total=   0.0s\n[CV] knn_clf__n_neighbors=12, pca__n_components=4 ....................\n[CV]  knn_clf__n_neighbors=12, pca__n_components=4, score=0.810, total=   0.0s\n[CV] knn_clf__n_neighbors=12, pca__n_components=5 ....................\n[CV]  knn_clf__n_neighbors=12, pca__n_components=5, score=0.852, total=   0.0s\n[CV] knn_clf__n_neighbors=12, pca__n_components=5 ....................\n[CV]  knn_clf__n_neighbors=12, pca__n_components=5, score=0.864, total=   0.0s\n[CV] knn_clf__n_neighbors=12, pca__n_components=5 ....................\n[CV]  knn_clf__n_neighbors=12, pca__n_components=5, score=0.850, total=   0.0s\n[CV] knn_clf__n_neighbors=12, pca__n_components=5 ....................\n[CV]  knn_clf__n_neighbors=12, pca__n_components=5, score=0.875, total=   0.0s\n[CV] knn_clf__n_neighbors=12, pca__n_components=5 ....................\n[CV]  knn_clf__n_neighbors=12, pca__n_components=5, score=0.887, total=   0.0s\n[CV] knn_clf__n_neighbors=12, pca__n_components=5 ....................\n[CV]  knn_clf__n_neighbors=12, pca__n_components=5, score=0.850, total=   0.0s\n[CV] knn_clf__n_neighbors=12, pca__n_components=5 ....................\n[CV]  knn_clf__n_neighbors=12, pca__n_components=5, score=0.900, total=   0.0s\n[CV] knn_clf__n_neighbors=12, pca__n_components=5 ....................\n[CV]  knn_clf__n_neighbors=12, pca__n_components=5, score=0.825, total=   0.0s\n[CV] knn_clf__n_neighbors=12, pca__n_components=5 ....................\n[CV]  knn_clf__n_neighbors=12, pca__n_components=5, score=0.873, total=   0.0s\n[CV] knn_clf__n_neighbors=12, pca__n_components=5 ....................\n[CV]  knn_clf__n_neighbors=12, pca__n_components=5, score=0.848, total=   0.0s\n[CV] knn_clf__n_neighbors=12, pca__n_components=6 ....................\n[CV]  knn_clf__n_neighbors=12, pca__n_components=6, score=0.889, total=   0.0s\n[CV] knn_clf__n_neighbors=12, pca__n_components=6 ....................\n[CV]  knn_clf__n_neighbors=12, pca__n_components=6, score=0.815, total=   0.0s\n[CV] knn_clf__n_neighbors=12, pca__n_components=6 ....................\n[CV]  knn_clf__n_neighbors=12, pca__n_components=6, score=0.812, total=   0.0s\n[CV] knn_clf__n_neighbors=12, pca__n_components=6 ....................\n[CV]  knn_clf__n_neighbors=12, pca__n_components=6, score=0.850, total=   0.0s\n[CV] knn_clf__n_neighbors=12, pca__n_components=6 ....................\n[CV]  knn_clf__n_neighbors=12, pca__n_components=6, score=0.912, total=   0.0s\n[CV] knn_clf__n_neighbors=12, pca__n_components=6 ....................\n[CV]  knn_clf__n_neighbors=12, pca__n_components=6, score=0.887, total=   0.0s\n[CV] knn_clf__n_neighbors=12, pca__n_components=6 ....................\n[CV]  knn_clf__n_neighbors=12, pca__n_components=6, score=0.825, total=   0.0s\n[CV] knn_clf__n_neighbors=12, pca__n_components=6 ....................\n[CV]  knn_clf__n_neighbors=12, pca__n_components=6, score=0.800, total=   0.0s\n[CV] knn_clf__n_neighbors=12, pca__n_components=6 ....................\n[CV]  knn_clf__n_neighbors=12, pca__n_components=6, score=0.886, total=   0.0s\n[CV] knn_clf__n_neighbors=12, pca__n_components=6 ....................\n[CV]  knn_clf__n_neighbors=12, pca__n_components=6, score=0.835, total=   0.0s\n[CV] knn_clf__n_neighbors=12, pca__n_components=7 ....................\n[CV]  knn_clf__n_neighbors=12, pca__n_components=7, score=0.877, total=   0.0s\n[CV] knn_clf__n_neighbors=12, pca__n_components=7 ....................\n[CV]  knn_clf__n_neighbors=12, pca__n_components=7, score=0.840, total=   0.0s\n[CV] knn_clf__n_neighbors=12, pca__n_components=7 ....................\n[CV]  knn_clf__n_neighbors=12, pca__n_components=7, score=0.875, total=   0.0s\n[CV] knn_clf__n_neighbors=12, pca__n_components=7 ....................\n[CV]  knn_clf__n_neighbors=12, pca__n_components=7, score=0.875, total=   0.0s\n[CV] knn_clf__n_neighbors=12, pca__n_components=7 ....................\n[CV]  knn_clf__n_neighbors=12, pca__n_components=7, score=0.875, total=   0.0s\n[CV] knn_clf__n_neighbors=12, pca__n_components=7 ....................\n[CV]  knn_clf__n_neighbors=12, pca__n_components=7, score=0.887, total=   0.0s\n[CV] knn_clf__n_neighbors=12, pca__n_components=7 ....................\n[CV]  knn_clf__n_neighbors=12, pca__n_components=7, score=0.825, total=   0.0s\n[CV] knn_clf__n_neighbors=12, pca__n_components=7 ....................\n[CV]  knn_clf__n_neighbors=12, pca__n_components=7, score=0.812, total=   0.0s\n[CV] knn_clf__n_neighbors=12, pca__n_components=7 ....................\n[CV]  knn_clf__n_neighbors=12, pca__n_components=7, score=0.861, total=   0.0s\n[CV] knn_clf__n_neighbors=12, pca__n_components=7 ....................\n[CV]  knn_clf__n_neighbors=12, pca__n_components=7, score=0.759, total=   0.0s\n[CV] knn_clf__n_neighbors=12, pca__n_components=8 ....................\n[CV]  knn_clf__n_neighbors=12, pca__n_components=8, score=0.889, total=   0.0s\n[CV] knn_clf__n_neighbors=12, pca__n_components=8 ....................\n[CV]  knn_clf__n_neighbors=12, pca__n_components=8, score=0.815, total=   0.0s\n[CV] knn_clf__n_neighbors=12, pca__n_components=8 ....................\n[CV]  knn_clf__n_neighbors=12, pca__n_components=8, score=0.800, total=   0.0s\n[CV] knn_clf__n_neighbors=12, pca__n_components=8 ....................\n[CV]  knn_clf__n_neighbors=12, pca__n_components=8, score=0.863, total=   0.0s\n[CV] knn_clf__n_neighbors=12, pca__n_components=8 ....................\n[CV]  knn_clf__n_neighbors=12, pca__n_components=8, score=0.887, total=   0.0s\n[CV] knn_clf__n_neighbors=12, pca__n_components=8 ....................\n[CV]  knn_clf__n_neighbors=12, pca__n_components=8, score=0.838, total=   0.0s\n[CV] knn_clf__n_neighbors=12, pca__n_components=8 ....................\n[CV]  knn_clf__n_neighbors=12, pca__n_components=8, score=0.825, total=   0.0s\n[CV] knn_clf__n_neighbors=12, pca__n_components=8 ....................\n[CV]  knn_clf__n_neighbors=12, pca__n_components=8, score=0.838, total=   0.0s\n[CV] knn_clf__n_neighbors=12, pca__n_components=8 ....................\n[CV]  knn_clf__n_neighbors=12, pca__n_components=8, score=0.848, total=   0.0s\n[CV] knn_clf__n_neighbors=12, pca__n_components=8 ....................\n[CV]  knn_clf__n_neighbors=12, pca__n_components=8, score=0.759, total=   0.0s\n[CV] knn_clf__n_neighbors=12, pca__n_components=9 ....................\n[CV]  knn_clf__n_neighbors=12, pca__n_components=9, score=0.864, total=   0.0s\n[CV] knn_clf__n_neighbors=12, pca__n_components=9 ....................\n[CV]  knn_clf__n_neighbors=12, pca__n_components=9, score=0.827, total=   0.0s\n[CV] knn_clf__n_neighbors=12, pca__n_components=9 ....................\n[CV]  knn_clf__n_neighbors=12, pca__n_components=9, score=0.812, total=   0.0s\n[CV] knn_clf__n_neighbors=12, pca__n_components=9 ....................\n\n\n[CV]  knn_clf__n_neighbors=12, pca__n_components=9, score=0.863, total=   0.0s\n[CV] knn_clf__n_neighbors=12, pca__n_components=9 ....................\n[CV]  knn_clf__n_neighbors=12, pca__n_components=9, score=0.875, total=   0.0s\n[CV] knn_clf__n_neighbors=12, pca__n_components=9 ....................\n[CV]  knn_clf__n_neighbors=12, pca__n_components=9, score=0.838, total=   0.0s\n[CV] knn_clf__n_neighbors=12, pca__n_components=9 ....................\n[CV]  knn_clf__n_neighbors=12, pca__n_components=9, score=0.812, total=   0.0s\n[CV] knn_clf__n_neighbors=12, pca__n_components=9 ....................\n[CV]  knn_clf__n_neighbors=12, pca__n_components=9, score=0.825, total=   0.0s\n[CV] knn_clf__n_neighbors=12, pca__n_components=9 ....................\n[CV]  knn_clf__n_neighbors=12, pca__n_components=9, score=0.861, total=   0.0s\n[CV] knn_clf__n_neighbors=12, pca__n_components=9 ....................\n[CV]  knn_clf__n_neighbors=12, pca__n_components=9, score=0.797, total=   0.0s\n[CV] knn_clf__n_neighbors=13, pca__n_components=1 ....................\n[CV]  knn_clf__n_neighbors=13, pca__n_components=1, score=0.802, total=   0.0s\n[CV] knn_clf__n_neighbors=13, pca__n_components=1 ....................\n[CV]  knn_clf__n_neighbors=13, pca__n_components=1, score=0.753, total=   0.0s\n[CV] knn_clf__n_neighbors=13, pca__n_components=1 ....................\n[CV]  knn_clf__n_neighbors=13, pca__n_components=1, score=0.738, total=   0.0s\n[CV] knn_clf__n_neighbors=13, pca__n_components=1 ....................\n[CV]  knn_clf__n_neighbors=13, pca__n_components=1, score=0.725, total=   0.0s\n[CV] knn_clf__n_neighbors=13, pca__n_components=1 ....................\n[CV]  knn_clf__n_neighbors=13, pca__n_components=1, score=0.812, total=   0.0s\n[CV] knn_clf__n_neighbors=13, pca__n_components=1 ....................\n[CV]  knn_clf__n_neighbors=13, pca__n_components=1, score=0.750, total=   0.0s\n[CV] knn_clf__n_neighbors=13, pca__n_components=1 ....................\n[CV]  knn_clf__n_neighbors=13, pca__n_components=1, score=0.800, total=   0.0s\n[CV] knn_clf__n_neighbors=13, pca__n_components=1 ....................\n[CV]  knn_clf__n_neighbors=13, pca__n_components=1, score=0.713, total=   0.0s\n[CV] knn_clf__n_neighbors=13, pca__n_components=1 ....................\n[CV]  knn_clf__n_neighbors=13, pca__n_components=1, score=0.848, total=   0.0s\n[CV] knn_clf__n_neighbors=13, pca__n_components=1 ....................\n[CV]  knn_clf__n_neighbors=13, pca__n_components=1, score=0.759, total=   0.0s\n[CV] knn_clf__n_neighbors=13, pca__n_components=2 ....................\n[CV]  knn_clf__n_neighbors=13, pca__n_components=2, score=0.889, total=   0.0s\n[CV] knn_clf__n_neighbors=13, pca__n_components=2 ....................\n[CV]  knn_clf__n_neighbors=13, pca__n_components=2, score=0.914, total=   0.0s\n[CV] knn_clf__n_neighbors=13, pca__n_components=2 ....................\n[CV]  knn_clf__n_neighbors=13, pca__n_components=2, score=0.875, total=   0.0s\n[CV] knn_clf__n_neighbors=13, pca__n_components=2 ....................\n[CV]  knn_clf__n_neighbors=13, pca__n_components=2, score=0.912, total=   0.0s\n[CV] knn_clf__n_neighbors=13, pca__n_components=2 ....................\n[CV]  knn_clf__n_neighbors=13, pca__n_components=2, score=0.950, total=   0.0s\n[CV] knn_clf__n_neighbors=13, pca__n_components=2 ....................\n[CV]  knn_clf__n_neighbors=13, pca__n_components=2, score=0.912, total=   0.0s\n[CV] knn_clf__n_neighbors=13, pca__n_components=2 ....................\n[CV]  knn_clf__n_neighbors=13, pca__n_components=2, score=0.925, total=   0.0s\n[CV] knn_clf__n_neighbors=13, pca__n_components=2 ....................\n[CV]  knn_clf__n_neighbors=13, pca__n_components=2, score=0.875, total=   0.0s\n[CV] knn_clf__n_neighbors=13, pca__n_components=2 ....................\n[CV]  knn_clf__n_neighbors=13, pca__n_components=2, score=0.848, total=   0.0s\n[CV] knn_clf__n_neighbors=13, pca__n_components=2 ....................\n[CV]  knn_clf__n_neighbors=13, pca__n_components=2, score=0.899, total=   0.0s\n[CV] knn_clf__n_neighbors=13, pca__n_components=3 ....................\n[CV]  knn_clf__n_neighbors=13, pca__n_components=3, score=0.889, total=   0.0s\n[CV] knn_clf__n_neighbors=13, pca__n_components=3 ....................\n[CV]  knn_clf__n_neighbors=13, pca__n_components=3, score=0.889, total=   0.0s\n[CV] knn_clf__n_neighbors=13, pca__n_components=3 ....................\n[CV]  knn_clf__n_neighbors=13, pca__n_components=3, score=0.912, total=   0.0s\n[CV] knn_clf__n_neighbors=13, pca__n_components=3 ....................\n[CV]  knn_clf__n_neighbors=13, pca__n_components=3, score=0.875, total=   0.0s\n[CV] knn_clf__n_neighbors=13, pca__n_components=3 ....................\n[CV]  knn_clf__n_neighbors=13, pca__n_components=3, score=0.938, total=   0.0s\n[CV] knn_clf__n_neighbors=13, pca__n_components=3 ....................\n[CV]  knn_clf__n_neighbors=13, pca__n_components=3, score=0.900, total=   0.0s\n[CV] knn_clf__n_neighbors=13, pca__n_components=3 ....................\n[CV]  knn_clf__n_neighbors=13, pca__n_components=3, score=0.875, total=   0.0s\n[CV] knn_clf__n_neighbors=13, pca__n_components=3 ....................\n[CV]  knn_clf__n_neighbors=13, pca__n_components=3, score=0.825, total=   0.0s\n[CV] knn_clf__n_neighbors=13, pca__n_components=3 ....................\n[CV]  knn_clf__n_neighbors=13, pca__n_components=3, score=0.873, total=   0.0s\n[CV] knn_clf__n_neighbors=13, pca__n_components=3 ....................\n[CV]  knn_clf__n_neighbors=13, pca__n_components=3, score=0.848, total=   0.0s\n[CV] knn_clf__n_neighbors=13, pca__n_components=4 ....................\n[CV]  knn_clf__n_neighbors=13, pca__n_components=4, score=0.889, total=   0.0s\n[CV] knn_clf__n_neighbors=13, pca__n_components=4 ....................\n[CV]  knn_clf__n_neighbors=13, pca__n_components=4, score=0.877, total=   0.0s\n[CV] knn_clf__n_neighbors=13, pca__n_components=4 ....................\n[CV]  knn_clf__n_neighbors=13, pca__n_components=4, score=0.912, total=   0.0s\n[CV] knn_clf__n_neighbors=13, pca__n_components=4 ....................\n[CV]  knn_clf__n_neighbors=13, pca__n_components=4, score=0.863, total=   0.0s\n[CV] knn_clf__n_neighbors=13, pca__n_components=4 ....................\n[CV]  knn_clf__n_neighbors=13, pca__n_components=4, score=0.887, total=   0.0s\n[CV] knn_clf__n_neighbors=13, pca__n_components=4 ....................\n[CV]  knn_clf__n_neighbors=13, pca__n_components=4, score=0.912, total=   0.0s\n[CV] knn_clf__n_neighbors=13, pca__n_components=4 ....................\n[CV]  knn_clf__n_neighbors=13, pca__n_components=4, score=0.887, total=   0.0s\n[CV] knn_clf__n_neighbors=13, pca__n_components=4 ....................\n[CV]  knn_clf__n_neighbors=13, pca__n_components=4, score=0.825, total=   0.0s\n[CV] knn_clf__n_neighbors=13, pca__n_components=4 ....................\n[CV]  knn_clf__n_neighbors=13, pca__n_components=4, score=0.886, total=   0.0s\n[CV] knn_clf__n_neighbors=13, pca__n_components=4 ....................\n[CV]  knn_clf__n_neighbors=13, pca__n_components=4, score=0.823, total=   0.0s\n[CV] knn_clf__n_neighbors=13, pca__n_components=5 ....................\n[CV]  knn_clf__n_neighbors=13, pca__n_components=5, score=0.864, total=   0.0s\n[CV] knn_clf__n_neighbors=13, pca__n_components=5 ....................\n[CV]  knn_clf__n_neighbors=13, pca__n_components=5, score=0.852, total=   0.0s\n[CV] knn_clf__n_neighbors=13, pca__n_components=5 ....................\n[CV]  knn_clf__n_neighbors=13, pca__n_components=5, score=0.887, total=   0.0s\n[CV] knn_clf__n_neighbors=13, pca__n_components=5 ....................\n[CV]  knn_clf__n_neighbors=13, pca__n_components=5, score=0.863, total=   0.0s\n[CV] knn_clf__n_neighbors=13, pca__n_components=5 ....................\n[CV]  knn_clf__n_neighbors=13, pca__n_components=5, score=0.900, total=   0.0s\n[CV] knn_clf__n_neighbors=13, pca__n_components=5 ....................\n[CV]  knn_clf__n_neighbors=13, pca__n_components=5, score=0.887, total=   0.0s\n[CV] knn_clf__n_neighbors=13, pca__n_components=5 ....................\n[CV]  knn_clf__n_neighbors=13, pca__n_components=5, score=0.912, total=   0.0s\n[CV] knn_clf__n_neighbors=13, pca__n_components=5 ....................\n[CV]  knn_clf__n_neighbors=13, pca__n_components=5, score=0.825, total=   0.0s\n[CV] knn_clf__n_neighbors=13, pca__n_components=5 ....................\n\n\n[CV]  knn_clf__n_neighbors=13, pca__n_components=5, score=0.848, total=   0.0s\n[CV] knn_clf__n_neighbors=13, pca__n_components=5 ....................\n[CV]  knn_clf__n_neighbors=13, pca__n_components=5, score=0.861, total=   0.0s\n[CV] knn_clf__n_neighbors=13, pca__n_components=6 ....................\n[CV]  knn_clf__n_neighbors=13, pca__n_components=6, score=0.877, total=   0.0s\n[CV] knn_clf__n_neighbors=13, pca__n_components=6 ....................\n[CV]  knn_clf__n_neighbors=13, pca__n_components=6, score=0.827, total=   0.0s\n[CV] knn_clf__n_neighbors=13, pca__n_components=6 ....................\n[CV]  knn_clf__n_neighbors=13, pca__n_components=6, score=0.825, total=   0.0s\n[CV] knn_clf__n_neighbors=13, pca__n_components=6 ....................\n[CV]  knn_clf__n_neighbors=13, pca__n_components=6, score=0.887, total=   0.0s\n[CV] knn_clf__n_neighbors=13, pca__n_components=6 ....................\n[CV]  knn_clf__n_neighbors=13, pca__n_components=6, score=0.875, total=   0.0s\n[CV] knn_clf__n_neighbors=13, pca__n_components=6 ....................\n[CV]  knn_clf__n_neighbors=13, pca__n_components=6, score=0.887, total=   0.0s\n[CV] knn_clf__n_neighbors=13, pca__n_components=6 ....................\n[CV]  knn_clf__n_neighbors=13, pca__n_components=6, score=0.850, total=   0.0s\n[CV] knn_clf__n_neighbors=13, pca__n_components=6 ....................\n[CV]  knn_clf__n_neighbors=13, pca__n_components=6, score=0.800, total=   0.0s\n[CV] knn_clf__n_neighbors=13, pca__n_components=6 ....................\n[CV]  knn_clf__n_neighbors=13, pca__n_components=6, score=0.873, total=   0.0s\n[CV] knn_clf__n_neighbors=13, pca__n_components=6 ....................\n[CV]  knn_clf__n_neighbors=13, pca__n_components=6, score=0.835, total=   0.0s\n[CV] knn_clf__n_neighbors=13, pca__n_components=7 ....................\n[CV]  knn_clf__n_neighbors=13, pca__n_components=7, score=0.877, total=   0.0s\n[CV] knn_clf__n_neighbors=13, pca__n_components=7 ....................\n[CV]  knn_clf__n_neighbors=13, pca__n_components=7, score=0.840, total=   0.0s\n[CV] knn_clf__n_neighbors=13, pca__n_components=7 ....................\n[CV]  knn_clf__n_neighbors=13, pca__n_components=7, score=0.875, total=   0.0s\n[CV] knn_clf__n_neighbors=13, pca__n_components=7 ....................\n[CV]  knn_clf__n_neighbors=13, pca__n_components=7, score=0.912, total=   0.0s\n[CV] knn_clf__n_neighbors=13, pca__n_components=7 ....................\n[CV]  knn_clf__n_neighbors=13, pca__n_components=7, score=0.887, total=   0.0s\n[CV] knn_clf__n_neighbors=13, pca__n_components=7 ....................\n[CV]  knn_clf__n_neighbors=13, pca__n_components=7, score=0.887, total=   0.0s\n[CV] knn_clf__n_neighbors=13, pca__n_components=7 ....................\n[CV]  knn_clf__n_neighbors=13, pca__n_components=7, score=0.850, total=   0.0s\n[CV] knn_clf__n_neighbors=13, pca__n_components=7 ....................\n[CV]  knn_clf__n_neighbors=13, pca__n_components=7, score=0.800, total=   0.0s\n[CV] knn_clf__n_neighbors=13, pca__n_components=7 ....................\n[CV]  knn_clf__n_neighbors=13, pca__n_components=7, score=0.848, total=   0.0s\n[CV] knn_clf__n_neighbors=13, pca__n_components=7 ....................\n[CV]  knn_clf__n_neighbors=13, pca__n_components=7, score=0.772, total=   0.0s\n[CV] knn_clf__n_neighbors=13, pca__n_components=8 ....................\n[CV]  knn_clf__n_neighbors=13, pca__n_components=8, score=0.889, total=   0.0s\n[CV] knn_clf__n_neighbors=13, pca__n_components=8 ....................\n[CV]  knn_clf__n_neighbors=13, pca__n_components=8, score=0.852, total=   0.0s\n[CV] knn_clf__n_neighbors=13, pca__n_components=8 ....................\n[CV]  knn_clf__n_neighbors=13, pca__n_components=8, score=0.838, total=   0.0s\n[CV] knn_clf__n_neighbors=13, pca__n_components=8 ....................\n[CV]  knn_clf__n_neighbors=13, pca__n_components=8, score=0.887, total=   0.0s\n[CV] knn_clf__n_neighbors=13, pca__n_components=8 ....................\n[CV]  knn_clf__n_neighbors=13, pca__n_components=8, score=0.912, total=   0.0s\n[CV] knn_clf__n_neighbors=13, pca__n_components=8 ....................\n[CV]  knn_clf__n_neighbors=13, pca__n_components=8, score=0.838, total=   0.0s\n[CV] knn_clf__n_neighbors=13, pca__n_components=8 ....................\n[CV]  knn_clf__n_neighbors=13, pca__n_components=8, score=0.825, total=   0.1s\n[CV] knn_clf__n_neighbors=13, pca__n_components=8 ....................\n[CV]  knn_clf__n_neighbors=13, pca__n_components=8, score=0.850, total=   0.0s\n[CV] knn_clf__n_neighbors=13, pca__n_components=8 ....................\n[CV]  knn_clf__n_neighbors=13, pca__n_components=8, score=0.848, total=   0.0s\n[CV] knn_clf__n_neighbors=13, pca__n_components=8 ....................\n[CV]  knn_clf__n_neighbors=13, pca__n_components=8, score=0.835, total=   0.0s\n[CV] knn_clf__n_neighbors=13, pca__n_components=9 ....................\n[CV]  knn_clf__n_neighbors=13, pca__n_components=9, score=0.864, total=   0.0s\n[CV] knn_clf__n_neighbors=13, pca__n_components=9 ....................\n[CV]  knn_clf__n_neighbors=13, pca__n_components=9, score=0.840, total=   0.0s\n[CV] knn_clf__n_neighbors=13, pca__n_components=9 ....................\n[CV]  knn_clf__n_neighbors=13, pca__n_components=9, score=0.850, total=   0.0s\n[CV] knn_clf__n_neighbors=13, pca__n_components=9 ....................\n[CV]  knn_clf__n_neighbors=13, pca__n_components=9, score=0.875, total=   0.0s\n[CV] knn_clf__n_neighbors=13, pca__n_components=9 ....................\n[CV]  knn_clf__n_neighbors=13, pca__n_components=9, score=0.887, total=   0.0s\n[CV] knn_clf__n_neighbors=13, pca__n_components=9 ....................\n[CV]  knn_clf__n_neighbors=13, pca__n_components=9, score=0.838, total=   0.1s\n[CV] knn_clf__n_neighbors=13, pca__n_components=9 ....................\n[CV]  knn_clf__n_neighbors=13, pca__n_components=9, score=0.800, total=   0.0s\n[CV] knn_clf__n_neighbors=13, pca__n_components=9 ....................\n[CV]  knn_clf__n_neighbors=13, pca__n_components=9, score=0.838, total=   0.0s\n[CV] knn_clf__n_neighbors=13, pca__n_components=9 ....................\n[CV]  knn_clf__n_neighbors=13, pca__n_components=9, score=0.848, total=   0.1s\n[CV] knn_clf__n_neighbors=13, pca__n_components=9 ....................\n[CV]  knn_clf__n_neighbors=13, pca__n_components=9, score=0.785, total=   0.0s\n[CV] knn_clf__n_neighbors=14, pca__n_components=1 ....................\n[CV]  knn_clf__n_neighbors=14, pca__n_components=1, score=0.827, total=   0.1s\n[CV] knn_clf__n_neighbors=14, pca__n_components=1 ....................\n[CV]  knn_clf__n_neighbors=14, pca__n_components=1, score=0.765, total=   0.1s\n[CV] knn_clf__n_neighbors=14, pca__n_components=1 ....................\n[CV]  knn_clf__n_neighbors=14, pca__n_components=1, score=0.738, total=   0.1s\n[CV] knn_clf__n_neighbors=14, pca__n_components=1 ....................\n[CV]  knn_clf__n_neighbors=14, pca__n_components=1, score=0.750, total=   0.0s\n[CV] knn_clf__n_neighbors=14, pca__n_components=1 ....................\n[CV]  knn_clf__n_neighbors=14, pca__n_components=1, score=0.812, total=   0.1s\n[CV] knn_clf__n_neighbors=14, pca__n_components=1 ....................\n[CV]  knn_clf__n_neighbors=14, pca__n_components=1, score=0.775, total=   0.1s\n[CV] knn_clf__n_neighbors=14, pca__n_components=1 ....................\n[CV]  knn_clf__n_neighbors=14, pca__n_components=1, score=0.825, total=   0.1s\n[CV] knn_clf__n_neighbors=14, pca__n_components=1 ....................\n[CV]  knn_clf__n_neighbors=14, pca__n_components=1, score=0.738, total=   0.1s\n[CV] knn_clf__n_neighbors=14, pca__n_components=1 ....................\n[CV]  knn_clf__n_neighbors=14, pca__n_components=1, score=0.823, total=   0.1s\n[CV] knn_clf__n_neighbors=14, pca__n_components=1 ....................\n[CV]  knn_clf__n_neighbors=14, pca__n_components=1, score=0.772, total=   0.1s\n[CV] knn_clf__n_neighbors=14, pca__n_components=2 ....................\n[CV]  knn_clf__n_neighbors=14, pca__n_components=2, score=0.877, total=   0.0s\n[CV] knn_clf__n_neighbors=14, pca__n_components=2 ....................\n[CV]  knn_clf__n_neighbors=14, pca__n_components=2, score=0.926, total=   0.0s\n[CV] knn_clf__n_neighbors=14, pca__n_components=2 ....................\n[CV]  knn_clf__n_neighbors=14, pca__n_components=2, score=0.875, total=   0.0s\n[CV] knn_clf__n_neighbors=14, pca__n_components=2 ....................\n[CV]  knn_clf__n_neighbors=14, pca__n_components=2, score=0.912, total=   0.0s\n[CV] knn_clf__n_neighbors=14, pca__n_components=2 ....................\n[CV]  knn_clf__n_neighbors=14, pca__n_components=2, score=0.950, total=   0.0s\n[CV] knn_clf__n_neighbors=14, pca__n_components=2 ....................\n[CV]  knn_clf__n_neighbors=14, pca__n_components=2, score=0.912, total=   0.0s\n[CV] knn_clf__n_neighbors=14, pca__n_components=2 ....................\n[CV]  knn_clf__n_neighbors=14, pca__n_components=2, score=0.900, total=   0.0s\n[CV] knn_clf__n_neighbors=14, pca__n_components=2 ....................\n\n\n[CV]  knn_clf__n_neighbors=14, pca__n_components=2, score=0.875, total=   0.0s\n[CV] knn_clf__n_neighbors=14, pca__n_components=2 ....................\n[CV]  knn_clf__n_neighbors=14, pca__n_components=2, score=0.861, total=   0.0s\n[CV] knn_clf__n_neighbors=14, pca__n_components=2 ....................\n[CV]  knn_clf__n_neighbors=14, pca__n_components=2, score=0.899, total=   0.0s\n[CV] knn_clf__n_neighbors=14, pca__n_components=3 ....................\n[CV]  knn_clf__n_neighbors=14, pca__n_components=3, score=0.877, total=   0.0s\n[CV] knn_clf__n_neighbors=14, pca__n_components=3 ....................\n[CV]  knn_clf__n_neighbors=14, pca__n_components=3, score=0.901, total=   0.0s\n[CV] knn_clf__n_neighbors=14, pca__n_components=3 ....................\n[CV]  knn_clf__n_neighbors=14, pca__n_components=3, score=0.887, total=   0.0s\n[CV] knn_clf__n_neighbors=14, pca__n_components=3 ....................\n[CV]  knn_clf__n_neighbors=14, pca__n_components=3, score=0.875, total=   0.0s\n[CV] knn_clf__n_neighbors=14, pca__n_components=3 ....................\n[CV]  knn_clf__n_neighbors=14, pca__n_components=3, score=0.938, total=   0.0s\n[CV] knn_clf__n_neighbors=14, pca__n_components=3 ....................\n[CV]  knn_clf__n_neighbors=14, pca__n_components=3, score=0.900, total=   0.0s\n[CV] knn_clf__n_neighbors=14, pca__n_components=3 ....................\n[CV]  knn_clf__n_neighbors=14, pca__n_components=3, score=0.875, total=   0.0s\n[CV] knn_clf__n_neighbors=14, pca__n_components=3 ....................\n[CV]  knn_clf__n_neighbors=14, pca__n_components=3, score=0.838, total=   0.0s\n[CV] knn_clf__n_neighbors=14, pca__n_components=3 ....................\n[CV]  knn_clf__n_neighbors=14, pca__n_components=3, score=0.873, total=   0.0s\n[CV] knn_clf__n_neighbors=14, pca__n_components=3 ....................\n[CV]  knn_clf__n_neighbors=14, pca__n_components=3, score=0.835, total=   0.0s\n[CV] knn_clf__n_neighbors=14, pca__n_components=4 ....................\n[CV]  knn_clf__n_neighbors=14, pca__n_components=4, score=0.877, total=   0.0s\n[CV] knn_clf__n_neighbors=14, pca__n_components=4 ....................\n[CV]  knn_clf__n_neighbors=14, pca__n_components=4, score=0.889, total=   0.1s\n[CV] knn_clf__n_neighbors=14, pca__n_components=4 ....................\n[CV]  knn_clf__n_neighbors=14, pca__n_components=4, score=0.875, total=   0.1s\n[CV] knn_clf__n_neighbors=14, pca__n_components=4 ....................\n[CV]  knn_clf__n_neighbors=14, pca__n_components=4, score=0.850, total=   0.0s\n[CV] knn_clf__n_neighbors=14, pca__n_components=4 ....................\n[CV]  knn_clf__n_neighbors=14, pca__n_components=4, score=0.887, total=   0.0s\n[CV] knn_clf__n_neighbors=14, pca__n_components=4 ....................\n[CV]  knn_clf__n_neighbors=14, pca__n_components=4, score=0.875, total=   0.0s\n[CV] knn_clf__n_neighbors=14, pca__n_components=4 ....................\n[CV]  knn_clf__n_neighbors=14, pca__n_components=4, score=0.875, total=   0.0s\n[CV] knn_clf__n_neighbors=14, pca__n_components=4 ....................\n[CV]  knn_clf__n_neighbors=14, pca__n_components=4, score=0.812, total=   0.0s\n[CV] knn_clf__n_neighbors=14, pca__n_components=4 ....................\n[CV]  knn_clf__n_neighbors=14, pca__n_components=4, score=0.899, total=   0.0s\n[CV] knn_clf__n_neighbors=14, pca__n_components=4 ....................\n[CV]  knn_clf__n_neighbors=14, pca__n_components=4, score=0.835, total=   0.0s\n[CV] knn_clf__n_neighbors=14, pca__n_components=5 ....................\n[CV]  knn_clf__n_neighbors=14, pca__n_components=5, score=0.852, total=   0.0s\n[CV] knn_clf__n_neighbors=14, pca__n_components=5 ....................\n[CV]  knn_clf__n_neighbors=14, pca__n_components=5, score=0.852, total=   0.0s\n[CV] knn_clf__n_neighbors=14, pca__n_components=5 ....................\n[CV]  knn_clf__n_neighbors=14, pca__n_components=5, score=0.887, total=   0.0s\n[CV] knn_clf__n_neighbors=14, pca__n_components=5 ....................\n[CV]  knn_clf__n_neighbors=14, pca__n_components=5, score=0.863, total=   0.0s\n[CV] knn_clf__n_neighbors=14, pca__n_components=5 ....................\n[CV]  knn_clf__n_neighbors=14, pca__n_components=5, score=0.900, total=   0.0s\n[CV] knn_clf__n_neighbors=14, pca__n_components=5 ....................\n[CV]  knn_clf__n_neighbors=14, pca__n_components=5, score=0.838, total=   0.0s\n[CV] knn_clf__n_neighbors=14, pca__n_components=5 ....................\n[CV]  knn_clf__n_neighbors=14, pca__n_components=5, score=0.875, total=   0.0s\n[CV] knn_clf__n_neighbors=14, pca__n_components=5 ....................\n[CV]  knn_clf__n_neighbors=14, pca__n_components=5, score=0.800, total=   0.0s\n[CV] knn_clf__n_neighbors=14, pca__n_components=5 ....................\n[CV]  knn_clf__n_neighbors=14, pca__n_components=5, score=0.861, total=   0.0s\n[CV] knn_clf__n_neighbors=14, pca__n_components=5 ....................\n[CV]  knn_clf__n_neighbors=14, pca__n_components=5, score=0.835, total=   0.0s\n[CV] knn_clf__n_neighbors=14, pca__n_components=6 ....................\n[CV]  knn_clf__n_neighbors=14, pca__n_components=6, score=0.877, total=   0.0s\n[CV] knn_clf__n_neighbors=14, pca__n_components=6 ....................\n[CV]  knn_clf__n_neighbors=14, pca__n_components=6, score=0.864, total=   0.0s\n[CV] knn_clf__n_neighbors=14, pca__n_components=6 ....................\n[CV]  knn_clf__n_neighbors=14, pca__n_components=6, score=0.800, total=   0.0s\n[CV] knn_clf__n_neighbors=14, pca__n_components=6 ....................\n[CV]  knn_clf__n_neighbors=14, pca__n_components=6, score=0.850, total=   0.0s\n[CV] knn_clf__n_neighbors=14, pca__n_components=6 ....................\n[CV]  knn_clf__n_neighbors=14, pca__n_components=6, score=0.875, total=   0.0s\n[CV] knn_clf__n_neighbors=14, pca__n_components=6 ....................\n[CV]  knn_clf__n_neighbors=14, pca__n_components=6, score=0.912, total=   0.0s\n[CV] knn_clf__n_neighbors=14, pca__n_components=6 ....................\n[CV]  knn_clf__n_neighbors=14, pca__n_components=6, score=0.863, total=   0.0s\n[CV] knn_clf__n_neighbors=14, pca__n_components=6 ....................\n[CV]  knn_clf__n_neighbors=14, pca__n_components=6, score=0.800, total=   0.0s\n[CV] knn_clf__n_neighbors=14, pca__n_components=6 ....................\n[CV]  knn_clf__n_neighbors=14, pca__n_components=6, score=0.873, total=   0.0s\n[CV] knn_clf__n_neighbors=14, pca__n_components=6 ....................\n[CV]  knn_clf__n_neighbors=14, pca__n_components=6, score=0.835, total=   0.0s\n[CV] knn_clf__n_neighbors=14, pca__n_components=7 ....................\n[CV]  knn_clf__n_neighbors=14, pca__n_components=7, score=0.889, total=   0.0s\n[CV] knn_clf__n_neighbors=14, pca__n_components=7 ....................\n[CV]  knn_clf__n_neighbors=14, pca__n_components=7, score=0.827, total=   0.0s\n[CV] knn_clf__n_neighbors=14, pca__n_components=7 ....................\n[CV]  knn_clf__n_neighbors=14, pca__n_components=7, score=0.863, total=   0.0s\n[CV] knn_clf__n_neighbors=14, pca__n_components=7 ....................\n[CV]  knn_clf__n_neighbors=14, pca__n_components=7, score=0.887, total=   0.0s\n[CV] knn_clf__n_neighbors=14, pca__n_components=7 ....................\n[CV]  knn_clf__n_neighbors=14, pca__n_components=7, score=0.863, total=   0.0s\n[CV] knn_clf__n_neighbors=14, pca__n_components=7 ....................\n[CV]  knn_clf__n_neighbors=14, pca__n_components=7, score=0.838, total=   0.0s\n[CV] knn_clf__n_neighbors=14, pca__n_components=7 ....................\n[CV]  knn_clf__n_neighbors=14, pca__n_components=7, score=0.825, total=   0.0s\n[CV] knn_clf__n_neighbors=14, pca__n_components=7 ....................\n[CV]  knn_clf__n_neighbors=14, pca__n_components=7, score=0.800, total=   0.0s\n[CV] knn_clf__n_neighbors=14, pca__n_components=7 ....................\n[CV]  knn_clf__n_neighbors=14, pca__n_components=7, score=0.835, total=   0.0s\n[CV] knn_clf__n_neighbors=14, pca__n_components=7 ....................\n[CV]  knn_clf__n_neighbors=14, pca__n_components=7, score=0.772, total=   0.0s\n[CV] knn_clf__n_neighbors=14, pca__n_components=8 ....................\n[CV]  knn_clf__n_neighbors=14, pca__n_components=8, score=0.889, total=   0.0s\n[CV] knn_clf__n_neighbors=14, pca__n_components=8 ....................\n[CV]  knn_clf__n_neighbors=14, pca__n_components=8, score=0.827, total=   0.0s\n[CV] knn_clf__n_neighbors=14, pca__n_components=8 ....................\n[CV]  knn_clf__n_neighbors=14, pca__n_components=8, score=0.838, total=   0.0s\n[CV] knn_clf__n_neighbors=14, pca__n_components=8 ....................\n\n\n[CV]  knn_clf__n_neighbors=14, pca__n_components=8, score=0.838, total=   0.0s\n[CV] knn_clf__n_neighbors=14, pca__n_components=8 ....................\n[CV]  knn_clf__n_neighbors=14, pca__n_components=8, score=0.887, total=   0.0s\n[CV] knn_clf__n_neighbors=14, pca__n_components=8 ....................\n[CV]  knn_clf__n_neighbors=14, pca__n_components=8, score=0.863, total=   0.0s\n[CV] knn_clf__n_neighbors=14, pca__n_components=8 ....................\n[CV]  knn_clf__n_neighbors=14, pca__n_components=8, score=0.800, total=   0.0s\n[CV] knn_clf__n_neighbors=14, pca__n_components=8 ....................\n[CV]  knn_clf__n_neighbors=14, pca__n_components=8, score=0.838, total=   0.0s\n[CV] knn_clf__n_neighbors=14, pca__n_components=8 ....................\n[CV]  knn_clf__n_neighbors=14, pca__n_components=8, score=0.848, total=   0.0s\n[CV] knn_clf__n_neighbors=14, pca__n_components=8 ....................\n[CV]  knn_clf__n_neighbors=14, pca__n_components=8, score=0.785, total=   0.0s\n[CV] knn_clf__n_neighbors=14, pca__n_components=9 ....................\n[CV]  knn_clf__n_neighbors=14, pca__n_components=9, score=0.877, total=   0.0s\n[CV] knn_clf__n_neighbors=14, pca__n_components=9 ....................\n[CV]  knn_clf__n_neighbors=14, pca__n_components=9, score=0.840, total=   0.0s\n[CV] knn_clf__n_neighbors=14, pca__n_components=9 ....................\n[CV]  knn_clf__n_neighbors=14, pca__n_components=9, score=0.850, total=   0.0s\n[CV] knn_clf__n_neighbors=14, pca__n_components=9 ....................\n[CV]  knn_clf__n_neighbors=14, pca__n_components=9, score=0.850, total=   0.0s\n[CV] knn_clf__n_neighbors=14, pca__n_components=9 ....................\n[CV]  knn_clf__n_neighbors=14, pca__n_components=9, score=0.887, total=   0.0s\n[CV] knn_clf__n_neighbors=14, pca__n_components=9 ....................\n[CV]  knn_clf__n_neighbors=14, pca__n_components=9, score=0.825, total=   0.0s\n[CV] knn_clf__n_neighbors=14, pca__n_components=9 ....................\n[CV]  knn_clf__n_neighbors=14, pca__n_components=9, score=0.787, total=   0.0s\n[CV] knn_clf__n_neighbors=14, pca__n_components=9 ....................\n[CV]  knn_clf__n_neighbors=14, pca__n_components=9, score=0.812, total=   0.0s\n[CV] knn_clf__n_neighbors=14, pca__n_components=9 ....................\n[CV]  knn_clf__n_neighbors=14, pca__n_components=9, score=0.861, total=   0.0s\n[CV] knn_clf__n_neighbors=14, pca__n_components=9 ....................\n[CV]  knn_clf__n_neighbors=14, pca__n_components=9, score=0.797, total=   0.0s\n[CV] knn_clf__n_neighbors=15, pca__n_components=1 ....................\n[CV]  knn_clf__n_neighbors=15, pca__n_components=1, score=0.827, total=   0.0s\n[CV] knn_clf__n_neighbors=15, pca__n_components=1 ....................\n[CV]  knn_clf__n_neighbors=15, pca__n_components=1, score=0.753, total=   0.0s\n[CV] knn_clf__n_neighbors=15, pca__n_components=1 ....................\n[CV]  knn_clf__n_neighbors=15, pca__n_components=1, score=0.738, total=   0.0s\n[CV] knn_clf__n_neighbors=15, pca__n_components=1 ....................\n[CV]  knn_clf__n_neighbors=15, pca__n_components=1, score=0.750, total=   0.0s\n[CV] knn_clf__n_neighbors=15, pca__n_components=1 ....................\n[CV]  knn_clf__n_neighbors=15, pca__n_components=1, score=0.800, total=   0.0s\n[CV] knn_clf__n_neighbors=15, pca__n_components=1 ....................\n[CV]  knn_clf__n_neighbors=15, pca__n_components=1, score=0.775, total=   0.0s\n[CV] knn_clf__n_neighbors=15, pca__n_components=1 ....................\n[CV]  knn_clf__n_neighbors=15, pca__n_components=1, score=0.825, total=   0.0s\n[CV] knn_clf__n_neighbors=15, pca__n_components=1 ....................\n[CV]  knn_clf__n_neighbors=15, pca__n_components=1, score=0.738, total=   0.0s\n[CV] knn_clf__n_neighbors=15, pca__n_components=1 ....................\n[CV]  knn_clf__n_neighbors=15, pca__n_components=1, score=0.810, total=   0.0s\n[CV] knn_clf__n_neighbors=15, pca__n_components=1 ....................\n[CV]  knn_clf__n_neighbors=15, pca__n_components=1, score=0.772, total=   0.0s\n[CV] knn_clf__n_neighbors=15, pca__n_components=2 ....................\n[CV]  knn_clf__n_neighbors=15, pca__n_components=2, score=0.889, total=   0.0s\n[CV] knn_clf__n_neighbors=15, pca__n_components=2 ....................\n[CV]  knn_clf__n_neighbors=15, pca__n_components=2, score=0.926, total=   0.0s\n[CV] knn_clf__n_neighbors=15, pca__n_components=2 ....................\n[CV]  knn_clf__n_neighbors=15, pca__n_components=2, score=0.875, total=   0.0s\n[CV] knn_clf__n_neighbors=15, pca__n_components=2 ....................\n[CV]  knn_clf__n_neighbors=15, pca__n_components=2, score=0.925, total=   0.0s\n[CV] knn_clf__n_neighbors=15, pca__n_components=2 ....................\n[CV]  knn_clf__n_neighbors=15, pca__n_components=2, score=0.950, total=   0.0s\n[CV] knn_clf__n_neighbors=15, pca__n_components=2 ....................\n[CV]  knn_clf__n_neighbors=15, pca__n_components=2, score=0.912, total=   0.0s\n[CV] knn_clf__n_neighbors=15, pca__n_components=2 ....................\n[CV]  knn_clf__n_neighbors=15, pca__n_components=2, score=0.925, total=   0.0s\n[CV] knn_clf__n_neighbors=15, pca__n_components=2 ....................\n[CV]  knn_clf__n_neighbors=15, pca__n_components=2, score=0.863, total=   0.0s\n[CV] knn_clf__n_neighbors=15, pca__n_components=2 ....................\n[CV]  knn_clf__n_neighbors=15, pca__n_components=2, score=0.848, total=   0.0s\n[CV] knn_clf__n_neighbors=15, pca__n_components=2 ....................\n[CV]  knn_clf__n_neighbors=15, pca__n_components=2, score=0.899, total=   0.0s\n[CV] knn_clf__n_neighbors=15, pca__n_components=3 ....................\n[CV]  knn_clf__n_neighbors=15, pca__n_components=3, score=0.889, total=   0.0s\n[CV] knn_clf__n_neighbors=15, pca__n_components=3 ....................\n[CV]  knn_clf__n_neighbors=15, pca__n_components=3, score=0.889, total=   0.0s\n[CV] knn_clf__n_neighbors=15, pca__n_components=3 ....................\n[CV]  knn_clf__n_neighbors=15, pca__n_components=3, score=0.912, total=   0.0s\n[CV] knn_clf__n_neighbors=15, pca__n_components=3 ....................\n[CV]  knn_clf__n_neighbors=15, pca__n_components=3, score=0.875, total=   0.0s\n[CV] knn_clf__n_neighbors=15, pca__n_components=3 ....................\n[CV]  knn_clf__n_neighbors=15, pca__n_components=3, score=0.938, total=   0.0s\n[CV] knn_clf__n_neighbors=15, pca__n_components=3 ....................\n[CV]  knn_clf__n_neighbors=15, pca__n_components=3, score=0.900, total=   0.0s\n[CV] knn_clf__n_neighbors=15, pca__n_components=3 ....................\n[CV]  knn_clf__n_neighbors=15, pca__n_components=3, score=0.900, total=   0.0s\n[CV] knn_clf__n_neighbors=15, pca__n_components=3 ....................\n[CV]  knn_clf__n_neighbors=15, pca__n_components=3, score=0.838, total=   0.0s\n[CV] knn_clf__n_neighbors=15, pca__n_components=3 ....................\n[CV]  knn_clf__n_neighbors=15, pca__n_components=3, score=0.873, total=   0.0s\n[CV] knn_clf__n_neighbors=15, pca__n_components=3 ....................\n[CV]  knn_clf__n_neighbors=15, pca__n_components=3, score=0.835, total=   0.0s\n[CV] knn_clf__n_neighbors=15, pca__n_components=4 ....................\n[CV]  knn_clf__n_neighbors=15, pca__n_components=4, score=0.889, total=   0.0s\n[CV] knn_clf__n_neighbors=15, pca__n_components=4 ....................\n[CV]  knn_clf__n_neighbors=15, pca__n_components=4, score=0.889, total=   0.0s\n[CV] knn_clf__n_neighbors=15, pca__n_components=4 ....................\n[CV]  knn_clf__n_neighbors=15, pca__n_components=4, score=0.887, total=   0.0s\n[CV] knn_clf__n_neighbors=15, pca__n_components=4 ....................\n[CV]  knn_clf__n_neighbors=15, pca__n_components=4, score=0.850, total=   0.0s\n[CV] knn_clf__n_neighbors=15, pca__n_components=4 ....................\n[CV]  knn_clf__n_neighbors=15, pca__n_components=4, score=0.887, total=   0.0s\n[CV] knn_clf__n_neighbors=15, pca__n_components=4 ....................\n[CV]  knn_clf__n_neighbors=15, pca__n_components=4, score=0.887, total=   0.0s\n[CV] knn_clf__n_neighbors=15, pca__n_components=4 ....................\n[CV]  knn_clf__n_neighbors=15, pca__n_components=4, score=0.887, total=   0.0s\n[CV] knn_clf__n_neighbors=15, pca__n_components=4 ....................\n[CV]  knn_clf__n_neighbors=15, pca__n_components=4, score=0.812, total=   0.0s\n[CV] knn_clf__n_neighbors=15, pca__n_components=4 ....................\n[CV]  knn_clf__n_neighbors=15, pca__n_components=4, score=0.873, total=   0.0s\n[CV] knn_clf__n_neighbors=15, pca__n_components=4 ....................\n[CV]  knn_clf__n_neighbors=15, pca__n_components=4, score=0.835, total=   0.0s\n[CV] knn_clf__n_neighbors=15, pca__n_components=5 ....................\n[CV]  knn_clf__n_neighbors=15, pca__n_components=5, score=0.852, total=   0.0s\n[CV] knn_clf__n_neighbors=15, pca__n_components=5 ....................\n[CV]  knn_clf__n_neighbors=15, pca__n_components=5, score=0.877, total=   0.0s\n[CV] knn_clf__n_neighbors=15, pca__n_components=5 ....................\n[CV]  knn_clf__n_neighbors=15, pca__n_components=5, score=0.900, total=   0.0s\n[CV] knn_clf__n_neighbors=15, pca__n_components=5 ....................\n[CV]  knn_clf__n_neighbors=15, pca__n_components=5, score=0.887, total=   0.0s\n[CV] knn_clf__n_neighbors=15, pca__n_components=5 ....................\n[CV]  knn_clf__n_neighbors=15, pca__n_components=5, score=0.900, total=   0.0s\n[CV] knn_clf__n_neighbors=15, pca__n_components=5 ....................\n[CV]  knn_clf__n_neighbors=15, pca__n_components=5, score=0.850, total=   0.0s\n[CV] knn_clf__n_neighbors=15, pca__n_components=5 ....................\n\n\n[CV]  knn_clf__n_neighbors=15, pca__n_components=5, score=0.887, total=   0.0s\n[CV] knn_clf__n_neighbors=15, pca__n_components=5 ....................\n[CV]  knn_clf__n_neighbors=15, pca__n_components=5, score=0.812, total=   0.0s\n[CV] knn_clf__n_neighbors=15, pca__n_components=5 ....................\n[CV]  knn_clf__n_neighbors=15, pca__n_components=5, score=0.861, total=   0.0s\n[CV] knn_clf__n_neighbors=15, pca__n_components=5 ....................\n[CV]  knn_clf__n_neighbors=15, pca__n_components=5, score=0.861, total=   0.0s\n[CV] knn_clf__n_neighbors=15, pca__n_components=6 ....................\n[CV]  knn_clf__n_neighbors=15, pca__n_components=6, score=0.877, total=   0.0s\n[CV] knn_clf__n_neighbors=15, pca__n_components=6 ....................\n[CV]  knn_clf__n_neighbors=15, pca__n_components=6, score=0.852, total=   0.0s\n[CV] knn_clf__n_neighbors=15, pca__n_components=6 ....................\n[CV]  knn_clf__n_neighbors=15, pca__n_components=6, score=0.838, total=   0.0s\n[CV] knn_clf__n_neighbors=15, pca__n_components=6 ....................\n[CV]  knn_clf__n_neighbors=15, pca__n_components=6, score=0.863, total=   0.0s\n[CV] knn_clf__n_neighbors=15, pca__n_components=6 ....................\n[CV]  knn_clf__n_neighbors=15, pca__n_components=6, score=0.887, total=   0.1s\n[CV] knn_clf__n_neighbors=15, pca__n_components=6 ....................\n[CV]  knn_clf__n_neighbors=15, pca__n_components=6, score=0.900, total=   0.1s\n[CV] knn_clf__n_neighbors=15, pca__n_components=6 ....................\n[CV]  knn_clf__n_neighbors=15, pca__n_components=6, score=0.850, total=   0.0s\n[CV] knn_clf__n_neighbors=15, pca__n_components=6 ....................\n[CV]  knn_clf__n_neighbors=15, pca__n_components=6, score=0.800, total=   0.0s\n[CV] knn_clf__n_neighbors=15, pca__n_components=6 ....................\n[CV]  knn_clf__n_neighbors=15, pca__n_components=6, score=0.873, total=   0.1s\n[CV] knn_clf__n_neighbors=15, pca__n_components=6 ....................\n[CV]  knn_clf__n_neighbors=15, pca__n_components=6, score=0.835, total=   0.2s\n[CV] knn_clf__n_neighbors=15, pca__n_components=7 ....................\n[CV]  knn_clf__n_neighbors=15, pca__n_components=7, score=0.864, total=   0.2s\n[CV] knn_clf__n_neighbors=15, pca__n_components=7 ....................\n[CV]  knn_clf__n_neighbors=15, pca__n_components=7, score=0.840, total=   0.1s\n[CV] knn_clf__n_neighbors=15, pca__n_components=7 ....................\n[CV]  knn_clf__n_neighbors=15, pca__n_components=7, score=0.875, total=   0.2s\n[CV] knn_clf__n_neighbors=15, pca__n_components=7 ....................\n[CV]  knn_clf__n_neighbors=15, pca__n_components=7, score=0.900, total=   0.2s\n[CV] knn_clf__n_neighbors=15, pca__n_components=7 ....................\n[CV]  knn_clf__n_neighbors=15, pca__n_components=7, score=0.875, total=   0.0s\n[CV] knn_clf__n_neighbors=15, pca__n_components=7 ....................\n[CV]  knn_clf__n_neighbors=15, pca__n_components=7, score=0.850, total=   0.0s\n[CV] knn_clf__n_neighbors=15, pca__n_components=7 ....................\n[CV]  knn_clf__n_neighbors=15, pca__n_components=7, score=0.863, total=   0.0s\n[CV] knn_clf__n_neighbors=15, pca__n_components=7 ....................\n[CV]  knn_clf__n_neighbors=15, pca__n_components=7, score=0.825, total=   0.0s\n[CV] knn_clf__n_neighbors=15, pca__n_components=7 ....................\n[CV]  knn_clf__n_neighbors=15, pca__n_components=7, score=0.823, total=   0.0s\n[CV] knn_clf__n_neighbors=15, pca__n_components=7 ....................\n[CV]  knn_clf__n_neighbors=15, pca__n_components=7, score=0.785, total=   0.0s\n[CV] knn_clf__n_neighbors=15, pca__n_components=8 ....................\n[CV]  knn_clf__n_neighbors=15, pca__n_components=8, score=0.889, total=   0.0s\n[CV] knn_clf__n_neighbors=15, pca__n_components=8 ....................\n[CV]  knn_clf__n_neighbors=15, pca__n_components=8, score=0.852, total=   0.0s\n[CV] knn_clf__n_neighbors=15, pca__n_components=8 ....................\n[CV]  knn_clf__n_neighbors=15, pca__n_components=8, score=0.838, total=   0.0s\n[CV] knn_clf__n_neighbors=15, pca__n_components=8 ....................\n[CV]  knn_clf__n_neighbors=15, pca__n_components=8, score=0.875, total=   0.0s\n[CV] knn_clf__n_neighbors=15, pca__n_components=8 ....................\n[CV]  knn_clf__n_neighbors=15, pca__n_components=8, score=0.887, total=   0.0s\n[CV] knn_clf__n_neighbors=15, pca__n_components=8 ....................\n[CV]  knn_clf__n_neighbors=15, pca__n_components=8, score=0.825, total=   0.0s\n[CV] knn_clf__n_neighbors=15, pca__n_components=8 ....................\n[CV]  knn_clf__n_neighbors=15, pca__n_components=8, score=0.800, total=   0.0s\n[CV] knn_clf__n_neighbors=15, pca__n_components=8 ....................\n[CV]  knn_clf__n_neighbors=15, pca__n_components=8, score=0.863, total=   0.0s\n[CV] knn_clf__n_neighbors=15, pca__n_components=8 ....................\n[CV]  knn_clf__n_neighbors=15, pca__n_components=8, score=0.861, total=   0.0s\n[CV] knn_clf__n_neighbors=15, pca__n_components=8 ....................\n[CV]  knn_clf__n_neighbors=15, pca__n_components=8, score=0.835, total=   0.0s\n[CV] knn_clf__n_neighbors=15, pca__n_components=9 ....................\n[CV]  knn_clf__n_neighbors=15, pca__n_components=9, score=0.852, total=   0.0s\n[CV] knn_clf__n_neighbors=15, pca__n_components=9 ....................\n[CV]  knn_clf__n_neighbors=15, pca__n_components=9, score=0.840, total=   0.0s\n[CV] knn_clf__n_neighbors=15, pca__n_components=9 ....................\n[CV]  knn_clf__n_neighbors=15, pca__n_components=9, score=0.850, total=   0.0s\n[CV] knn_clf__n_neighbors=15, pca__n_components=9 ....................\n[CV]  knn_clf__n_neighbors=15, pca__n_components=9, score=0.875, total=   0.0s\n[CV] knn_clf__n_neighbors=15, pca__n_components=9 ....................\n[CV]  knn_clf__n_neighbors=15, pca__n_components=9, score=0.875, total=   0.0s\n[CV] knn_clf__n_neighbors=15, pca__n_components=9 ....................\n[CV]  knn_clf__n_neighbors=15, pca__n_components=9, score=0.825, total=   0.0s\n[CV] knn_clf__n_neighbors=15, pca__n_components=9 ....................\n[CV]  knn_clf__n_neighbors=15, pca__n_components=9, score=0.812, total=   0.0s\n[CV] knn_clf__n_neighbors=15, pca__n_components=9 ....................\n[CV]  knn_clf__n_neighbors=15, pca__n_components=9, score=0.812, total=   0.0s\n[CV] knn_clf__n_neighbors=15, pca__n_components=9 ....................\n[CV]  knn_clf__n_neighbors=15, pca__n_components=9, score=0.848, total=   0.0s\n[CV] knn_clf__n_neighbors=15, pca__n_components=9 ....................\n[CV]  knn_clf__n_neighbors=15, pca__n_components=9, score=0.810, total=   0.0s\n[CV] knn_clf__n_neighbors=16, pca__n_components=1 ....................\n[CV]  knn_clf__n_neighbors=16, pca__n_components=1, score=0.815, total=   0.0s\n[CV] knn_clf__n_neighbors=16, pca__n_components=1 ....................\n[CV]  knn_clf__n_neighbors=16, pca__n_components=1, score=0.753, total=   0.0s\n[CV] knn_clf__n_neighbors=16, pca__n_components=1 ....................\n[CV]  knn_clf__n_neighbors=16, pca__n_components=1, score=0.738, total=   0.0s\n[CV] knn_clf__n_neighbors=16, pca__n_components=1 ....................\n[CV]  knn_clf__n_neighbors=16, pca__n_components=1, score=0.762, total=   0.0s\n[CV] knn_clf__n_neighbors=16, pca__n_components=1 ....................\n[CV]  knn_clf__n_neighbors=16, pca__n_components=1, score=0.800, total=   0.0s\n[CV] knn_clf__n_neighbors=16, pca__n_components=1 ....................\n[CV]  knn_clf__n_neighbors=16, pca__n_components=1, score=0.787, total=   0.0s\n[CV] knn_clf__n_neighbors=16, pca__n_components=1 ....................\n[CV]  knn_clf__n_neighbors=16, pca__n_components=1, score=0.825, total=   0.0s\n[CV] knn_clf__n_neighbors=16, pca__n_components=1 ....................\n[CV]  knn_clf__n_neighbors=16, pca__n_components=1, score=0.750, total=   0.0s\n[CV] knn_clf__n_neighbors=16, pca__n_components=1 ....................\n[CV]  knn_clf__n_neighbors=16, pca__n_components=1, score=0.823, total=   0.0s\n[CV] knn_clf__n_neighbors=16, pca__n_components=1 ....................\n[CV]  knn_clf__n_neighbors=16, pca__n_components=1, score=0.772, total=   0.0s\n[CV] knn_clf__n_neighbors=16, pca__n_components=2 ....................\n[CV]  knn_clf__n_neighbors=16, pca__n_components=2, score=0.877, total=   0.0s\n[CV] knn_clf__n_neighbors=16, pca__n_components=2 ....................\n[CV]  knn_clf__n_neighbors=16, pca__n_components=2, score=0.926, total=   0.0s\n[CV] knn_clf__n_neighbors=16, pca__n_components=2 ....................\n[CV]  knn_clf__n_neighbors=16, pca__n_components=2, score=0.875, total=   0.0s\n[CV] knn_clf__n_neighbors=16, pca__n_components=2 ....................\n[CV]  knn_clf__n_neighbors=16, pca__n_components=2, score=0.912, total=   0.0s\n[CV] knn_clf__n_neighbors=16, pca__n_components=2 ....................\n[CV]  knn_clf__n_neighbors=16, pca__n_components=2, score=0.950, total=   0.0s\n[CV] knn_clf__n_neighbors=16, pca__n_components=2 ....................\n[CV]  knn_clf__n_neighbors=16, pca__n_components=2, score=0.912, total=   0.0s\n\n\n[CV] knn_clf__n_neighbors=16, pca__n_components=2 ....................\n[CV]  knn_clf__n_neighbors=16, pca__n_components=2, score=0.900, total=   0.0s\n[CV] knn_clf__n_neighbors=16, pca__n_components=2 ....................\n[CV]  knn_clf__n_neighbors=16, pca__n_components=2, score=0.863, total=   0.0s\n[CV] knn_clf__n_neighbors=16, pca__n_components=2 ....................\n[CV]  knn_clf__n_neighbors=16, pca__n_components=2, score=0.861, total=   0.0s\n[CV] knn_clf__n_neighbors=16, pca__n_components=2 ....................\n[CV]  knn_clf__n_neighbors=16, pca__n_components=2, score=0.899, total=   0.0s\n[CV] knn_clf__n_neighbors=16, pca__n_components=3 ....................\n[CV]  knn_clf__n_neighbors=16, pca__n_components=3, score=0.889, total=   0.0s\n[CV] knn_clf__n_neighbors=16, pca__n_components=3 ....................\n[CV]  knn_clf__n_neighbors=16, pca__n_components=3, score=0.889, total=   0.0s\n[CV] knn_clf__n_neighbors=16, pca__n_components=3 ....................\n[CV]  knn_clf__n_neighbors=16, pca__n_components=3, score=0.925, total=   0.0s\n[CV] knn_clf__n_neighbors=16, pca__n_components=3 ....................\n[CV]  knn_clf__n_neighbors=16, pca__n_components=3, score=0.875, total=   0.0s\n[CV] knn_clf__n_neighbors=16, pca__n_components=3 ....................\n[CV]  knn_clf__n_neighbors=16, pca__n_components=3, score=0.938, total=   0.0s\n[CV] knn_clf__n_neighbors=16, pca__n_components=3 ....................\n[CV]  knn_clf__n_neighbors=16, pca__n_components=3, score=0.900, total=   0.0s\n[CV] knn_clf__n_neighbors=16, pca__n_components=3 ....................\n[CV]  knn_clf__n_neighbors=16, pca__n_components=3, score=0.900, total=   0.0s\n[CV] knn_clf__n_neighbors=16, pca__n_components=3 ....................\n[CV]  knn_clf__n_neighbors=16, pca__n_components=3, score=0.825, total=   0.0s\n[CV] knn_clf__n_neighbors=16, pca__n_components=3 ....................\n[CV]  knn_clf__n_neighbors=16, pca__n_components=3, score=0.873, total=   0.0s\n[CV] knn_clf__n_neighbors=16, pca__n_components=3 ....................\n[CV]  knn_clf__n_neighbors=16, pca__n_components=3, score=0.835, total=   0.0s\n[CV] knn_clf__n_neighbors=16, pca__n_components=4 ....................\n[CV]  knn_clf__n_neighbors=16, pca__n_components=4, score=0.864, total=   0.3s\n[CV] knn_clf__n_neighbors=16, pca__n_components=4 ....................\n[CV]  knn_clf__n_neighbors=16, pca__n_components=4, score=0.889, total=   0.2s\n[CV] knn_clf__n_neighbors=16, pca__n_components=4 ....................\n[CV]  knn_clf__n_neighbors=16, pca__n_components=4, score=0.875, total=   0.3s\n[CV] knn_clf__n_neighbors=16, pca__n_components=4 ....................\n[CV]  knn_clf__n_neighbors=16, pca__n_components=4, score=0.850, total=   0.0s\n[CV] knn_clf__n_neighbors=16, pca__n_components=4 ....................\n[CV]  knn_clf__n_neighbors=16, pca__n_components=4, score=0.887, total=   0.0s\n[CV] knn_clf__n_neighbors=16, pca__n_components=4 ....................\n[CV]  knn_clf__n_neighbors=16, pca__n_components=4, score=0.875, total=   0.0s\n[CV] knn_clf__n_neighbors=16, pca__n_components=4 ....................\n[CV]  knn_clf__n_neighbors=16, pca__n_components=4, score=0.875, total=   0.0s\n[CV] knn_clf__n_neighbors=16, pca__n_components=4 ....................\n[CV]  knn_clf__n_neighbors=16, pca__n_components=4, score=0.812, total=   0.0s\n[CV] knn_clf__n_neighbors=16, pca__n_components=4 ....................\n[CV]  knn_clf__n_neighbors=16, pca__n_components=4, score=0.886, total=   0.0s\n[CV] knn_clf__n_neighbors=16, pca__n_components=4 ....................\n[CV]  knn_clf__n_neighbors=16, pca__n_components=4, score=0.835, total=   0.0s\n[CV] knn_clf__n_neighbors=16, pca__n_components=5 ....................\n[CV]  knn_clf__n_neighbors=16, pca__n_components=5, score=0.852, total=   0.0s\n[CV] knn_clf__n_neighbors=16, pca__n_components=5 ....................\n[CV]  knn_clf__n_neighbors=16, pca__n_components=5, score=0.864, total=   0.0s\n[CV] knn_clf__n_neighbors=16, pca__n_components=5 ....................\n[CV]  knn_clf__n_neighbors=16, pca__n_components=5, score=0.875, total=   0.0s\n[CV] knn_clf__n_neighbors=16, pca__n_components=5 ....................\n[CV]  knn_clf__n_neighbors=16, pca__n_components=5, score=0.887, total=   0.0s\n[CV] knn_clf__n_neighbors=16, pca__n_components=5 ....................\n[CV]  knn_clf__n_neighbors=16, pca__n_components=5, score=0.887, total=   0.0s\n[CV] knn_clf__n_neighbors=16, pca__n_components=5 ....................\n[CV]  knn_clf__n_neighbors=16, pca__n_components=5, score=0.838, total=   0.0s\n[CV] knn_clf__n_neighbors=16, pca__n_components=5 ....................\n[CV]  knn_clf__n_neighbors=16, pca__n_components=5, score=0.887, total=   0.1s\n[CV] knn_clf__n_neighbors=16, pca__n_components=5 ....................\n[CV]  knn_clf__n_neighbors=16, pca__n_components=5, score=0.775, total=   0.0s\n[CV] knn_clf__n_neighbors=16, pca__n_components=5 ....................\n[CV]  knn_clf__n_neighbors=16, pca__n_components=5, score=0.861, total=   0.0s\n[CV] knn_clf__n_neighbors=16, pca__n_components=5 ....................\n[CV]  knn_clf__n_neighbors=16, pca__n_components=5, score=0.835, total=   0.0s\n[CV] knn_clf__n_neighbors=16, pca__n_components=6 ....................\n[CV]  knn_clf__n_neighbors=16, pca__n_components=6, score=0.889, total=   0.0s\n[CV] knn_clf__n_neighbors=16, pca__n_components=6 ....................\n[CV]  knn_clf__n_neighbors=16, pca__n_components=6, score=0.864, total=   0.0s\n[CV] knn_clf__n_neighbors=16, pca__n_components=6 ....................\n[CV]  knn_clf__n_neighbors=16, pca__n_components=6, score=0.800, total=   0.0s\n[CV] knn_clf__n_neighbors=16, pca__n_components=6 ....................\n[CV]  knn_clf__n_neighbors=16, pca__n_components=6, score=0.850, total=   0.0s\n[CV] knn_clf__n_neighbors=16, pca__n_components=6 ....................\n[CV]  knn_clf__n_neighbors=16, pca__n_components=6, score=0.900, total=   0.0s\n[CV] knn_clf__n_neighbors=16, pca__n_components=6 ....................\n[CV]  knn_clf__n_neighbors=16, pca__n_components=6, score=0.887, total=   0.0s\n[CV] knn_clf__n_neighbors=16, pca__n_components=6 ....................\n[CV]  knn_clf__n_neighbors=16, pca__n_components=6, score=0.825, total=   0.0s\n[CV] knn_clf__n_neighbors=16, pca__n_components=6 ....................\n[CV]  knn_clf__n_neighbors=16, pca__n_components=6, score=0.800, total=   0.0s\n[CV] knn_clf__n_neighbors=16, pca__n_components=6 ....................\n[CV]  knn_clf__n_neighbors=16, pca__n_components=6, score=0.873, total=   0.0s\n[CV] knn_clf__n_neighbors=16, pca__n_components=6 ....................\n[CV]  knn_clf__n_neighbors=16, pca__n_components=6, score=0.835, total=   0.0s\n[CV] knn_clf__n_neighbors=16, pca__n_components=7 ....................\n[CV]  knn_clf__n_neighbors=16, pca__n_components=7, score=0.877, total=   0.0s\n[CV] knn_clf__n_neighbors=16, pca__n_components=7 ....................\n[CV]  knn_clf__n_neighbors=16, pca__n_components=7, score=0.827, total=   0.0s\n[CV] knn_clf__n_neighbors=16, pca__n_components=7 ....................\n[CV]  knn_clf__n_neighbors=16, pca__n_components=7, score=0.863, total=   0.0s\n[CV] knn_clf__n_neighbors=16, pca__n_components=7 ....................\n[CV]  knn_clf__n_neighbors=16, pca__n_components=7, score=0.887, total=   0.0s\n[CV] knn_clf__n_neighbors=16, pca__n_components=7 ....................\n[CV]  knn_clf__n_neighbors=16, pca__n_components=7, score=0.863, total=   0.1s\n[CV] knn_clf__n_neighbors=16, pca__n_components=7 ....................\n[CV]  knn_clf__n_neighbors=16, pca__n_components=7, score=0.812, total=   0.0s\n[CV] knn_clf__n_neighbors=16, pca__n_components=7 ....................\n[CV]  knn_clf__n_neighbors=16, pca__n_components=7, score=0.838, total=   0.0s\n[CV] knn_clf__n_neighbors=16, pca__n_components=7 ....................\n[CV]  knn_clf__n_neighbors=16, pca__n_components=7, score=0.800, total=   0.0s\n[CV] knn_clf__n_neighbors=16, pca__n_components=7 ....................\n[CV]  knn_clf__n_neighbors=16, pca__n_components=7, score=0.848, total=   0.0s\n[CV] knn_clf__n_neighbors=16, pca__n_components=7 ....................\n[CV]  knn_clf__n_neighbors=16, pca__n_components=7, score=0.772, total=   0.0s\n[CV] knn_clf__n_neighbors=16, pca__n_components=8 ....................\n[CV]  knn_clf__n_neighbors=16, pca__n_components=8, score=0.889, total=   0.0s\n[CV] knn_clf__n_neighbors=16, pca__n_components=8 ....................\n\n\n[CV]  knn_clf__n_neighbors=16, pca__n_components=8, score=0.852, total=   0.0s\n[CV] knn_clf__n_neighbors=16, pca__n_components=8 ....................\n[CV]  knn_clf__n_neighbors=16, pca__n_components=8, score=0.825, total=   0.0s\n[CV] knn_clf__n_neighbors=16, pca__n_components=8 ....................\n[CV]  knn_clf__n_neighbors=16, pca__n_components=8, score=0.838, total=   0.0s\n[CV] knn_clf__n_neighbors=16, pca__n_components=8 ....................\n[CV]  knn_clf__n_neighbors=16, pca__n_components=8, score=0.875, total=   0.0s\n[CV] knn_clf__n_neighbors=16, pca__n_components=8 ....................\n[CV]  knn_clf__n_neighbors=16, pca__n_components=8, score=0.825, total=   0.0s\n[CV] knn_clf__n_neighbors=16, pca__n_components=8 ....................\n[CV]  knn_clf__n_neighbors=16, pca__n_components=8, score=0.787, total=   0.0s\n[CV] knn_clf__n_neighbors=16, pca__n_components=8 ....................\n[CV]  knn_clf__n_neighbors=16, pca__n_components=8, score=0.863, total=   0.0s\n[CV] knn_clf__n_neighbors=16, pca__n_components=8 ....................\n[CV]  knn_clf__n_neighbors=16, pca__n_components=8, score=0.848, total=   0.0s\n[CV] knn_clf__n_neighbors=16, pca__n_components=8 ....................\n[CV]  knn_clf__n_neighbors=16, pca__n_components=8, score=0.785, total=   0.0s\n[CV] knn_clf__n_neighbors=16, pca__n_components=9 ....................\n[CV]  knn_clf__n_neighbors=16, pca__n_components=9, score=0.864, total=   0.0s\n[CV] knn_clf__n_neighbors=16, pca__n_components=9 ....................\n[CV]  knn_clf__n_neighbors=16, pca__n_components=9, score=0.840, total=   0.0s\n[CV] knn_clf__n_neighbors=16, pca__n_components=9 ....................\n[CV]  knn_clf__n_neighbors=16, pca__n_components=9, score=0.838, total=   0.0s\n[CV] knn_clf__n_neighbors=16, pca__n_components=9 ....................\n[CV]  knn_clf__n_neighbors=16, pca__n_components=9, score=0.838, total=   0.0s\n[CV] knn_clf__n_neighbors=16, pca__n_components=9 ....................\n[CV]  knn_clf__n_neighbors=16, pca__n_components=9, score=0.900, total=   0.0s\n[CV] knn_clf__n_neighbors=16, pca__n_components=9 ....................\n[CV]  knn_clf__n_neighbors=16, pca__n_components=9, score=0.825, total=   0.0s\n[CV] knn_clf__n_neighbors=16, pca__n_components=9 ....................\n[CV]  knn_clf__n_neighbors=16, pca__n_components=9, score=0.787, total=   0.0s\n[CV] knn_clf__n_neighbors=16, pca__n_components=9 ....................\n[CV]  knn_clf__n_neighbors=16, pca__n_components=9, score=0.825, total=   0.0s\n[CV] knn_clf__n_neighbors=16, pca__n_components=9 ....................\n[CV]  knn_clf__n_neighbors=16, pca__n_components=9, score=0.848, total=   0.0s\n[CV] knn_clf__n_neighbors=16, pca__n_components=9 ....................\n[CV]  knn_clf__n_neighbors=16, pca__n_components=9, score=0.772, total=   0.0s\n[CV] knn_clf__n_neighbors=17, pca__n_components=1 ....................\n[CV]  knn_clf__n_neighbors=17, pca__n_components=1, score=0.815, total=   0.0s\n[CV] knn_clf__n_neighbors=17, pca__n_components=1 ....................\n[CV]  knn_clf__n_neighbors=17, pca__n_components=1, score=0.753, total=   0.0s\n[CV] knn_clf__n_neighbors=17, pca__n_components=1 ....................\n[CV]  knn_clf__n_neighbors=17, pca__n_components=1, score=0.750, total=   0.0s\n[CV] knn_clf__n_neighbors=17, pca__n_components=1 ....................\n[CV]  knn_clf__n_neighbors=17, pca__n_components=1, score=0.762, total=   0.0s\n[CV] knn_clf__n_neighbors=17, pca__n_components=1 ....................\n[CV]  knn_clf__n_neighbors=17, pca__n_components=1, score=0.800, total=   0.0s\n[CV] knn_clf__n_neighbors=17, pca__n_components=1 ....................\n[CV]  knn_clf__n_neighbors=17, pca__n_components=1, score=0.800, total=   0.0s\n[CV] knn_clf__n_neighbors=17, pca__n_components=1 ....................\n[CV]  knn_clf__n_neighbors=17, pca__n_components=1, score=0.812, total=   0.0s\n[CV] knn_clf__n_neighbors=17, pca__n_components=1 ....................\n[CV]  knn_clf__n_neighbors=17, pca__n_components=1, score=0.738, total=   0.0s\n[CV] knn_clf__n_neighbors=17, pca__n_components=1 ....................\n[CV]  knn_clf__n_neighbors=17, pca__n_components=1, score=0.823, total=   0.0s\n[CV] knn_clf__n_neighbors=17, pca__n_components=1 ....................\n[CV]  knn_clf__n_neighbors=17, pca__n_components=1, score=0.785, total=   0.0s\n[CV] knn_clf__n_neighbors=17, pca__n_components=2 ....................\n[CV]  knn_clf__n_neighbors=17, pca__n_components=2, score=0.889, total=   0.0s\n[CV] knn_clf__n_neighbors=17, pca__n_components=2 ....................\n[CV]  knn_clf__n_neighbors=17, pca__n_components=2, score=0.914, total=   0.0s\n[CV] knn_clf__n_neighbors=17, pca__n_components=2 ....................\n[CV]  knn_clf__n_neighbors=17, pca__n_components=2, score=0.875, total=   0.0s\n[CV] knn_clf__n_neighbors=17, pca__n_components=2 ....................\n[CV]  knn_clf__n_neighbors=17, pca__n_components=2, score=0.912, total=   0.0s\n[CV] knn_clf__n_neighbors=17, pca__n_components=2 ....................\n[CV]  knn_clf__n_neighbors=17, pca__n_components=2, score=0.950, total=   0.0s\n[CV] knn_clf__n_neighbors=17, pca__n_components=2 ....................\n[CV]  knn_clf__n_neighbors=17, pca__n_components=2, score=0.912, total=   0.0s\n[CV] knn_clf__n_neighbors=17, pca__n_components=2 ....................\n[CV]  knn_clf__n_neighbors=17, pca__n_components=2, score=0.912, total=   0.0s\n[CV] knn_clf__n_neighbors=17, pca__n_components=2 ....................\n[CV]  knn_clf__n_neighbors=17, pca__n_components=2, score=0.863, total=   0.0s\n[CV] knn_clf__n_neighbors=17, pca__n_components=2 ....................\n[CV]  knn_clf__n_neighbors=17, pca__n_components=2, score=0.861, total=   0.0s\n[CV] knn_clf__n_neighbors=17, pca__n_components=2 ....................\n[CV]  knn_clf__n_neighbors=17, pca__n_components=2, score=0.911, total=   0.0s\n[CV] knn_clf__n_neighbors=17, pca__n_components=3 ....................\n[CV]  knn_clf__n_neighbors=17, pca__n_components=3, score=0.889, total=   0.0s\n[CV] knn_clf__n_neighbors=17, pca__n_components=3 ....................\n[CV]  knn_clf__n_neighbors=17, pca__n_components=3, score=0.889, total=   0.0s\n[CV] knn_clf__n_neighbors=17, pca__n_components=3 ....................\n[CV]  knn_clf__n_neighbors=17, pca__n_components=3, score=0.925, total=   0.0s\n[CV] knn_clf__n_neighbors=17, pca__n_components=3 ....................\n[CV]  knn_clf__n_neighbors=17, pca__n_components=3, score=0.875, total=   0.0s\n[CV] knn_clf__n_neighbors=17, pca__n_components=3 ....................\n[CV]  knn_clf__n_neighbors=17, pca__n_components=3, score=0.938, total=   0.0s\n[CV] knn_clf__n_neighbors=17, pca__n_components=3 ....................\n[CV]  knn_clf__n_neighbors=17, pca__n_components=3, score=0.900, total=   0.0s\n[CV] knn_clf__n_neighbors=17, pca__n_components=3 ....................\n[CV]  knn_clf__n_neighbors=17, pca__n_components=3, score=0.900, total=   0.0s\n[CV] knn_clf__n_neighbors=17, pca__n_components=3 ....................\n[CV]  knn_clf__n_neighbors=17, pca__n_components=3, score=0.838, total=   0.1s\n[CV] knn_clf__n_neighbors=17, pca__n_components=3 ....................\n[CV]  knn_clf__n_neighbors=17, pca__n_components=3, score=0.861, total=   0.0s\n[CV] knn_clf__n_neighbors=17, pca__n_components=3 ....................\n[CV]  knn_clf__n_neighbors=17, pca__n_components=3, score=0.848, total=   0.1s\n[CV] knn_clf__n_neighbors=17, pca__n_components=4 ....................\n[CV]  knn_clf__n_neighbors=17, pca__n_components=4, score=0.877, total=   0.1s\n[CV] knn_clf__n_neighbors=17, pca__n_components=4 ....................\n[CV]  knn_clf__n_neighbors=17, pca__n_components=4, score=0.889, total=   0.0s\n[CV] knn_clf__n_neighbors=17, pca__n_components=4 ....................\n[CV]  knn_clf__n_neighbors=17, pca__n_components=4, score=0.863, total=   0.1s\n[CV] knn_clf__n_neighbors=17, pca__n_components=4 ....................\n[CV]  knn_clf__n_neighbors=17, pca__n_components=4, score=0.863, total=   0.1s\n[CV] knn_clf__n_neighbors=17, pca__n_components=4 ....................\n[CV]  knn_clf__n_neighbors=17, pca__n_components=4, score=0.887, total=   0.1s\n[CV] knn_clf__n_neighbors=17, pca__n_components=4 ....................\n[CV]  knn_clf__n_neighbors=17, pca__n_components=4, score=0.912, total=   0.0s\n[CV] knn_clf__n_neighbors=17, pca__n_components=4 ....................\n[CV]  knn_clf__n_neighbors=17, pca__n_components=4, score=0.863, total=   0.1s\n[CV] knn_clf__n_neighbors=17, pca__n_components=4 ....................\n\n\n[CV]  knn_clf__n_neighbors=17, pca__n_components=4, score=0.812, total=   0.2s\n[CV] knn_clf__n_neighbors=17, pca__n_components=4 ....................\n[CV]  knn_clf__n_neighbors=17, pca__n_components=4, score=0.873, total=   0.0s\n[CV] knn_clf__n_neighbors=17, pca__n_components=4 ....................\n[CV]  knn_clf__n_neighbors=17, pca__n_components=4, score=0.835, total=   0.0s\n[CV] knn_clf__n_neighbors=17, pca__n_components=5 ....................\n[CV]  knn_clf__n_neighbors=17, pca__n_components=5, score=0.852, total=   0.0s\n[CV] knn_clf__n_neighbors=17, pca__n_components=5 ....................\n[CV]  knn_clf__n_neighbors=17, pca__n_components=5, score=0.864, total=   0.0s\n[CV] knn_clf__n_neighbors=17, pca__n_components=5 ....................\n[CV]  knn_clf__n_neighbors=17, pca__n_components=5, score=0.887, total=   0.0s\n[CV] knn_clf__n_neighbors=17, pca__n_components=5 ....................\n[CV]  knn_clf__n_neighbors=17, pca__n_components=5, score=0.887, total=   0.0s\n[CV] knn_clf__n_neighbors=17, pca__n_components=5 ....................\n[CV]  knn_clf__n_neighbors=17, pca__n_components=5, score=0.912, total=   0.0s\n[CV] knn_clf__n_neighbors=17, pca__n_components=5 ....................\n[CV]  knn_clf__n_neighbors=17, pca__n_components=5, score=0.863, total=   0.0s\n[CV] knn_clf__n_neighbors=17, pca__n_components=5 ....................\n[CV]  knn_clf__n_neighbors=17, pca__n_components=5, score=0.900, total=   0.0s\n[CV] knn_clf__n_neighbors=17, pca__n_components=5 ....................\n[CV]  knn_clf__n_neighbors=17, pca__n_components=5, score=0.812, total=   0.0s\n[CV] knn_clf__n_neighbors=17, pca__n_components=5 ....................\n[CV]  knn_clf__n_neighbors=17, pca__n_components=5, score=0.873, total=   0.0s\n[CV] knn_clf__n_neighbors=17, pca__n_components=5 ....................\n[CV]  knn_clf__n_neighbors=17, pca__n_components=5, score=0.861, total=   0.0s\n[CV] knn_clf__n_neighbors=17, pca__n_components=6 ....................\n[CV]  knn_clf__n_neighbors=17, pca__n_components=6, score=0.901, total=   0.0s\n[CV] knn_clf__n_neighbors=17, pca__n_components=6 ....................\n[CV]  knn_clf__n_neighbors=17, pca__n_components=6, score=0.852, total=   0.0s\n[CV] knn_clf__n_neighbors=17, pca__n_components=6 ....................\n[CV]  knn_clf__n_neighbors=17, pca__n_components=6, score=0.825, total=   0.0s\n[CV] knn_clf__n_neighbors=17, pca__n_components=6 ....................\n[CV]  knn_clf__n_neighbors=17, pca__n_components=6, score=0.887, total=   0.0s\n[CV] knn_clf__n_neighbors=17, pca__n_components=6 ....................\n[CV]  knn_clf__n_neighbors=17, pca__n_components=6, score=0.900, total=   0.0s\n[CV] knn_clf__n_neighbors=17, pca__n_components=6 ....................\n[CV]  knn_clf__n_neighbors=17, pca__n_components=6, score=0.875, total=   0.0s\n[CV] knn_clf__n_neighbors=17, pca__n_components=6 ....................\n[CV]  knn_clf__n_neighbors=17, pca__n_components=6, score=0.825, total=   0.0s\n[CV] knn_clf__n_neighbors=17, pca__n_components=6 ....................\n[CV]  knn_clf__n_neighbors=17, pca__n_components=6, score=0.825, total=   0.0s\n[CV] knn_clf__n_neighbors=17, pca__n_components=6 ....................\n[CV]  knn_clf__n_neighbors=17, pca__n_components=6, score=0.861, total=   0.0s\n[CV] knn_clf__n_neighbors=17, pca__n_components=6 ....................\n[CV]  knn_clf__n_neighbors=17, pca__n_components=6, score=0.848, total=   0.0s\n[CV] knn_clf__n_neighbors=17, pca__n_components=7 ....................\n[CV]  knn_clf__n_neighbors=17, pca__n_components=7, score=0.877, total=   0.0s\n[CV] knn_clf__n_neighbors=17, pca__n_components=7 ....................\n[CV]  knn_clf__n_neighbors=17, pca__n_components=7, score=0.827, total=   0.0s\n[CV] knn_clf__n_neighbors=17, pca__n_components=7 ....................\n[CV]  knn_clf__n_neighbors=17, pca__n_components=7, score=0.887, total=   0.0s\n[CV] knn_clf__n_neighbors=17, pca__n_components=7 ....................\n[CV]  knn_clf__n_neighbors=17, pca__n_components=7, score=0.900, total=   0.0s\n[CV] knn_clf__n_neighbors=17, pca__n_components=7 ....................\n[CV]  knn_clf__n_neighbors=17, pca__n_components=7, score=0.850, total=   0.0s\n[CV] knn_clf__n_neighbors=17, pca__n_components=7 ....................\n[CV]  knn_clf__n_neighbors=17, pca__n_components=7, score=0.850, total=   0.0s\n[CV] knn_clf__n_neighbors=17, pca__n_components=7 ....................\n[CV]  knn_clf__n_neighbors=17, pca__n_components=7, score=0.863, total=   0.0s\n[CV] knn_clf__n_neighbors=17, pca__n_components=7 ....................\n[CV]  knn_clf__n_neighbors=17, pca__n_components=7, score=0.825, total=   0.0s\n[CV] knn_clf__n_neighbors=17, pca__n_components=7 ....................\n[CV]  knn_clf__n_neighbors=17, pca__n_components=7, score=0.848, total=   0.0s\n[CV] knn_clf__n_neighbors=17, pca__n_components=7 ....................\n[CV]  knn_clf__n_neighbors=17, pca__n_components=7, score=0.785, total=   0.0s\n[CV] knn_clf__n_neighbors=17, pca__n_components=8 ....................\n[CV]  knn_clf__n_neighbors=17, pca__n_components=8, score=0.877, total=   0.0s\n[CV] knn_clf__n_neighbors=17, pca__n_components=8 ....................\n[CV]  knn_clf__n_neighbors=17, pca__n_components=8, score=0.840, total=   0.0s\n[CV] knn_clf__n_neighbors=17, pca__n_components=8 ....................\n[CV]  knn_clf__n_neighbors=17, pca__n_components=8, score=0.850, total=   0.0s\n[CV] knn_clf__n_neighbors=17, pca__n_components=8 ....................\n[CV]  knn_clf__n_neighbors=17, pca__n_components=8, score=0.850, total=   0.0s\n[CV] knn_clf__n_neighbors=17, pca__n_components=8 ....................\n[CV]  knn_clf__n_neighbors=17, pca__n_components=8, score=0.887, total=   0.0s\n[CV] knn_clf__n_neighbors=17, pca__n_components=8 ....................\n[CV]  knn_clf__n_neighbors=17, pca__n_components=8, score=0.812, total=   0.0s\n[CV] knn_clf__n_neighbors=17, pca__n_components=8 ....................\n[CV]  knn_clf__n_neighbors=17, pca__n_components=8, score=0.800, total=   0.0s\n[CV] knn_clf__n_neighbors=17, pca__n_components=8 ....................\n[CV]  knn_clf__n_neighbors=17, pca__n_components=8, score=0.863, total=   0.0s\n[CV] knn_clf__n_neighbors=17, pca__n_components=8 ....................\n[CV]  knn_clf__n_neighbors=17, pca__n_components=8, score=0.848, total=   0.0s\n[CV] knn_clf__n_neighbors=17, pca__n_components=8 ....................\n[CV]  knn_clf__n_neighbors=17, pca__n_components=8, score=0.797, total=   0.0s\n[CV] knn_clf__n_neighbors=17, pca__n_components=9 ....................\n[CV]  knn_clf__n_neighbors=17, pca__n_components=9, score=0.852, total=   0.0s\n[CV] knn_clf__n_neighbors=17, pca__n_components=9 ....................\n[CV]  knn_clf__n_neighbors=17, pca__n_components=9, score=0.840, total=   0.0s\n[CV] knn_clf__n_neighbors=17, pca__n_components=9 ....................\n[CV]  knn_clf__n_neighbors=17, pca__n_components=9, score=0.838, total=   0.0s\n[CV] knn_clf__n_neighbors=17, pca__n_components=9 ....................\n[CV]  knn_clf__n_neighbors=17, pca__n_components=9, score=0.863, total=   0.0s\n[CV] knn_clf__n_neighbors=17, pca__n_components=9 ....................\n[CV]  knn_clf__n_neighbors=17, pca__n_components=9, score=0.887, total=   0.0s\n[CV] knn_clf__n_neighbors=17, pca__n_components=9 ....................\n[CV]  knn_clf__n_neighbors=17, pca__n_components=9, score=0.838, total=   0.0s\n[CV] knn_clf__n_neighbors=17, pca__n_components=9 ....................\n[CV]  knn_clf__n_neighbors=17, pca__n_components=9, score=0.800, total=   0.0s\n[CV] knn_clf__n_neighbors=17, pca__n_components=9 ....................\n[CV]  knn_clf__n_neighbors=17, pca__n_components=9, score=0.825, total=   0.0s\n[CV] knn_clf__n_neighbors=17, pca__n_components=9 ....................\n[CV]  knn_clf__n_neighbors=17, pca__n_components=9, score=0.861, total=   0.0s\n[CV] knn_clf__n_neighbors=17, pca__n_components=9 ....................\n[CV]  knn_clf__n_neighbors=17, pca__n_components=9, score=0.810, total=   0.0s\n[CV] knn_clf__n_neighbors=18, pca__n_components=1 ....................\n[CV]  knn_clf__n_neighbors=18, pca__n_components=1, score=0.815, total=   0.0s\n[CV] knn_clf__n_neighbors=18, pca__n_components=1 ....................\n[CV]  knn_clf__n_neighbors=18, pca__n_components=1, score=0.753, total=   0.0s\n[CV] knn_clf__n_neighbors=18, pca__n_components=1 ....................\n\n\n[CV]  knn_clf__n_neighbors=18, pca__n_components=1, score=0.738, total=   0.0s\n[CV] knn_clf__n_neighbors=18, pca__n_components=1 ....................\n[CV]  knn_clf__n_neighbors=18, pca__n_components=1, score=0.762, total=   0.0s\n[CV] knn_clf__n_neighbors=18, pca__n_components=1 ....................\n[CV]  knn_clf__n_neighbors=18, pca__n_components=1, score=0.800, total=   0.0s\n[CV] knn_clf__n_neighbors=18, pca__n_components=1 ....................\n[CV]  knn_clf__n_neighbors=18, pca__n_components=1, score=0.812, total=   0.0s\n[CV] knn_clf__n_neighbors=18, pca__n_components=1 ....................\n[CV]  knn_clf__n_neighbors=18, pca__n_components=1, score=0.812, total=   0.0s\n[CV] knn_clf__n_neighbors=18, pca__n_components=1 ....................\n[CV]  knn_clf__n_neighbors=18, pca__n_components=1, score=0.738, total=   0.0s\n[CV] knn_clf__n_neighbors=18, pca__n_components=1 ....................\n[CV]  knn_clf__n_neighbors=18, pca__n_components=1, score=0.823, total=   0.0s\n[CV] knn_clf__n_neighbors=18, pca__n_components=1 ....................\n[CV]  knn_clf__n_neighbors=18, pca__n_components=1, score=0.797, total=   0.0s\n[CV] knn_clf__n_neighbors=18, pca__n_components=2 ....................\n[CV]  knn_clf__n_neighbors=18, pca__n_components=2, score=0.889, total=   0.0s\n[CV] knn_clf__n_neighbors=18, pca__n_components=2 ....................\n[CV]  knn_clf__n_neighbors=18, pca__n_components=2, score=0.914, total=   0.0s\n[CV] knn_clf__n_neighbors=18, pca__n_components=2 ....................\n[CV]  knn_clf__n_neighbors=18, pca__n_components=2, score=0.875, total=   0.0s\n[CV] knn_clf__n_neighbors=18, pca__n_components=2 ....................\n[CV]  knn_clf__n_neighbors=18, pca__n_components=2, score=0.912, total=   0.0s\n[CV] knn_clf__n_neighbors=18, pca__n_components=2 ....................\n[CV]  knn_clf__n_neighbors=18, pca__n_components=2, score=0.950, total=   0.0s\n[CV] knn_clf__n_neighbors=18, pca__n_components=2 ....................\n[CV]  knn_clf__n_neighbors=18, pca__n_components=2, score=0.912, total=   0.0s\n[CV] knn_clf__n_neighbors=18, pca__n_components=2 ....................\n[CV]  knn_clf__n_neighbors=18, pca__n_components=2, score=0.912, total=   0.0s\n[CV] knn_clf__n_neighbors=18, pca__n_components=2 ....................\n[CV]  knn_clf__n_neighbors=18, pca__n_components=2, score=0.863, total=   0.0s\n[CV] knn_clf__n_neighbors=18, pca__n_components=2 ....................\n[CV]  knn_clf__n_neighbors=18, pca__n_components=2, score=0.861, total=   0.0s\n[CV] knn_clf__n_neighbors=18, pca__n_components=2 ....................\n[CV]  knn_clf__n_neighbors=18, pca__n_components=2, score=0.899, total=   0.0s\n[CV] knn_clf__n_neighbors=18, pca__n_components=3 ....................\n[CV]  knn_clf__n_neighbors=18, pca__n_components=3, score=0.889, total=   0.0s\n[CV] knn_clf__n_neighbors=18, pca__n_components=3 ....................\n[CV]  knn_clf__n_neighbors=18, pca__n_components=3, score=0.877, total=   0.0s\n[CV] knn_clf__n_neighbors=18, pca__n_components=3 ....................\n[CV]  knn_clf__n_neighbors=18, pca__n_components=3, score=0.925, total=   0.0s\n[CV] knn_clf__n_neighbors=18, pca__n_components=3 ....................\n[CV]  knn_clf__n_neighbors=18, pca__n_components=3, score=0.875, total=   0.0s\n[CV] knn_clf__n_neighbors=18, pca__n_components=3 ....................\n[CV]  knn_clf__n_neighbors=18, pca__n_components=3, score=0.938, total=   0.0s\n[CV] knn_clf__n_neighbors=18, pca__n_components=3 ....................\n[CV]  knn_clf__n_neighbors=18, pca__n_components=3, score=0.887, total=   0.0s\n[CV] knn_clf__n_neighbors=18, pca__n_components=3 ....................\n[CV]  knn_clf__n_neighbors=18, pca__n_components=3, score=0.850, total=   0.0s\n[CV] knn_clf__n_neighbors=18, pca__n_components=3 ....................\n[CV]  knn_clf__n_neighbors=18, pca__n_components=3, score=0.838, total=   0.0s\n[CV] knn_clf__n_neighbors=18, pca__n_components=3 ....................\n[CV]  knn_clf__n_neighbors=18, pca__n_components=3, score=0.886, total=   0.0s\n[CV] knn_clf__n_neighbors=18, pca__n_components=3 ....................\n[CV]  knn_clf__n_neighbors=18, pca__n_components=3, score=0.835, total=   0.0s\n[CV] knn_clf__n_neighbors=18, pca__n_components=4 ....................\n[CV]  knn_clf__n_neighbors=18, pca__n_components=4, score=0.852, total=   0.0s\n[CV] knn_clf__n_neighbors=18, pca__n_components=4 ....................\n[CV]  knn_clf__n_neighbors=18, pca__n_components=4, score=0.901, total=   0.0s\n[CV] knn_clf__n_neighbors=18, pca__n_components=4 ....................\n[CV]  knn_clf__n_neighbors=18, pca__n_components=4, score=0.875, total=   0.0s\n[CV] knn_clf__n_neighbors=18, pca__n_components=4 ....................\n[CV]  knn_clf__n_neighbors=18, pca__n_components=4, score=0.863, total=   0.0s\n[CV] knn_clf__n_neighbors=18, pca__n_components=4 ....................\n[CV]  knn_clf__n_neighbors=18, pca__n_components=4, score=0.887, total=   0.0s\n[CV] knn_clf__n_neighbors=18, pca__n_components=4 ....................\n[CV]  knn_clf__n_neighbors=18, pca__n_components=4, score=0.912, total=   0.0s\n[CV] knn_clf__n_neighbors=18, pca__n_components=4 ....................\n[CV]  knn_clf__n_neighbors=18, pca__n_components=4, score=0.863, total=   0.0s\n[CV] knn_clf__n_neighbors=18, pca__n_components=4 ....................\n[CV]  knn_clf__n_neighbors=18, pca__n_components=4, score=0.812, total=   0.0s\n[CV] knn_clf__n_neighbors=18, pca__n_components=4 ....................\n[CV]  knn_clf__n_neighbors=18, pca__n_components=4, score=0.886, total=   0.0s\n[CV] knn_clf__n_neighbors=18, pca__n_components=4 ....................\n[CV]  knn_clf__n_neighbors=18, pca__n_components=4, score=0.835, total=   0.0s\n[CV] knn_clf__n_neighbors=18, pca__n_components=5 ....................\n[CV]  knn_clf__n_neighbors=18, pca__n_components=5, score=0.864, total=   0.0s\n[CV] knn_clf__n_neighbors=18, pca__n_components=5 ....................\n[CV]  knn_clf__n_neighbors=18, pca__n_components=5, score=0.852, total=   0.0s\n[CV] knn_clf__n_neighbors=18, pca__n_components=5 ....................\n[CV]  knn_clf__n_neighbors=18, pca__n_components=5, score=0.887, total=   0.0s\n[CV] knn_clf__n_neighbors=18, pca__n_components=5 ....................\n[CV]  knn_clf__n_neighbors=18, pca__n_components=5, score=0.875, total=   0.0s\n[CV] knn_clf__n_neighbors=18, pca__n_components=5 ....................\n[CV]  knn_clf__n_neighbors=18, pca__n_components=5, score=0.900, total=   0.0s\n[CV] knn_clf__n_neighbors=18, pca__n_components=5 ....................\n[CV]  knn_clf__n_neighbors=18, pca__n_components=5, score=0.863, total=   0.0s\n[CV] knn_clf__n_neighbors=18, pca__n_components=5 ....................\n[CV]  knn_clf__n_neighbors=18, pca__n_components=5, score=0.875, total=   0.0s\n[CV] knn_clf__n_neighbors=18, pca__n_components=5 ....................\n[CV]  knn_clf__n_neighbors=18, pca__n_components=5, score=0.825, total=   0.0s\n[CV] knn_clf__n_neighbors=18, pca__n_components=5 ....................\n[CV]  knn_clf__n_neighbors=18, pca__n_components=5, score=0.861, total=   0.0s\n[CV] knn_clf__n_neighbors=18, pca__n_components=5 ....................\n[CV]  knn_clf__n_neighbors=18, pca__n_components=5, score=0.835, total=   0.0s\n[CV] knn_clf__n_neighbors=18, pca__n_components=6 ....................\n[CV]  knn_clf__n_neighbors=18, pca__n_components=6, score=0.901, total=   0.0s\n[CV] knn_clf__n_neighbors=18, pca__n_components=6 ....................\n[CV]  knn_clf__n_neighbors=18, pca__n_components=6, score=0.877, total=   0.0s\n[CV] knn_clf__n_neighbors=18, pca__n_components=6 ....................\n[CV]  knn_clf__n_neighbors=18, pca__n_components=6, score=0.812, total=   0.0s\n[CV] knn_clf__n_neighbors=18, pca__n_components=6 ....................\n[CV]  knn_clf__n_neighbors=18, pca__n_components=6, score=0.875, total=   0.0s\n[CV] knn_clf__n_neighbors=18, pca__n_components=6 ....................\n[CV]  knn_clf__n_neighbors=18, pca__n_components=6, score=0.912, total=   0.0s\n[CV] knn_clf__n_neighbors=18, pca__n_components=6 ....................\n[CV]  knn_clf__n_neighbors=18, pca__n_components=6, score=0.887, total=   0.0s\n[CV] knn_clf__n_neighbors=18, pca__n_components=6 ....................\n[CV]  knn_clf__n_neighbors=18, pca__n_components=6, score=0.825, total=   0.0s\n[CV] knn_clf__n_neighbors=18, pca__n_components=6 ....................\n[CV]  knn_clf__n_neighbors=18, pca__n_components=6, score=0.775, total=   0.1s\n[CV] knn_clf__n_neighbors=18, pca__n_components=6 ....................\n[CV]  knn_clf__n_neighbors=18, pca__n_components=6, score=0.861, total=   0.0s\n[CV] knn_clf__n_neighbors=18, pca__n_components=6 ....................\n[CV]  knn_clf__n_neighbors=18, pca__n_components=6, score=0.848, total=   0.0s\n[CV] knn_clf__n_neighbors=18, pca__n_components=7 ....................\n[CV]  knn_clf__n_neighbors=18, pca__n_components=7, score=0.889, total=   0.0s\n[CV] knn_clf__n_neighbors=18, pca__n_components=7 ....................\n[CV]  knn_clf__n_neighbors=18, pca__n_components=7, score=0.840, total=   0.0s\n[CV] knn_clf__n_neighbors=18, pca__n_components=7 ....................\n[CV]  knn_clf__n_neighbors=18, pca__n_components=7, score=0.863, total=   0.0s\n[CV] knn_clf__n_neighbors=18, pca__n_components=7 ....................\n[CV]  knn_clf__n_neighbors=18, pca__n_components=7, score=0.900, total=   0.0s\n[CV] knn_clf__n_neighbors=18, pca__n_components=7 ....................\n\n\n[CV]  knn_clf__n_neighbors=18, pca__n_components=7, score=0.838, total=   0.0s\n[CV] knn_clf__n_neighbors=18, pca__n_components=7 ....................\n[CV]  knn_clf__n_neighbors=18, pca__n_components=7, score=0.838, total=   0.0s\n[CV] knn_clf__n_neighbors=18, pca__n_components=7 ....................\n[CV]  knn_clf__n_neighbors=18, pca__n_components=7, score=0.863, total=   0.0s\n[CV] knn_clf__n_neighbors=18, pca__n_components=7 ....................\n[CV]  knn_clf__n_neighbors=18, pca__n_components=7, score=0.787, total=   0.0s\n[CV] knn_clf__n_neighbors=18, pca__n_components=7 ....................\n[CV]  knn_clf__n_neighbors=18, pca__n_components=7, score=0.873, total=   0.1s\n[CV] knn_clf__n_neighbors=18, pca__n_components=7 ....................\n[CV]  knn_clf__n_neighbors=18, pca__n_components=7, score=0.759, total=   0.0s\n[CV] knn_clf__n_neighbors=18, pca__n_components=8 ....................\n[CV]  knn_clf__n_neighbors=18, pca__n_components=8, score=0.864, total=   0.0s\n[CV] knn_clf__n_neighbors=18, pca__n_components=8 ....................\n[CV]  knn_clf__n_neighbors=18, pca__n_components=8, score=0.840, total=   0.0s\n[CV] knn_clf__n_neighbors=18, pca__n_components=8 ....................\n[CV]  knn_clf__n_neighbors=18, pca__n_components=8, score=0.838, total=   0.0s\n[CV] knn_clf__n_neighbors=18, pca__n_components=8 ....................\n[CV]  knn_clf__n_neighbors=18, pca__n_components=8, score=0.850, total=   0.0s\n[CV] knn_clf__n_neighbors=18, pca__n_components=8 ....................\n[CV]  knn_clf__n_neighbors=18, pca__n_components=8, score=0.912, total=   0.0s\n[CV] knn_clf__n_neighbors=18, pca__n_components=8 ....................\n[CV]  knn_clf__n_neighbors=18, pca__n_components=8, score=0.812, total=   0.0s\n[CV] knn_clf__n_neighbors=18, pca__n_components=8 ....................\n[CV]  knn_clf__n_neighbors=18, pca__n_components=8, score=0.787, total=   0.0s\n[CV] knn_clf__n_neighbors=18, pca__n_components=8 ....................\n[CV]  knn_clf__n_neighbors=18, pca__n_components=8, score=0.850, total=   0.0s\n[CV] knn_clf__n_neighbors=18, pca__n_components=8 ....................\n[CV]  knn_clf__n_neighbors=18, pca__n_components=8, score=0.861, total=   0.0s\n[CV] knn_clf__n_neighbors=18, pca__n_components=8 ....................\n[CV]  knn_clf__n_neighbors=18, pca__n_components=8, score=0.785, total=   0.0s\n[CV] knn_clf__n_neighbors=18, pca__n_components=9 ....................\n[CV]  knn_clf__n_neighbors=18, pca__n_components=9, score=0.852, total=   0.0s\n[CV] knn_clf__n_neighbors=18, pca__n_components=9 ....................\n[CV]  knn_clf__n_neighbors=18, pca__n_components=9, score=0.840, total=   0.0s\n[CV] knn_clf__n_neighbors=18, pca__n_components=9 ....................\n[CV]  knn_clf__n_neighbors=18, pca__n_components=9, score=0.838, total=   0.0s\n[CV] knn_clf__n_neighbors=18, pca__n_components=9 ....................\n[CV]  knn_clf__n_neighbors=18, pca__n_components=9, score=0.850, total=   0.0s\n[CV] knn_clf__n_neighbors=18, pca__n_components=9 ....................\n[CV]  knn_clf__n_neighbors=18, pca__n_components=9, score=0.887, total=   0.0s\n[CV] knn_clf__n_neighbors=18, pca__n_components=9 ....................\n[CV]  knn_clf__n_neighbors=18, pca__n_components=9, score=0.800, total=   0.0s\n[CV] knn_clf__n_neighbors=18, pca__n_components=9 ....................\n[CV]  knn_clf__n_neighbors=18, pca__n_components=9, score=0.787, total=   0.0s\n[CV] knn_clf__n_neighbors=18, pca__n_components=9 ....................\n[CV]  knn_clf__n_neighbors=18, pca__n_components=9, score=0.812, total=   0.0s\n[CV] knn_clf__n_neighbors=18, pca__n_components=9 ....................\n[CV]  knn_clf__n_neighbors=18, pca__n_components=9, score=0.848, total=   0.0s\n[CV] knn_clf__n_neighbors=18, pca__n_components=9 ....................\n[CV]  knn_clf__n_neighbors=18, pca__n_components=9, score=0.785, total=   0.0s\n[CV] knn_clf__n_neighbors=19, pca__n_components=1 ....................\n[CV]  knn_clf__n_neighbors=19, pca__n_components=1, score=0.827, total=   0.0s\n[CV] knn_clf__n_neighbors=19, pca__n_components=1 ....................\n[CV]  knn_clf__n_neighbors=19, pca__n_components=1, score=0.753, total=   0.0s\n[CV] knn_clf__n_neighbors=19, pca__n_components=1 ....................\n[CV]  knn_clf__n_neighbors=19, pca__n_components=1, score=0.787, total=   0.0s\n[CV] knn_clf__n_neighbors=19, pca__n_components=1 ....................\n[CV]  knn_clf__n_neighbors=19, pca__n_components=1, score=0.762, total=   0.0s\n[CV] knn_clf__n_neighbors=19, pca__n_components=1 ....................\n[CV]  knn_clf__n_neighbors=19, pca__n_components=1, score=0.800, total=   0.0s\n[CV] knn_clf__n_neighbors=19, pca__n_components=1 ....................\n[CV]  knn_clf__n_neighbors=19, pca__n_components=1, score=0.800, total=   0.0s\n[CV] knn_clf__n_neighbors=19, pca__n_components=1 ....................\n[CV]  knn_clf__n_neighbors=19, pca__n_components=1, score=0.800, total=   0.0s\n[CV] knn_clf__n_neighbors=19, pca__n_components=1 ....................\n[CV]  knn_clf__n_neighbors=19, pca__n_components=1, score=0.738, total=   0.0s\n[CV] knn_clf__n_neighbors=19, pca__n_components=1 ....................\n[CV]  knn_clf__n_neighbors=19, pca__n_components=1, score=0.823, total=   0.0s\n[CV] knn_clf__n_neighbors=19, pca__n_components=1 ....................\n[CV]  knn_clf__n_neighbors=19, pca__n_components=1, score=0.772, total=   0.0s\n[CV] knn_clf__n_neighbors=19, pca__n_components=2 ....................\n[CV]  knn_clf__n_neighbors=19, pca__n_components=2, score=0.889, total=   0.0s\n[CV] knn_clf__n_neighbors=19, pca__n_components=2 ....................\n[CV]  knn_clf__n_neighbors=19, pca__n_components=2, score=0.914, total=   0.0s\n[CV] knn_clf__n_neighbors=19, pca__n_components=2 ....................\n[CV]  knn_clf__n_neighbors=19, pca__n_components=2, score=0.875, total=   0.0s\n[CV] knn_clf__n_neighbors=19, pca__n_components=2 ....................\n[CV]  knn_clf__n_neighbors=19, pca__n_components=2, score=0.912, total=   0.0s\n[CV] knn_clf__n_neighbors=19, pca__n_components=2 ....................\n[CV]  knn_clf__n_neighbors=19, pca__n_components=2, score=0.938, total=   0.0s\n[CV] knn_clf__n_neighbors=19, pca__n_components=2 ....................\n[CV]  knn_clf__n_neighbors=19, pca__n_components=2, score=0.887, total=   0.0s\n[CV] knn_clf__n_neighbors=19, pca__n_components=2 ....................\n[CV]  knn_clf__n_neighbors=19, pca__n_components=2, score=0.912, total=   0.0s\n[CV] knn_clf__n_neighbors=19, pca__n_components=2 ....................\n[CV]  knn_clf__n_neighbors=19, pca__n_components=2, score=0.863, total=   0.0s\n[CV] knn_clf__n_neighbors=19, pca__n_components=2 ....................\n[CV]  knn_clf__n_neighbors=19, pca__n_components=2, score=0.861, total=   0.0s\n[CV] knn_clf__n_neighbors=19, pca__n_components=2 ....................\n[CV]  knn_clf__n_neighbors=19, pca__n_components=2, score=0.899, total=   0.0s\n[CV] knn_clf__n_neighbors=19, pca__n_components=3 ....................\n[CV]  knn_clf__n_neighbors=19, pca__n_components=3, score=0.889, total=   0.0s\n[CV] knn_clf__n_neighbors=19, pca__n_components=3 ....................\n[CV]  knn_clf__n_neighbors=19, pca__n_components=3, score=0.889, total=   0.0s\n[CV] knn_clf__n_neighbors=19, pca__n_components=3 ....................\n[CV]  knn_clf__n_neighbors=19, pca__n_components=3, score=0.912, total=   0.0s\n[CV] knn_clf__n_neighbors=19, pca__n_components=3 ....................\n[CV]  knn_clf__n_neighbors=19, pca__n_components=3, score=0.887, total=   0.0s\n[CV] knn_clf__n_neighbors=19, pca__n_components=3 ....................\n[CV]  knn_clf__n_neighbors=19, pca__n_components=3, score=0.938, total=   0.0s\n[CV] knn_clf__n_neighbors=19, pca__n_components=3 ....................\n[CV]  knn_clf__n_neighbors=19, pca__n_components=3, score=0.875, total=   0.0s\n[CV] knn_clf__n_neighbors=19, pca__n_components=3 ....................\n[CV]  knn_clf__n_neighbors=19, pca__n_components=3, score=0.887, total=   0.0s\n[CV] knn_clf__n_neighbors=19, pca__n_components=3 ....................\n[CV]  knn_clf__n_neighbors=19, pca__n_components=3, score=0.838, total=   0.0s\n[CV] knn_clf__n_neighbors=19, pca__n_components=3 ....................\n[CV]  knn_clf__n_neighbors=19, pca__n_components=3, score=0.848, total=   0.0s\n[CV] knn_clf__n_neighbors=19, pca__n_components=3 ....................\n[CV]  knn_clf__n_neighbors=19, pca__n_components=3, score=0.848, total=   0.0s\n[CV] knn_clf__n_neighbors=19, pca__n_components=4 ....................\n[CV]  knn_clf__n_neighbors=19, pca__n_components=4, score=0.864, total=   0.0s\n[CV] knn_clf__n_neighbors=19, pca__n_components=4 ....................\n[CV]  knn_clf__n_neighbors=19, pca__n_components=4, score=0.877, total=   0.0s\n[CV] knn_clf__n_neighbors=19, pca__n_components=4 ....................\n[CV]  knn_clf__n_neighbors=19, pca__n_components=4, score=0.875, total=   0.0s\n[CV] knn_clf__n_neighbors=19, pca__n_components=4 ....................\n[CV]  knn_clf__n_neighbors=19, pca__n_components=4, score=0.875, total=   0.0s\n[CV] knn_clf__n_neighbors=19, pca__n_components=4 ....................\n[CV]  knn_clf__n_neighbors=19, pca__n_components=4, score=0.887, total=   0.0s\n[CV] knn_clf__n_neighbors=19, pca__n_components=4 ....................\n[CV]  knn_clf__n_neighbors=19, pca__n_components=4, score=0.912, total=   0.0s\n[CV] knn_clf__n_neighbors=19, pca__n_components=4 ....................\n[CV]  knn_clf__n_neighbors=19, pca__n_components=4, score=0.875, total=   0.0s\n[CV] knn_clf__n_neighbors=19, pca__n_components=4 ....................\n[CV]  knn_clf__n_neighbors=19, pca__n_components=4, score=0.812, total=   0.0s\n[CV] knn_clf__n_neighbors=19, pca__n_components=4 ....................\n[CV]  knn_clf__n_neighbors=19, pca__n_components=4, score=0.899, total=   0.0s\n[CV] knn_clf__n_neighbors=19, pca__n_components=4 ....................\n\n\n[CV]  knn_clf__n_neighbors=19, pca__n_components=4, score=0.823, total=   0.0s\n[CV] knn_clf__n_neighbors=19, pca__n_components=5 ....................\n[CV]  knn_clf__n_neighbors=19, pca__n_components=5, score=0.864, total=   0.0s\n[CV] knn_clf__n_neighbors=19, pca__n_components=5 ....................\n[CV]  knn_clf__n_neighbors=19, pca__n_components=5, score=0.877, total=   0.1s\n[CV] knn_clf__n_neighbors=19, pca__n_components=5 ....................\n[CV]  knn_clf__n_neighbors=19, pca__n_components=5, score=0.900, total=   0.1s\n[CV] knn_clf__n_neighbors=19, pca__n_components=5 ....................\n[CV]  knn_clf__n_neighbors=19, pca__n_components=5, score=0.887, total=   0.1s\n[CV] knn_clf__n_neighbors=19, pca__n_components=5 ....................\n[CV]  knn_clf__n_neighbors=19, pca__n_components=5, score=0.912, total=   0.1s\n[CV] knn_clf__n_neighbors=19, pca__n_components=5 ....................\n[CV]  knn_clf__n_neighbors=19, pca__n_components=5, score=0.875, total=   0.1s\n[CV] knn_clf__n_neighbors=19, pca__n_components=5 ....................\n[CV]  knn_clf__n_neighbors=19, pca__n_components=5, score=0.863, total=   0.0s\n[CV] knn_clf__n_neighbors=19, pca__n_components=5 ....................\n[CV]  knn_clf__n_neighbors=19, pca__n_components=5, score=0.812, total=   0.0s\n[CV] knn_clf__n_neighbors=19, pca__n_components=5 ....................\n[CV]  knn_clf__n_neighbors=19, pca__n_components=5, score=0.861, total=   0.0s\n[CV] knn_clf__n_neighbors=19, pca__n_components=5 ....................\n[CV]  knn_clf__n_neighbors=19, pca__n_components=5, score=0.848, total=   0.0s\n[CV] knn_clf__n_neighbors=19, pca__n_components=6 ....................\n[CV]  knn_clf__n_neighbors=19, pca__n_components=6, score=0.889, total=   0.0s\n[CV] knn_clf__n_neighbors=19, pca__n_components=6 ....................\n[CV]  knn_clf__n_neighbors=19, pca__n_components=6, score=0.852, total=   0.0s\n[CV] knn_clf__n_neighbors=19, pca__n_components=6 ....................\n[CV]  knn_clf__n_neighbors=19, pca__n_components=6, score=0.838, total=   0.0s\n[CV] knn_clf__n_neighbors=19, pca__n_components=6 ....................\n[CV]  knn_clf__n_neighbors=19, pca__n_components=6, score=0.875, total=   0.0s\n[CV] knn_clf__n_neighbors=19, pca__n_components=6 ....................\n[CV]  knn_clf__n_neighbors=19, pca__n_components=6, score=0.900, total=   0.0s\n[CV] knn_clf__n_neighbors=19, pca__n_components=6 ....................\n[CV]  knn_clf__n_neighbors=19, pca__n_components=6, score=0.900, total=   0.0s\n[CV] knn_clf__n_neighbors=19, pca__n_components=6 ....................\n[CV]  knn_clf__n_neighbors=19, pca__n_components=6, score=0.812, total=   0.0s\n[CV] knn_clf__n_neighbors=19, pca__n_components=6 ....................\n[CV]  knn_clf__n_neighbors=19, pca__n_components=6, score=0.800, total=   0.0s\n[CV] knn_clf__n_neighbors=19, pca__n_components=6 ....................\n[CV]  knn_clf__n_neighbors=19, pca__n_components=6, score=0.861, total=   0.0s\n[CV] knn_clf__n_neighbors=19, pca__n_components=6 ....................\n[CV]  knn_clf__n_neighbors=19, pca__n_components=6, score=0.848, total=   0.0s\n[CV] knn_clf__n_neighbors=19, pca__n_components=7 ....................\n[CV]  knn_clf__n_neighbors=19, pca__n_components=7, score=0.877, total=   0.0s\n[CV] knn_clf__n_neighbors=19, pca__n_components=7 ....................\n[CV]  knn_clf__n_neighbors=19, pca__n_components=7, score=0.827, total=   0.0s\n[CV] knn_clf__n_neighbors=19, pca__n_components=7 ....................\n[CV]  knn_clf__n_neighbors=19, pca__n_components=7, score=0.875, total=   0.0s\n[CV] knn_clf__n_neighbors=19, pca__n_components=7 ....................\n[CV]  knn_clf__n_neighbors=19, pca__n_components=7, score=0.887, total=   0.0s\n[CV] knn_clf__n_neighbors=19, pca__n_components=7 ....................\n[CV]  knn_clf__n_neighbors=19, pca__n_components=7, score=0.850, total=   0.0s\n[CV] knn_clf__n_neighbors=19, pca__n_components=7 ....................\n[CV]  knn_clf__n_neighbors=19, pca__n_components=7, score=0.863, total=   0.0s\n[CV] knn_clf__n_neighbors=19, pca__n_components=7 ....................\n[CV]  knn_clf__n_neighbors=19, pca__n_components=7, score=0.838, total=   0.0s\n[CV] knn_clf__n_neighbors=19, pca__n_components=7 ....................\n[CV]  knn_clf__n_neighbors=19, pca__n_components=7, score=0.825, total=   0.0s\n[CV] knn_clf__n_neighbors=19, pca__n_components=7 ....................\n[CV]  knn_clf__n_neighbors=19, pca__n_components=7, score=0.848, total=   0.0s\n[CV] knn_clf__n_neighbors=19, pca__n_components=7 ....................\n[CV]  knn_clf__n_neighbors=19, pca__n_components=7, score=0.810, total=   0.0s\n[CV] knn_clf__n_neighbors=19, pca__n_components=8 ....................\n[CV]  knn_clf__n_neighbors=19, pca__n_components=8, score=0.877, total=   0.0s\n[CV] knn_clf__n_neighbors=19, pca__n_components=8 ....................\n[CV]  knn_clf__n_neighbors=19, pca__n_components=8, score=0.852, total=   0.0s\n[CV] knn_clf__n_neighbors=19, pca__n_components=8 ....................\n[CV]  knn_clf__n_neighbors=19, pca__n_components=8, score=0.838, total=   0.0s\n[CV] knn_clf__n_neighbors=19, pca__n_components=8 ....................\n[CV]  knn_clf__n_neighbors=19, pca__n_components=8, score=0.887, total=   0.0s\n[CV] knn_clf__n_neighbors=19, pca__n_components=8 ....................\n[CV]  knn_clf__n_neighbors=19, pca__n_components=8, score=0.887, total=   0.0s\n[CV] knn_clf__n_neighbors=19, pca__n_components=8 ....................\n[CV]  knn_clf__n_neighbors=19, pca__n_components=8, score=0.850, total=   0.0s\n[CV] knn_clf__n_neighbors=19, pca__n_components=8 ....................\n[CV]  knn_clf__n_neighbors=19, pca__n_components=8, score=0.775, total=   0.0s\n[CV] knn_clf__n_neighbors=19, pca__n_components=8 ....................\n[CV]  knn_clf__n_neighbors=19, pca__n_components=8, score=0.875, total=   0.0s\n[CV] knn_clf__n_neighbors=19, pca__n_components=8 ....................\n[CV]  knn_clf__n_neighbors=19, pca__n_components=8, score=0.848, total=   0.0s\n[CV] knn_clf__n_neighbors=19, pca__n_components=8 ....................\n[CV]  knn_clf__n_neighbors=19, pca__n_components=8, score=0.797, total=   0.0s\n[CV] knn_clf__n_neighbors=19, pca__n_components=9 ....................\n[CV]  knn_clf__n_neighbors=19, pca__n_components=9, score=0.840, total=   0.0s\n[CV] knn_clf__n_neighbors=19, pca__n_components=9 ....................\n[CV]  knn_clf__n_neighbors=19, pca__n_components=9, score=0.852, total=   0.0s\n[CV] knn_clf__n_neighbors=19, pca__n_components=9 ....................\n[CV]  knn_clf__n_neighbors=19, pca__n_components=9, score=0.838, total=   0.0s\n[CV] knn_clf__n_neighbors=19, pca__n_components=9 ....................\n[CV]  knn_clf__n_neighbors=19, pca__n_components=9, score=0.875, total=   0.0s\n[CV] knn_clf__n_neighbors=19, pca__n_components=9 ....................\n[CV]  knn_clf__n_neighbors=19, pca__n_components=9, score=0.900, total=   0.0s\n[CV] knn_clf__n_neighbors=19, pca__n_components=9 ....................\n[CV]  knn_clf__n_neighbors=19, pca__n_components=9, score=0.812, total=   0.0s\n[CV] knn_clf__n_neighbors=19, pca__n_components=9 ....................\n[CV]  knn_clf__n_neighbors=19, pca__n_components=9, score=0.787, total=   0.0s\n[CV] knn_clf__n_neighbors=19, pca__n_components=9 ....................\n[CV]  knn_clf__n_neighbors=19, pca__n_components=9, score=0.825, total=   0.0s\n[CV] knn_clf__n_neighbors=19, pca__n_components=9 ....................\n[CV]  knn_clf__n_neighbors=19, pca__n_components=9, score=0.848, total=   0.0s\n[CV] knn_clf__n_neighbors=19, pca__n_components=9 ....................\n[CV]  knn_clf__n_neighbors=19, pca__n_components=9, score=0.810, total=   0.0s\n\n\n[Parallel(n_jobs=1)]: Done 1710 out of 1710 | elapsed:   39.1s finished\n\n\nGridSearchCV(cv=10, error_score='raise-deprecating',\n             estimator=Pipeline(memory=None,\n                                steps=[('pca',\n                                        PCA(copy=True, iterated_power='auto',\n                                            n_components=None, random_state=42,\n                                            svd_solver='auto', tol=0.0,\n                                            whiten=False)),\n                                       ('scale',\n                                        StandardScaler(copy=True,\n                                                       with_mean=True,\n                                                       with_std=True)),\n                                       ('knn_clf',\n                                        KNeighborsClassifier(algorithm='auto',\n                                                             leaf_size=30,\n                                                             metric='minkowski',\n                                                             metric_params=None,\n                                                             n_jobs=None,\n                                                             n_neighbors=5, p=2,\n                                                             weights='uniform'))],\n                                verbose=False),\n             iid='warn', n_jobs=None,\n             param_grid={'knn_clf__n_neighbors': range(1, 20),\n                         'pca__n_components': range(1, 10)},\n             pre_dispatch='2*n_jobs', refit=True, return_train_score=False,\n             scoring='accuracy', verbose=5)\n\n\n\ncvr = grid_search2.cv_results_\nlist(zip(cvr['mean_test_score'], cvr['params']))\n\n[(0.70625, {'knn_clf__n_neighbors': 1, 'pca__n_components': 1}),\n (0.87125, {'knn_clf__n_neighbors': 1, 'pca__n_components': 2}),\n (0.85, {'knn_clf__n_neighbors': 1, 'pca__n_components': 3}),\n (0.84125, {'knn_clf__n_neighbors': 1, 'pca__n_components': 4}),\n (0.805, {'knn_clf__n_neighbors': 1, 'pca__n_components': 5}),\n (0.82125, {'knn_clf__n_neighbors': 1, 'pca__n_components': 6}),\n (0.7825, {'knn_clf__n_neighbors': 1, 'pca__n_components': 7}),\n (0.77875, {'knn_clf__n_neighbors': 1, 'pca__n_components': 8}),\n (0.76625, {'knn_clf__n_neighbors': 1, 'pca__n_components': 9}),\n (0.735, {'knn_clf__n_neighbors': 2, 'pca__n_components': 1}),\n (0.87625, {'knn_clf__n_neighbors': 2, 'pca__n_components': 2}),\n (0.85875, {'knn_clf__n_neighbors': 2, 'pca__n_components': 3}),\n (0.8425, {'knn_clf__n_neighbors': 2, 'pca__n_components': 4}),\n (0.8175, {'knn_clf__n_neighbors': 2, 'pca__n_components': 5}),\n (0.82125, {'knn_clf__n_neighbors': 2, 'pca__n_components': 6}),\n (0.79625, {'knn_clf__n_neighbors': 2, 'pca__n_components': 7}),\n (0.7775, {'knn_clf__n_neighbors': 2, 'pca__n_components': 8}),\n (0.7725, {'knn_clf__n_neighbors': 2, 'pca__n_components': 9}),\n (0.735, {'knn_clf__n_neighbors': 3, 'pca__n_components': 1}),\n (0.8875, {'knn_clf__n_neighbors': 3, 'pca__n_components': 2}),\n (0.87125, {'knn_clf__n_neighbors': 3, 'pca__n_components': 3}),\n (0.855, {'knn_clf__n_neighbors': 3, 'pca__n_components': 4}),\n (0.85125, {'knn_clf__n_neighbors': 3, 'pca__n_components': 5}),\n (0.8525, {'knn_clf__n_neighbors': 3, 'pca__n_components': 6}),\n (0.83, {'knn_clf__n_neighbors': 3, 'pca__n_components': 7}),\n (0.82125, {'knn_clf__n_neighbors': 3, 'pca__n_components': 8}),\n (0.82125, {'knn_clf__n_neighbors': 3, 'pca__n_components': 9}),\n (0.7525, {'knn_clf__n_neighbors': 4, 'pca__n_components': 1}),\n (0.88125, {'knn_clf__n_neighbors': 4, 'pca__n_components': 2}),\n (0.8775, {'knn_clf__n_neighbors': 4, 'pca__n_components': 3}),\n (0.86, {'knn_clf__n_neighbors': 4, 'pca__n_components': 4}),\n (0.85125, {'knn_clf__n_neighbors': 4, 'pca__n_components': 5}),\n (0.8525, {'knn_clf__n_neighbors': 4, 'pca__n_components': 6}),\n (0.8225, {'knn_clf__n_neighbors': 4, 'pca__n_components': 7}),\n (0.82, {'knn_clf__n_neighbors': 4, 'pca__n_components': 8}),\n (0.80875, {'knn_clf__n_neighbors': 4, 'pca__n_components': 9}),\n (0.7475, {'knn_clf__n_neighbors': 5, 'pca__n_components': 1}),\n (0.9, {'knn_clf__n_neighbors': 5, 'pca__n_components': 2}),\n (0.88375, {'knn_clf__n_neighbors': 5, 'pca__n_components': 3}),\n (0.86, {'knn_clf__n_neighbors': 5, 'pca__n_components': 4}),\n (0.86, {'knn_clf__n_neighbors': 5, 'pca__n_components': 5}),\n (0.8625, {'knn_clf__n_neighbors': 5, 'pca__n_components': 6}),\n (0.83375, {'knn_clf__n_neighbors': 5, 'pca__n_components': 7}),\n (0.8475, {'knn_clf__n_neighbors': 5, 'pca__n_components': 8}),\n (0.84125, {'knn_clf__n_neighbors': 5, 'pca__n_components': 9}),\n (0.765, {'knn_clf__n_neighbors': 6, 'pca__n_components': 1}),\n (0.89125, {'knn_clf__n_neighbors': 6, 'pca__n_components': 2}),\n (0.88625, {'knn_clf__n_neighbors': 6, 'pca__n_components': 3}),\n (0.8625, {'knn_clf__n_neighbors': 6, 'pca__n_components': 4}),\n (0.8575, {'knn_clf__n_neighbors': 6, 'pca__n_components': 5}),\n (0.845, {'knn_clf__n_neighbors': 6, 'pca__n_components': 6}),\n (0.83625, {'knn_clf__n_neighbors': 6, 'pca__n_components': 7}),\n (0.82875, {'knn_clf__n_neighbors': 6, 'pca__n_components': 8}),\n (0.8275, {'knn_clf__n_neighbors': 6, 'pca__n_components': 9}),\n (0.74875, {'knn_clf__n_neighbors': 7, 'pca__n_components': 1}),\n (0.89625, {'knn_clf__n_neighbors': 7, 'pca__n_components': 2}),\n (0.8925, {'knn_clf__n_neighbors': 7, 'pca__n_components': 3}),\n (0.8625, {'knn_clf__n_neighbors': 7, 'pca__n_components': 4}),\n (0.865, {'knn_clf__n_neighbors': 7, 'pca__n_components': 5}),\n (0.86, {'knn_clf__n_neighbors': 7, 'pca__n_components': 6}),\n (0.8425, {'knn_clf__n_neighbors': 7, 'pca__n_components': 7}),\n (0.84875, {'knn_clf__n_neighbors': 7, 'pca__n_components': 8}),\n (0.84125, {'knn_clf__n_neighbors': 7, 'pca__n_components': 9}),\n (0.76125, {'knn_clf__n_neighbors': 8, 'pca__n_components': 1}),\n (0.89375, {'knn_clf__n_neighbors': 8, 'pca__n_components': 2}),\n (0.89, {'knn_clf__n_neighbors': 8, 'pca__n_components': 3}),\n (0.855, {'knn_clf__n_neighbors': 8, 'pca__n_components': 4}),\n (0.86, {'knn_clf__n_neighbors': 8, 'pca__n_components': 5}),\n (0.8525, {'knn_clf__n_neighbors': 8, 'pca__n_components': 6}),\n (0.8325, {'knn_clf__n_neighbors': 8, 'pca__n_components': 7}),\n (0.83125, {'knn_clf__n_neighbors': 8, 'pca__n_components': 8}),\n (0.82625, {'knn_clf__n_neighbors': 8, 'pca__n_components': 9}),\n (0.75625, {'knn_clf__n_neighbors': 9, 'pca__n_components': 1}),\n (0.90375, {'knn_clf__n_neighbors': 9, 'pca__n_components': 2}),\n (0.88625, {'knn_clf__n_neighbors': 9, 'pca__n_components': 3}),\n (0.86375, {'knn_clf__n_neighbors': 9, 'pca__n_components': 4}),\n (0.86375, {'knn_clf__n_neighbors': 9, 'pca__n_components': 5}),\n (0.86, {'knn_clf__n_neighbors': 9, 'pca__n_components': 6}),\n (0.84875, {'knn_clf__n_neighbors': 9, 'pca__n_components': 7}),\n (0.84875, {'knn_clf__n_neighbors': 9, 'pca__n_components': 8}),\n (0.8375, {'knn_clf__n_neighbors': 9, 'pca__n_components': 9}),\n (0.77, {'knn_clf__n_neighbors': 10, 'pca__n_components': 1}),\n (0.9, {'knn_clf__n_neighbors': 10, 'pca__n_components': 2}),\n (0.88375, {'knn_clf__n_neighbors': 10, 'pca__n_components': 3}),\n (0.86, {'knn_clf__n_neighbors': 10, 'pca__n_components': 4}),\n (0.85875, {'knn_clf__n_neighbors': 10, 'pca__n_components': 5}),\n (0.85375, {'knn_clf__n_neighbors': 10, 'pca__n_components': 6}),\n (0.84375, {'knn_clf__n_neighbors': 10, 'pca__n_components': 7}),\n (0.8375, {'knn_clf__n_neighbors': 10, 'pca__n_components': 8}),\n (0.835, {'knn_clf__n_neighbors': 10, 'pca__n_components': 9}),\n (0.7625, {'knn_clf__n_neighbors': 11, 'pca__n_components': 1}),\n (0.905, {'knn_clf__n_neighbors': 11, 'pca__n_components': 2}),\n (0.8875, {'knn_clf__n_neighbors': 11, 'pca__n_components': 3}),\n (0.87375, {'knn_clf__n_neighbors': 11, 'pca__n_components': 4}),\n (0.85875, {'knn_clf__n_neighbors': 11, 'pca__n_components': 5}),\n (0.85375, {'knn_clf__n_neighbors': 11, 'pca__n_components': 6}),\n (0.8475, {'knn_clf__n_neighbors': 11, 'pca__n_components': 7}),\n (0.8575, {'knn_clf__n_neighbors': 11, 'pca__n_components': 8}),\n (0.8425, {'knn_clf__n_neighbors': 11, 'pca__n_components': 9}),\n (0.775, {'knn_clf__n_neighbors': 12, 'pca__n_components': 1}),\n (0.8975, {'knn_clf__n_neighbors': 12, 'pca__n_components': 2}),\n (0.88625, {'knn_clf__n_neighbors': 12, 'pca__n_components': 3}),\n (0.86875, {'knn_clf__n_neighbors': 12, 'pca__n_components': 4}),\n (0.8625, {'knn_clf__n_neighbors': 12, 'pca__n_components': 5}),\n (0.85125, {'knn_clf__n_neighbors': 12, 'pca__n_components': 6}),\n (0.84875, {'knn_clf__n_neighbors': 12, 'pca__n_components': 7}),\n (0.83625, {'knn_clf__n_neighbors': 12, 'pca__n_components': 8}),\n (0.8375, {'knn_clf__n_neighbors': 12, 'pca__n_components': 9}),\n (0.77, {'knn_clf__n_neighbors': 13, 'pca__n_components': 1}),\n (0.9, {'knn_clf__n_neighbors': 13, 'pca__n_components': 2}),\n (0.8825, {'knn_clf__n_neighbors': 13, 'pca__n_components': 3}),\n (0.87625, {'knn_clf__n_neighbors': 13, 'pca__n_components': 4}),\n (0.87, {'knn_clf__n_neighbors': 13, 'pca__n_components': 5}),\n (0.85375, {'knn_clf__n_neighbors': 13, 'pca__n_components': 6}),\n (0.855, {'knn_clf__n_neighbors': 13, 'pca__n_components': 7}),\n (0.8575, {'knn_clf__n_neighbors': 13, 'pca__n_components': 8}),\n (0.8425, {'knn_clf__n_neighbors': 13, 'pca__n_components': 9}),\n (0.7825, {'knn_clf__n_neighbors': 14, 'pca__n_components': 1}),\n (0.89875, {'knn_clf__n_neighbors': 14, 'pca__n_components': 2}),\n (0.88, {'knn_clf__n_neighbors': 14, 'pca__n_components': 3}),\n (0.8675, {'knn_clf__n_neighbors': 14, 'pca__n_components': 4}),\n (0.85625, {'knn_clf__n_neighbors': 14, 'pca__n_components': 5}),\n (0.855, {'knn_clf__n_neighbors': 14, 'pca__n_components': 6}),\n (0.84, {'knn_clf__n_neighbors': 14, 'pca__n_components': 7}),\n (0.84125, {'knn_clf__n_neighbors': 14, 'pca__n_components': 8}),\n (0.83875, {'knn_clf__n_neighbors': 14, 'pca__n_components': 9}),\n (0.77875, {'knn_clf__n_neighbors': 15, 'pca__n_components': 1}),\n (0.90125, {'knn_clf__n_neighbors': 15, 'pca__n_components': 2}),\n (0.885, {'knn_clf__n_neighbors': 15, 'pca__n_components': 3}),\n (0.87, {'knn_clf__n_neighbors': 15, 'pca__n_components': 4}),\n (0.86875, {'knn_clf__n_neighbors': 15, 'pca__n_components': 5}),\n (0.8575, {'knn_clf__n_neighbors': 15, 'pca__n_components': 6}),\n (0.85, {'knn_clf__n_neighbors': 15, 'pca__n_components': 7}),\n (0.8525, {'knn_clf__n_neighbors': 15, 'pca__n_components': 8}),\n (0.84, {'knn_clf__n_neighbors': 15, 'pca__n_components': 9}),\n (0.7825, {'knn_clf__n_neighbors': 16, 'pca__n_components': 1}),\n (0.8975, {'knn_clf__n_neighbors': 16, 'pca__n_components': 2}),\n (0.885, {'knn_clf__n_neighbors': 16, 'pca__n_components': 3}),\n (0.865, {'knn_clf__n_neighbors': 16, 'pca__n_components': 4}),\n (0.85625, {'knn_clf__n_neighbors': 16, 'pca__n_components': 5}),\n (0.8525, {'knn_clf__n_neighbors': 16, 'pca__n_components': 6}),\n (0.83875, {'knn_clf__n_neighbors': 16, 'pca__n_components': 7}),\n (0.83875, {'knn_clf__n_neighbors': 16, 'pca__n_components': 8}),\n (0.83375, {'knn_clf__n_neighbors': 16, 'pca__n_components': 9}),\n (0.78375, {'knn_clf__n_neighbors': 17, 'pca__n_components': 1}),\n (0.9, {'knn_clf__n_neighbors': 17, 'pca__n_components': 2}),\n (0.88625, {'knn_clf__n_neighbors': 17, 'pca__n_components': 3}),\n (0.8675, {'knn_clf__n_neighbors': 17, 'pca__n_components': 4}),\n (0.87125, {'knn_clf__n_neighbors': 17, 'pca__n_components': 5}),\n (0.86, {'knn_clf__n_neighbors': 17, 'pca__n_components': 6}),\n (0.85125, {'knn_clf__n_neighbors': 17, 'pca__n_components': 7}),\n (0.8425, {'knn_clf__n_neighbors': 17, 'pca__n_components': 8}),\n (0.84125, {'knn_clf__n_neighbors': 17, 'pca__n_components': 9}),\n (0.785, {'knn_clf__n_neighbors': 18, 'pca__n_components': 1}),\n (0.89875, {'knn_clf__n_neighbors': 18, 'pca__n_components': 2}),\n (0.88, {'knn_clf__n_neighbors': 18, 'pca__n_components': 3}),\n (0.86875, {'knn_clf__n_neighbors': 18, 'pca__n_components': 4}),\n (0.86375, {'knn_clf__n_neighbors': 18, 'pca__n_components': 5}),\n (0.8575, {'knn_clf__n_neighbors': 18, 'pca__n_components': 6}),\n (0.845, {'knn_clf__n_neighbors': 18, 'pca__n_components': 7}),\n (0.84, {'knn_clf__n_neighbors': 18, 'pca__n_components': 8}),\n (0.83, {'knn_clf__n_neighbors': 18, 'pca__n_components': 9}),\n (0.78625, {'knn_clf__n_neighbors': 19, 'pca__n_components': 1}),\n (0.895, {'knn_clf__n_neighbors': 19, 'pca__n_components': 2}),\n (0.88125, {'knn_clf__n_neighbors': 19, 'pca__n_components': 3}),\n (0.87, {'knn_clf__n_neighbors': 19, 'pca__n_components': 4}),\n (0.87, {'knn_clf__n_neighbors': 19, 'pca__n_components': 5}),\n (0.8575, {'knn_clf__n_neighbors': 19, 'pca__n_components': 6}),\n (0.85, {'knn_clf__n_neighbors': 19, 'pca__n_components': 7}),\n (0.84875, {'knn_clf__n_neighbors': 19, 'pca__n_components': 8}),\n (0.83875, {'knn_clf__n_neighbors': 19, 'pca__n_components': 9})]\n\n\nThose are quite a lot, let’s cut to the chase\n\ngrid_search2.best_score_, grid_search2.best_params_\n\n(0.905, {'knn_clf__n_neighbors': 11, 'pca__n_components': 2})\n\n\nWell, well, well. What do you know?. Hands down, that’s awesome\n\nknn_new2 = grid_search2.best_estimator_\ncscore(knn_new2), score(knn_new2)\n\n(0.9049154164713235, 0.865)\n\n\nAlthough the model stinks at the Test Set when comparing it with the KMeans transformed model, it did great on cross validation.\nAs we saw, the features are applicable in many situations and can be use in various ways..\nFor now, Goodbye!\nHave Fun Coding :)"
  },
  {
    "objectID": "posts/2021-06-17-a-data-science-resume-guide.html",
    "href": "posts/2021-06-17-a-data-science-resume-guide.html",
    "title": "A Data Science Resume Guide - Sample Included",
    "section": "",
    "text": "A few months back I had to assist an HR department with the recruitment of data science interns. Immediately after that process, I knew I had to address the issue of resumes. Back when I was an intern I knew no better and overlooked the same things an intern today may overlook. As a data science professional, your CV or resume needs to sell you well, focus on what you can deliver, and be visually appealing. It seems contradictory to claim that you can work with data and visualize it or build models (tasks that require accuracy and attention to detail) yet your CV or resume has spelling errors and is not detail-oriented nor appealing to look at.\nContinue reading here…"
  },
  {
    "objectID": "posts/2021-07-01-logistic-regression-using-breast-cancer-dataset.html",
    "href": "posts/2021-07-01-logistic-regression-using-breast-cancer-dataset.html",
    "title": "A Logistic Regression model using the Breast Cancer dataset",
    "section": "",
    "text": "Used when we have to choose between 2 values, in this case choosing between malignant and benign. The regression produces an S shape graph assumptions of logistic regression:\n\nThere should not be any multi_collinearity in the model, which means the features must be independent of each other.\nWe must include meaningful variables in our model\nWe should choose a lage sample size for our logisitic regression\n\nSolvers -> liblinear => is for multiclass classifiers\n\n# import important modules\nfrom sklearn.datasets import load_breast_cancer\nimport pandas as pd\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import roc_curve\nimport matplotlib.pyplot as plt\n\n# Determines how many columns should be displayed on the output data\npd.options.display.max_columns = 30\n\nLoad the dataset, which comes with Scikit Learn and explore information about the data\n\n# Loading the dataframe of breast cancer from sklearn.datasets\nbreast_cancer_dataset = load_breast_cancer()\nbreast_cancer = pd.DataFrame(breast_cancer_dataset.data, columns=breast_cancer_dataset.feature_names)\nbreast_cancer['result'] = breast_cancer_dataset['target']\n\n# Give a detailed description of the dataset\nprint(breast_cancer_dataset.keys())\nprint(breast_cancer_dataset['DESCR'])\n\ndict_keys(['data', 'target', 'frame', 'target_names', 'DESCR', 'feature_names', 'filename'])\n.. _breast_cancer_dataset:\n\nBreast cancer wisconsin (diagnostic) dataset\n--------------------------------------------\n\n**Data Set Characteristics:**\n\n    :Number of Instances: 569\n\n    :Number of Attributes: 30 numeric, predictive attributes and the class\n\n    :Attribute Information:\n        - radius (mean of distances from center to points on the perimeter)\n        - texture (standard deviation of gray-scale values)\n        - perimeter\n        - area\n        - smoothness (local variation in radius lengths)\n        - compactness (perimeter^2 / area - 1.0)\n        - concavity (severity of concave portions of the contour)\n        - concave points (number of concave portions of the contour)\n        - symmetry\n        - fractal dimension (\"coastline approximation\" - 1)\n\n        The mean, standard error, and \"worst\" or largest (mean of the three\n        worst/largest values) of these features were computed for each image,\n        resulting in 30 features.  For instance, field 0 is Mean Radius, field\n        10 is Radius SE, field 20 is Worst Radius.\n\n        - class:\n                - WDBC-Malignant\n                - WDBC-Benign\n\n    :Summary Statistics:\n\n    ===================================== ====== ======\n                                           Min    Max\n    ===================================== ====== ======\n    radius (mean):                        6.981  28.11\n    texture (mean):                       9.71   39.28\n    perimeter (mean):                     43.79  188.5\n    area (mean):                          143.5  2501.0\n    smoothness (mean):                    0.053  0.163\n    compactness (mean):                   0.019  0.345\n    concavity (mean):                     0.0    0.427\n    concave points (mean):                0.0    0.201\n    symmetry (mean):                      0.106  0.304\n    fractal dimension (mean):             0.05   0.097\n    radius (standard error):              0.112  2.873\n    texture (standard error):             0.36   4.885\n    perimeter (standard error):           0.757  21.98\n    area (standard error):                6.802  542.2\n    smoothness (standard error):          0.002  0.031\n    compactness (standard error):         0.002  0.135\n    concavity (standard error):           0.0    0.396\n    concave points (standard error):      0.0    0.053\n    symmetry (standard error):            0.008  0.079\n    fractal dimension (standard error):   0.001  0.03\n    radius (worst):                       7.93   36.04\n    texture (worst):                      12.02  49.54\n    perimeter (worst):                    50.41  251.2\n    area (worst):                         185.2  4254.0\n    smoothness (worst):                   0.071  0.223\n    compactness (worst):                  0.027  1.058\n    concavity (worst):                    0.0    1.252\n    concave points (worst):               0.0    0.291\n    symmetry (worst):                     0.156  0.664\n    fractal dimension (worst):            0.055  0.208\n    ===================================== ====== ======\n\n    :Missing Attribute Values: None\n\n    :Class Distribution: 212 - Malignant, 357 - Benign\n\n    :Creator:  Dr. William H. Wolberg, W. Nick Street, Olvi L. Mangasarian\n\n    :Donor: Nick Street\n\n    :Date: November, 1995\n\nThis is a copy of UCI ML Breast Cancer Wisconsin (Diagnostic) datasets.\nhttps://goo.gl/U2Uwz2\n\nFeatures are computed from a digitized image of a fine needle\naspirate (FNA) of a breast mass.  They describe\ncharacteristics of the cell nuclei present in the image.\n\nSeparating plane described above was obtained using\nMultisurface Method-Tree (MSM-T) [K. P. Bennett, \"Decision Tree\nConstruction Via Linear Programming.\" Proceedings of the 4th\nMidwest Artificial Intelligence and Cognitive Science Society,\npp. 97-101, 1992], a classification method which uses linear\nprogramming to construct a decision tree.  Relevant features\nwere selected using an exhaustive search in the space of 1-4\nfeatures and 1-3 separating planes.\n\nThe actual linear program used to obtain the separating plane\nin the 3-dimensional space is that described in:\n[K. P. Bennett and O. L. Mangasarian: \"Robust Linear\nProgramming Discrimination of Two Linearly Inseparable Sets\",\nOptimization Methods and Software 1, 1992, 23-34].\n\nThis database is also available through the UW CS ftp server:\n\nftp ftp.cs.wisc.edu\ncd math-prog/cpo-dataset/machine-learn/WDBC/\n\n.. topic:: References\n\n   - W.N. Street, W.H. Wolberg and O.L. Mangasarian. Nuclear feature extraction \n     for breast tumor diagnosis. IS&T/SPIE 1993 International Symposium on \n     Electronic Imaging: Science and Technology, volume 1905, pages 861-870,\n     San Jose, CA, 1993.\n   - O.L. Mangasarian, W.N. Street and W.H. Wolberg. Breast cancer diagnosis and \n     prognosis via linear programming. Operations Research, 43(4), pages 570-577, \n     July-August 1995.\n   - W.H. Wolberg, W.N. Street, and O.L. Mangasarian. Machine learning techniques\n     to diagnose breast cancer from fine-needle aspirates. Cancer Letters 77 (1994) \n     163-171.\n\n\nIn order to know what the target set represents, output is -> [‘malignant’ ‘benign’] showing that a 0=>malignant and 1=>benign\n\nprint(breast_cancer_dataset['target_names'])\n\n['malignant' 'benign']\n\n\nExploration of features..\n\nbreast_cancer.describe()\n\n\n\n\n\n  \n    \n      \n      mean radius\n      mean texture\n      mean perimeter\n      mean area\n      mean smoothness\n      mean compactness\n      mean concavity\n      mean concave points\n      mean symmetry\n      mean fractal dimension\n      radius error\n      texture error\n      perimeter error\n      area error\n      smoothness error\n      ...\n      concavity error\n      concave points error\n      symmetry error\n      fractal dimension error\n      worst radius\n      worst texture\n      worst perimeter\n      worst area\n      worst smoothness\n      worst compactness\n      worst concavity\n      worst concave points\n      worst symmetry\n      worst fractal dimension\n      result\n    \n  \n  \n    \n      count\n      569.000000\n      569.000000\n      569.000000\n      569.000000\n      569.000000\n      569.000000\n      569.000000\n      569.000000\n      569.000000\n      569.000000\n      569.000000\n      569.000000\n      569.000000\n      569.000000\n      569.000000\n      ...\n      569.000000\n      569.000000\n      569.000000\n      569.000000\n      569.000000\n      569.000000\n      569.000000\n      569.000000\n      569.000000\n      569.000000\n      569.000000\n      569.000000\n      569.000000\n      569.000000\n      569.000000\n    \n    \n      mean\n      14.127292\n      19.289649\n      91.969033\n      654.889104\n      0.096360\n      0.104341\n      0.088799\n      0.048919\n      0.181162\n      0.062798\n      0.405172\n      1.216853\n      2.866059\n      40.337079\n      0.007041\n      ...\n      0.031894\n      0.011796\n      0.020542\n      0.003795\n      16.269190\n      25.677223\n      107.261213\n      880.583128\n      0.132369\n      0.254265\n      0.272188\n      0.114606\n      0.290076\n      0.083946\n      0.627417\n    \n    \n      std\n      3.524049\n      4.301036\n      24.298981\n      351.914129\n      0.014064\n      0.052813\n      0.079720\n      0.038803\n      0.027414\n      0.007060\n      0.277313\n      0.551648\n      2.021855\n      45.491006\n      0.003003\n      ...\n      0.030186\n      0.006170\n      0.008266\n      0.002646\n      4.833242\n      6.146258\n      33.602542\n      569.356993\n      0.022832\n      0.157336\n      0.208624\n      0.065732\n      0.061867\n      0.018061\n      0.483918\n    \n    \n      min\n      6.981000\n      9.710000\n      43.790000\n      143.500000\n      0.052630\n      0.019380\n      0.000000\n      0.000000\n      0.106000\n      0.049960\n      0.111500\n      0.360200\n      0.757000\n      6.802000\n      0.001713\n      ...\n      0.000000\n      0.000000\n      0.007882\n      0.000895\n      7.930000\n      12.020000\n      50.410000\n      185.200000\n      0.071170\n      0.027290\n      0.000000\n      0.000000\n      0.156500\n      0.055040\n      0.000000\n    \n    \n      25%\n      11.700000\n      16.170000\n      75.170000\n      420.300000\n      0.086370\n      0.064920\n      0.029560\n      0.020310\n      0.161900\n      0.057700\n      0.232400\n      0.833900\n      1.606000\n      17.850000\n      0.005169\n      ...\n      0.015090\n      0.007638\n      0.015160\n      0.002248\n      13.010000\n      21.080000\n      84.110000\n      515.300000\n      0.116600\n      0.147200\n      0.114500\n      0.064930\n      0.250400\n      0.071460\n      0.000000\n    \n    \n      50%\n      13.370000\n      18.840000\n      86.240000\n      551.100000\n      0.095870\n      0.092630\n      0.061540\n      0.033500\n      0.179200\n      0.061540\n      0.324200\n      1.108000\n      2.287000\n      24.530000\n      0.006380\n      ...\n      0.025890\n      0.010930\n      0.018730\n      0.003187\n      14.970000\n      25.410000\n      97.660000\n      686.500000\n      0.131300\n      0.211900\n      0.226700\n      0.099930\n      0.282200\n      0.080040\n      1.000000\n    \n    \n      75%\n      15.780000\n      21.800000\n      104.100000\n      782.700000\n      0.105300\n      0.130400\n      0.130700\n      0.074000\n      0.195700\n      0.066120\n      0.478900\n      1.474000\n      3.357000\n      45.190000\n      0.008146\n      ...\n      0.042050\n      0.014710\n      0.023480\n      0.004558\n      18.790000\n      29.720000\n      125.400000\n      1084.000000\n      0.146000\n      0.339100\n      0.382900\n      0.161400\n      0.317900\n      0.092080\n      1.000000\n    \n    \n      max\n      28.110000\n      39.280000\n      188.500000\n      2501.000000\n      0.163400\n      0.345400\n      0.426800\n      0.201200\n      0.304000\n      0.097440\n      2.873000\n      4.885000\n      21.980000\n      542.200000\n      0.031130\n      ...\n      0.396000\n      0.052790\n      0.078950\n      0.029840\n      36.040000\n      49.540000\n      251.200000\n      4254.000000\n      0.222600\n      1.058000\n      1.252000\n      0.291000\n      0.663800\n      0.207500\n      1.000000\n    \n  \n\n8 rows × 31 columns\n\n\n\n\nbreast_cancer.info()\n\n<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 569 entries, 0 to 568\nData columns (total 31 columns):\n #   Column                   Non-Null Count  Dtype  \n---  ------                   --------------  -----  \n 0   mean radius              569 non-null    float64\n 1   mean texture             569 non-null    float64\n 2   mean perimeter           569 non-null    float64\n 3   mean area                569 non-null    float64\n 4   mean smoothness          569 non-null    float64\n 5   mean compactness         569 non-null    float64\n 6   mean concavity           569 non-null    float64\n 7   mean concave points      569 non-null    float64\n 8   mean symmetry            569 non-null    float64\n 9   mean fractal dimension   569 non-null    float64\n 10  radius error             569 non-null    float64\n 11  texture error            569 non-null    float64\n 12  perimeter error          569 non-null    float64\n 13  area error               569 non-null    float64\n 14  smoothness error         569 non-null    float64\n 15  compactness error        569 non-null    float64\n 16  concavity error          569 non-null    float64\n 17  concave points error     569 non-null    float64\n 18  symmetry error           569 non-null    float64\n 19  fractal dimension error  569 non-null    float64\n 20  worst radius             569 non-null    float64\n 21  worst texture            569 non-null    float64\n 22  worst perimeter          569 non-null    float64\n 23  worst area               569 non-null    float64\n 24  worst smoothness         569 non-null    float64\n 25  worst compactness        569 non-null    float64\n 26  worst concavity          569 non-null    float64\n 27  worst concave points     569 non-null    float64\n 28  worst symmetry           569 non-null    float64\n 29  worst fractal dimension  569 non-null    float64\n 30  result                   569 non-null    int32  \ndtypes: float64(30), int32(1)\nmemory usage: 135.7 KB\n\n\nThe dataset does not include any null or missing values so there won’t be any need for data wrangling (dealing with missing values).\n\nX = breast_cancer.values\ny = breast_cancer['result'].values\n\nIt is also possible to instantiate X and y without .values (.values changes the Dataframe to a numpy array)\nFor good training and testing the dataset, we should split our data. We are going to split our data into 70% training size and 30% test size. It’s more convenient to test our dataset with the small portion of the dataset, but it shouldn’t be too small.\n\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.7, random_state=1)\n\nmodel = LogisticRegression(solver='liblinear')\nmodel.fit(X_train, y_train)\n\nLogisticRegression(solver='liblinear')\n\n\nIf we try to fit using the default solver, we get a convergence warning meaning the model needs more time to find the optimal solution, This can be solved by using a different solver. In this instance we shall use the ‘liblinear’ solver.\n\ny_pred = model.predict(X_test)\n\n\nfrom sklearn.metrics import accuracy_score, precision_score, recall_score, f1_score\n\n# each function takes two 1-dimensional numpy arrays: the true values and the predicted values of the target\nprint(\"accuracy: \", accuracy_score(y_test, y_pred))\nprint(\"precision: \", precision_score(y_test, y_pred))\nprint(\"recall: \", recall_score(y_test, y_pred))\nprint(\"f1_score: \", f1_score(y_test, y_pred))\n\n# using scikit-learn we are able to get the four values in the confusion matrix\nfrom sklearn.metrics import confusion_matrix\nprint(confusion_matrix(y_test, y_pred))\n\naccuracy:  0.9624060150375939\nprecision:  0.95703125\nrecall:  0.9839357429718876\nf1_score:  0.9702970297029703\n[[139  11]\n [  4 245]]\n\n\nAll of the metric calculations show good scores which means that our Logistic Regression model is good\n        # USING ROC CURVE #\nAn ROC curve (receiver operating characteristic curve) is a graph showing the performance of a classification model at all classification thresholds. The ROC curve is a graph of the specificity vs sensitivity i.e specificity is the % actual negatives correctly predicted and sensitivity being the % actual positives correctly predicted.\n\ny_pred_proba = model.predict_proba(X_test)\nfpr, tpr, thresholds = roc_curve(y_test, y_pred_proba[:, 1])\n\nplt.plot(fpr, tpr)\nplt.plot([0, 1], [0, 1], linestyle='--')\n# plt.xlim(0.0, 1.0)\n# plt.ylim(0.0, 1.0)\nplt.xlabel('1 - specificity')\nplt.ylabel('sensitivity')\n\nplt.show()"
  },
  {
    "objectID": "posts/2021-07-14-Starbucks-Optimising-Customer-Segmentation-with-Random-Forest-and-Gradient-Boosting.html",
    "href": "posts/2021-07-14-Starbucks-Optimising-Customer-Segmentation-with-Random-Forest-and-Gradient-Boosting.html",
    "title": "blog",
    "section": "",
    "text": "Lionel Mpofu explores marketing analytics strategies using random forests and gradient boosting models.."
  },
  {
    "objectID": "posts/2021-07-14-Starbucks-Optimising-Customer-Segmentation-with-Random-Forest-and-Gradient-Boosting.html#data-preprocessing",
    "href": "posts/2021-07-14-Starbucks-Optimising-Customer-Segmentation-with-Random-Forest-and-Gradient-Boosting.html#data-preprocessing",
    "title": "blog",
    "section": "Data Preprocessing",
    "text": "Data Preprocessing\n\ntranscript_for_modelling=updated_cleaned_transcript.copy()\n\n\nportfolio_for_modelling[:5]\n\n\n\n\n\n  \n    \n      \n      possible_reward\n      spent_required\n      offer_duration_days\n      offer_type\n      offer_id\n      channel_email\n      channel_mobile\n      channel_social\n      channel_web\n    \n  \n  \n    \n      0\n      10\n      10\n      7\n      bogo\n      ae264e3637204a6fb9bb56bc8210ddfd\n      1\n      1\n      1\n      0\n    \n    \n      1\n      10\n      10\n      5\n      bogo\n      4d5c57ea9a6940dd891ad53e9dbe8da0\n      1\n      1\n      1\n      1\n    \n    \n      2\n      0\n      0\n      4\n      informational\n      3f207df678b143eea3cee63160fa8bed\n      1\n      1\n      0\n      1\n    \n    \n      3\n      5\n      5\n      7\n      bogo\n      9b98b8c7a33c4b65b9aebfe6a799e6d9\n      1\n      1\n      0\n      1\n    \n    \n      4\n      5\n      20\n      10\n      discount\n      0b1e1539f2cc45b7b9fa7c272da2e1d7\n      1\n      0\n      0\n      1\n    \n  \n\n\n\n\n\nprofile_for_modelling\n\n\n\n\n\n  \n    \n      \n      gender\n      age\n      customer_id\n      became_member_on\n      income\n      year\n      quarter\n      days_of_membership\n    \n  \n  \n    \n      1\n      F\n      55\n      0610b486422d4921ae7d2bf64640c50b\n      2017-07-15\n      112000.0\n      2017\n      3\n      460\n    \n    \n      3\n      F\n      75\n      78afa995795e4d85b5d9ceeca43f5fef\n      2017-05-09\n      100000.0\n      2017\n      2\n      527\n    \n    \n      5\n      M\n      68\n      e2127556f4f64592b11af22de27a7932\n      2018-04-26\n      70000.0\n      2018\n      2\n      175\n    \n    \n      8\n      M\n      65\n      389bc3fa690240e798340f5a15918d5c\n      2018-02-09\n      53000.0\n      2018\n      1\n      251\n    \n    \n      12\n      M\n      58\n      2eeac8d8feae4a8cad5a6af0499a211d\n      2017-11-11\n      51000.0\n      2017\n      4\n      341\n    \n    \n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n    \n    \n      16995\n      F\n      45\n      6d5f3a774f3d4714ab0c092238f3a1d7\n      2018-06-04\n      54000.0\n      2018\n      2\n      136\n    \n    \n      16996\n      M\n      61\n      2cb4f97358b841b9a9773a7aa05a9d77\n      2018-07-13\n      72000.0\n      2018\n      3\n      97\n    \n    \n      16997\n      M\n      49\n      01d26f638c274aa0b965d24cefe3183f\n      2017-01-26\n      73000.0\n      2017\n      1\n      630\n    \n    \n      16998\n      F\n      83\n      9dc1421481194dcd9400aec7c9ae6366\n      2016-03-07\n      50000.0\n      2016\n      1\n      955\n    \n    \n      16999\n      F\n      62\n      e4052622e5ba45a8b96b59aba68cf068\n      2017-07-22\n      82000.0\n      2017\n      3\n      453\n    \n  \n\n14825 rows × 8 columns\n\n\n\n\nprofile_for_modelling.drop(columns=['became_member_on','year','quarter'],axis=1,inplace=True)\n\n\ndf7 = pd.merge(transcript_for_modelling, profile_for_modelling, on='customer_id', how='left')\n\n\ncombined_df=pd.merge(df7, portfolio_for_modelling, on='offer_id', how='left')\n\n\ncombined_df[:5]\n\n\n\n\n\n  \n    \n      \n      Unnamed: 0\n      customer_id\n      event\n      time\n      money_spent\n      offer_id\n      money_gained\n      offer_completed\n      offer_received\n      offer_viewed\n      ...\n      income\n      days_of_membership\n      possible_reward\n      spent_required\n      offer_duration_days\n      offer_type\n      channel_email\n      channel_mobile\n      channel_social\n      channel_web\n    \n  \n  \n    \n      0\n      0\n      78afa995795e4d85b5d9ceeca43f5fef\n      offer received\n      0.0\n      0.0\n      9b98b8c7a33c4b65b9aebfe6a799e6d9\n      0.0\n      0\n      1\n      0\n      ...\n      100000.0\n      527\n      5.0\n      5.0\n      7.0\n      bogo\n      1.0\n      1.0\n      0.0\n      1.0\n    \n    \n      1\n      2\n      e2127556f4f64592b11af22de27a7932\n      offer received\n      0.0\n      0.0\n      2906b810c7d4411798c6938adc9daaa5\n      0.0\n      0\n      1\n      0\n      ...\n      70000.0\n      175\n      2.0\n      10.0\n      7.0\n      discount\n      1.0\n      1.0\n      0.0\n      1.0\n    \n    \n      2\n      5\n      389bc3fa690240e798340f5a15918d5c\n      offer received\n      0.0\n      0.0\n      f19421c1d4aa40978ebb69ca19b0e20d\n      0.0\n      0\n      1\n      0\n      ...\n      53000.0\n      251\n      5.0\n      5.0\n      5.0\n      bogo\n      1.0\n      1.0\n      1.0\n      1.0\n    \n    \n      3\n      7\n      2eeac8d8feae4a8cad5a6af0499a211d\n      offer received\n      0.0\n      0.0\n      3f207df678b143eea3cee63160fa8bed\n      0.0\n      0\n      1\n      0\n      ...\n      51000.0\n      341\n      0.0\n      0.0\n      4.0\n      informational\n      1.0\n      1.0\n      0.0\n      1.0\n    \n    \n      4\n      8\n      aa4862eba776480b8bb9c68455b8c2e1\n      offer received\n      0.0\n      0.0\n      0b1e1539f2cc45b7b9fa7c272da2e1d7\n      0.0\n      0\n      1\n      0\n      ...\n      57000.0\n      402\n      5.0\n      20.0\n      10.0\n      discount\n      1.0\n      0.0\n      0.0\n      1.0\n    \n  \n\n5 rows × 24 columns\n\n\n\n\ncolumns_to_keep = ['customer_id','age','gender',\n 'income','channel_social','channel_email','channel_mobile','channel_web','offer_duration_days',\n'money_gained','spent_required','days_of_membership',\n 'offer_type',\n 'offer_received',\n 'offer_viewed',\n 'offer_completed']\n\n\nmodel_df=combined_df[columns_to_keep]\n\n\n%%time\nimproved_model_df=model_df.groupby(['customer_id','gender','income','offer_type','spent_required','money_gained'], as_index=False).sum()\n\nCPU times: user 296 ms, sys: 28 ms, total: 324 ms\nWall time: 326 ms\n\n\n\nimproved_model_df\n\n\n\n\n\n  \n    \n      \n      customer_id\n      gender\n      income\n      offer_type\n      spent_required\n      money_gained\n      age\n      channel_social\n      channel_email\n      channel_mobile\n      channel_web\n      offer_duration_days\n      days_of_membership\n      offer_received\n      offer_viewed\n      offer_completed\n    \n  \n  \n    \n      0\n      0009655768c64bdeb2e877511632db8f\n      M\n      72000.0\n      bogo\n      5.0\n      0.0\n      33\n      1.0\n      1.0\n      1.0\n      1.0\n      5.0\n      545\n      1\n      0\n      0\n    \n    \n      1\n      0009655768c64bdeb2e877511632db8f\n      M\n      72000.0\n      bogo\n      5.0\n      5.0\n      33\n      1.0\n      1.0\n      1.0\n      1.0\n      5.0\n      545\n      0\n      1\n      1\n    \n    \n      2\n      0009655768c64bdeb2e877511632db8f\n      M\n      72000.0\n      discount\n      10.0\n      0.0\n      66\n      1.0\n      2.0\n      2.0\n      2.0\n      17.0\n      1090\n      2\n      0\n      0\n    \n    \n      3\n      0009655768c64bdeb2e877511632db8f\n      M\n      72000.0\n      discount\n      10.0\n      2.0\n      66\n      1.0\n      2.0\n      2.0\n      2.0\n      17.0\n      1090\n      0\n      1\n      1\n    \n    \n      4\n      0009655768c64bdeb2e877511632db8f\n      M\n      72000.0\n      informational\n      0.0\n      0.0\n      132\n      2.0\n      4.0\n      4.0\n      2.0\n      14.0\n      2180\n      2\n      2\n      0\n    \n    \n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n    \n    \n      71395\n      ffff82501cea40309d5fdd7edcca4a07\n      F\n      62000.0\n      bogo\n      5.0\n      5.0\n      45\n      0.0\n      1.0\n      1.0\n      1.0\n      7.0\n      692\n      0\n      1\n      1\n    \n    \n      71396\n      ffff82501cea40309d5fdd7edcca4a07\n      F\n      62000.0\n      discount\n      10.0\n      0.0\n      180\n      1.0\n      4.0\n      4.0\n      4.0\n      31.0\n      2768\n      4\n      0\n      0\n    \n    \n      71397\n      ffff82501cea40309d5fdd7edcca4a07\n      F\n      62000.0\n      discount\n      10.0\n      2.0\n      180\n      1.0\n      4.0\n      4.0\n      4.0\n      31.0\n      2768\n      0\n      4\n      4\n    \n    \n      71398\n      ffff82501cea40309d5fdd7edcca4a07\n      F\n      62000.0\n      discount\n      20.0\n      0.0\n      45\n      0.0\n      1.0\n      0.0\n      1.0\n      10.0\n      692\n      1\n      0\n      0\n    \n    \n      71399\n      ffff82501cea40309d5fdd7edcca4a07\n      F\n      62000.0\n      discount\n      20.0\n      5.0\n      45\n      0.0\n      1.0\n      0.0\n      1.0\n      10.0\n      692\n      0\n      1\n      1\n    \n  \n\n71400 rows × 16 columns\n\n\n\n\n# First, compare how many times the offer was viewed vs. received:\nimproved_model_df['label'] = np.where((improved_model_df['offer_viewed'] >= improved_model_df['offer_received']) &\n                       (improved_model_df['offer_viewed'] > 0), \"no order\", \"no view\")\n\n\n# Next, compare how many times offer was completed vs. viewed\n# We use 0.5 threshold as in at least half of offers has to be completed:\nimproved_model_df['label']  = np.where(((improved_model_df['offer_completed'] / improved_model_df['offer_viewed']) >= 0.5) &\n                       (improved_model_df['offer_viewed'] > 0) & \n                       (improved_model_df['offer_completed'] > 0), \"possible order\", \"no order\")\n\n\n# Finally, if there is no order and no view:\nimproved_model_df['label'] = np.where((improved_model_df['offer_viewed'] == 0) & \n                       (improved_model_df['offer_completed'] == 0), \"no view\", improved_model_df['label'])\n\n\nimproved_model_df['label'].value_counts()\n\nno view           31804\npossible order    20080\nno order          19516\nName: label, dtype: int64\n\n\n\nlen(improved_model_df)\n\n71400\n\n\n\n# Drop the event columns, we don't need them anymore:\nimproved_model_df = improved_model_df.drop(['offer_received', 'offer_viewed', 'offer_completed'], axis=1)\n\n\nimproved_model_df\n\n\n\n\n\n  \n    \n      \n      customer_id\n      gender\n      income\n      offer_type\n      spent_required\n      money_gained\n      age\n      channel_social\n      channel_email\n      channel_mobile\n      channel_web\n      offer_duration_days\n      days_of_membership\n      label\n    \n  \n  \n    \n      0\n      0009655768c64bdeb2e877511632db8f\n      M\n      72000.0\n      bogo\n      5.0\n      0.0\n      33\n      1.0\n      1.0\n      1.0\n      1.0\n      5.0\n      545\n      no view\n    \n    \n      1\n      0009655768c64bdeb2e877511632db8f\n      M\n      72000.0\n      bogo\n      5.0\n      5.0\n      33\n      1.0\n      1.0\n      1.0\n      1.0\n      5.0\n      545\n      possible order\n    \n    \n      2\n      0009655768c64bdeb2e877511632db8f\n      M\n      72000.0\n      discount\n      10.0\n      0.0\n      66\n      1.0\n      2.0\n      2.0\n      2.0\n      17.0\n      1090\n      no view\n    \n    \n      3\n      0009655768c64bdeb2e877511632db8f\n      M\n      72000.0\n      discount\n      10.0\n      2.0\n      66\n      1.0\n      2.0\n      2.0\n      2.0\n      17.0\n      1090\n      possible order\n    \n    \n      4\n      0009655768c64bdeb2e877511632db8f\n      M\n      72000.0\n      informational\n      0.0\n      0.0\n      132\n      2.0\n      4.0\n      4.0\n      2.0\n      14.0\n      2180\n      no order\n    \n    \n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n    \n    \n      71395\n      ffff82501cea40309d5fdd7edcca4a07\n      F\n      62000.0\n      bogo\n      5.0\n      5.0\n      45\n      0.0\n      1.0\n      1.0\n      1.0\n      7.0\n      692\n      possible order\n    \n    \n      71396\n      ffff82501cea40309d5fdd7edcca4a07\n      F\n      62000.0\n      discount\n      10.0\n      0.0\n      180\n      1.0\n      4.0\n      4.0\n      4.0\n      31.0\n      2768\n      no view\n    \n    \n      71397\n      ffff82501cea40309d5fdd7edcca4a07\n      F\n      62000.0\n      discount\n      10.0\n      2.0\n      180\n      1.0\n      4.0\n      4.0\n      4.0\n      31.0\n      2768\n      possible order\n    \n    \n      71398\n      ffff82501cea40309d5fdd7edcca4a07\n      F\n      62000.0\n      discount\n      20.0\n      0.0\n      45\n      0.0\n      1.0\n      0.0\n      1.0\n      10.0\n      692\n      no view\n    \n    \n      71399\n      ffff82501cea40309d5fdd7edcca4a07\n      F\n      62000.0\n      discount\n      20.0\n      5.0\n      45\n      0.0\n      1.0\n      0.0\n      1.0\n      10.0\n      692\n      possible order\n    \n  \n\n71400 rows × 14 columns\n\n\n\n\nimproved_model_df[\"output\"] = np.where(improved_model_df['label']=='no view', 0, np.nan)\n\n\nimproved_model_df[\"output\"] = np.where(improved_model_df['label']=='no order', 1, improved_model_df[\"output\"])\n\n\nimproved_model_df[\"output\"] = np.where(improved_model_df['label']=='possible order', 2, improved_model_df[\"output\"])\n\n\n\nimproved_model_df.groupby(['label', 'output']).mean().index\n\nMultiIndex([(      'no order', 1.0),\n            (       'no view', 0.0),\n            ('possible order', 2.0)],\n           names=['label', 'output'])\n\n\n\nimproved_model_df.isnull().sum()\n\ncustomer_id            0\ngender                 0\nincome                 0\noffer_type             0\nspent_required         0\nmoney_gained           0\nage                    0\nchannel_social         0\nchannel_email          0\nchannel_mobile         0\nchannel_web            0\noffer_duration_days    0\ndays_of_membership     0\nlabel                  0\noutput                 0\ndtype: int64\n\n\n\n\nimproved_model_df = improved_model_df.join(pd.get_dummies(improved_model_df['gender'])).drop('gender', axis=1) # drop the original column\n\nfor column in ['M', 'F', 'O']:\n    improved_model_df = improved_model_df.rename(columns={column: (\"gender_\" + column.replace(\" \", \"_\"))}) # rename new columns\n    \n    \nimproved_model_df = improved_model_df.join(pd.get_dummies(improved_model_df['offer_type'])).drop('offer_type', axis=1) # drop the original column\n\n\n\nimproved_model_df\n\n\n\n\n\n  \n    \n      \n      customer_id\n      income\n      spent_required\n      money_gained\n      age\n      channel_social\n      channel_email\n      channel_mobile\n      channel_web\n      offer_duration_days\n      days_of_membership\n      label\n      output\n      gender_F\n      gender_M\n      gender_O\n      bogo\n      discount\n      informational\n    \n  \n  \n    \n      0\n      0009655768c64bdeb2e877511632db8f\n      72000.0\n      5.0\n      0.0\n      33\n      1.0\n      1.0\n      1.0\n      1.0\n      5.0\n      545\n      no view\n      0.0\n      0\n      1\n      0\n      1\n      0\n      0\n    \n    \n      1\n      0009655768c64bdeb2e877511632db8f\n      72000.0\n      5.0\n      5.0\n      33\n      1.0\n      1.0\n      1.0\n      1.0\n      5.0\n      545\n      possible order\n      2.0\n      0\n      1\n      0\n      1\n      0\n      0\n    \n    \n      2\n      0009655768c64bdeb2e877511632db8f\n      72000.0\n      10.0\n      0.0\n      66\n      1.0\n      2.0\n      2.0\n      2.0\n      17.0\n      1090\n      no view\n      0.0\n      0\n      1\n      0\n      0\n      1\n      0\n    \n    \n      3\n      0009655768c64bdeb2e877511632db8f\n      72000.0\n      10.0\n      2.0\n      66\n      1.0\n      2.0\n      2.0\n      2.0\n      17.0\n      1090\n      possible order\n      2.0\n      0\n      1\n      0\n      0\n      1\n      0\n    \n    \n      4\n      0009655768c64bdeb2e877511632db8f\n      72000.0\n      0.0\n      0.0\n      132\n      2.0\n      4.0\n      4.0\n      2.0\n      14.0\n      2180\n      no order\n      1.0\n      0\n      1\n      0\n      0\n      0\n      1\n    \n    \n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n    \n    \n      71395\n      ffff82501cea40309d5fdd7edcca4a07\n      62000.0\n      5.0\n      5.0\n      45\n      0.0\n      1.0\n      1.0\n      1.0\n      7.0\n      692\n      possible order\n      2.0\n      1\n      0\n      0\n      1\n      0\n      0\n    \n    \n      71396\n      ffff82501cea40309d5fdd7edcca4a07\n      62000.0\n      10.0\n      0.0\n      180\n      1.0\n      4.0\n      4.0\n      4.0\n      31.0\n      2768\n      no view\n      0.0\n      1\n      0\n      0\n      0\n      1\n      0\n    \n    \n      71397\n      ffff82501cea40309d5fdd7edcca4a07\n      62000.0\n      10.0\n      2.0\n      180\n      1.0\n      4.0\n      4.0\n      4.0\n      31.0\n      2768\n      possible order\n      2.0\n      1\n      0\n      0\n      0\n      1\n      0\n    \n    \n      71398\n      ffff82501cea40309d5fdd7edcca4a07\n      62000.0\n      20.0\n      0.0\n      45\n      0.0\n      1.0\n      0.0\n      1.0\n      10.0\n      692\n      no view\n      0.0\n      1\n      0\n      0\n      0\n      1\n      0\n    \n    \n      71399\n      ffff82501cea40309d5fdd7edcca4a07\n      62000.0\n      20.0\n      5.0\n      45\n      0.0\n      1.0\n      0.0\n      1.0\n      10.0\n      692\n      possible order\n      2.0\n      1\n      0\n      0\n      0\n      1\n      0\n    \n  \n\n71400 rows × 19 columns\n\n\n\n\nimproved_model_df = improved_model_df.drop(['customer_id', 'label'], axis=1)\n\n\nX = improved_model_df.drop(['output'], axis=1)\ny = improved_model_df['output']\n\n\nfeature_names=X.columns\n\n\n# Split the dataset into 2/3 training and 1/3 testing sets:\nX_train, X_test, y_train, y_test = sklearn.model_selection.train_test_split(X, y, test_size=0.33)\n\n\n\nCater for class imbalance by normalizing the data\n\nss = StandardScaler()\nX_train_scaled = ss.fit_transform(X_train)\nX_test_scaled = ss.transform(X_test)\ny_train = np.array(y_train)\n\n\n\nDimensionality reduction\n\npca_test = PCA(n_components=16)\npca_test.fit(X_train_scaled)\nsns.set(style='whitegrid')\nplt.plot(np.cumsum(pca_test.explained_variance_ratio_))\nplt.xlabel('number of components')\nplt.ylabel('cumulative explained variance')\nplt.axvline(linewidth=4, color='r', linestyle = '--', x=10, ymin=0, ymax=1)\ndisplay(plt.show())\nevr = pca_test.explained_variance_ratio_\ncvr = np.cumsum(pca_test.explained_variance_ratio_)\npca_df = pd.DataFrame()\npca_df['Cumulative Variance Ratio'] = cvr\npca_df['Explained Variance Ratio'] = evr\ndisplay(pca_df.head(10))\n\n\n\n\nNone\n\n\n\n\n\n\n  \n    \n      \n      Cumulative Variance Ratio\n      Explained Variance Ratio\n    \n  \n  \n    \n      0\n      0.301023\n      0.301023\n    \n    \n      1\n      0.452145\n      0.151122\n    \n    \n      2\n      0.581108\n      0.128963\n    \n    \n      3\n      0.687933\n      0.106825\n    \n    \n      4\n      0.752388\n      0.064455\n    \n    \n      5\n      0.811185\n      0.058798\n    \n    \n      6\n      0.859530\n      0.048345\n    \n    \n      7\n      0.903105\n      0.043575\n    \n    \n      8\n      0.943013\n      0.039908\n    \n    \n      9\n      0.970594\n      0.027581\n    \n  \n\n\n\n\nThe first 10 components explain more than 80% of the variance. So we reduce the features from 16 to 10\n\npca = PCA(n_components=10)\npca.fit(X_train_scaled)\nX_train_scaled_pca = pca.transform(X_train_scaled)\nX_test_scaled_pca = pca.transform(X_test_scaled)\n\n\nfeature_names\n\nIndex(['income', 'spent_required', 'money_gained', 'age', 'channel_social',\n       'channel_email', 'channel_mobile', 'channel_web', 'offer_duration_days',\n       'days_of_membership', 'gender_F', 'gender_M', 'gender_O', 'bogo',\n       'discount', 'informational'],\n      dtype='object')\n\n\nShow the 10 PCA components that will be used\n\npca_dims = []\nfor x in range(0, len(pca_df)):\n    pca_dims.append('PCA Component {}'.format(x))\n    \npca_test_df = pd.DataFrame(pca_test.components_, columns=feature_names, index=pca_dims)\npca_test_df.head(10).T\n\n\n\n\n\n  \n    \n      \n      PCA Component 0\n      PCA Component 1\n      PCA Component 2\n      PCA Component 3\n      PCA Component 4\n      PCA Component 5\n      PCA Component 6\n      PCA Component 7\n      PCA Component 8\n      PCA Component 9\n    \n  \n  \n    \n      income\n      -0.028562\n      -0.036625\n      0.275378\n      0.006455\n      -0.158450\n      0.891863\n      -0.226312\n      0.089534\n      0.115347\n      -0.097069\n    \n    \n      spent_required\n      -0.169380\n      0.446360\n      0.073624\n      0.296529\n      -0.015432\n      0.029398\n      0.156203\n      0.057561\n      0.182167\n      0.566722\n    \n    \n      money_gained\n      -0.128817\n      -0.174937\n      0.072448\n      0.398101\n      -0.013212\n      0.193610\n      0.608934\n      -0.104287\n      -0.602865\n      -0.072534\n    \n    \n      age\n      0.392124\n      0.040493\n      0.097037\n      -0.001928\n      -0.018094\n      0.157566\n      -0.002695\n      0.043434\n      -0.110044\n      0.380196\n    \n    \n      channel_social\n      0.329502\n      -0.080087\n      0.005546\n      0.137463\n      -0.003726\n      -0.062453\n      0.227764\n      0.652029\n      0.168288\n      -0.262367\n    \n    \n      channel_email\n      0.441519\n      0.052701\n      0.026723\n      0.010143\n      0.005786\n      -0.001670\n      0.032748\n      0.038297\n      -0.083064\n      0.182826\n    \n    \n      channel_mobile\n      0.432665\n      -0.088407\n      0.007308\n      -0.003196\n      0.009227\n      -0.025921\n      -0.010107\n      0.114983\n      -0.100969\n      -0.203393\n    \n    \n      channel_web\n      0.286502\n      0.273583\n      0.052277\n      0.102929\n      0.021088\n      -0.033636\n      -0.367388\n      -0.445522\n      -0.353391\n      -0.257306\n    \n    \n      offer_duration_days\n      0.331012\n      0.354808\n      0.065766\n      0.176817\n      0.006436\n      -0.026223\n      -0.019763\n      0.034665\n      -0.066331\n      0.162309\n    \n    \n      days_of_membership\n      0.275249\n      0.017564\n      -0.000360\n      0.001778\n      -0.033827\n      0.094164\n      0.488847\n      -0.549413\n      0.578696\n      -0.185649\n    \n    \n      gender_F\n      -0.034878\n      -0.062536\n      0.665758\n      -0.090922\n      -0.094660\n      -0.220687\n      0.028768\n      -0.015380\n      0.009565\n      -0.006354\n    \n    \n      gender_M\n      0.035851\n      0.062421\n      -0.667367\n      0.089813\n      -0.137836\n      0.181333\n      -0.029240\n      0.013446\n      -0.018437\n      0.007022\n    \n    \n      gender_O\n      -0.004605\n      -0.000464\n      0.016833\n      0.003264\n      0.971754\n      0.161382\n      0.002410\n      0.007860\n      0.037284\n      -0.002891\n    \n    \n      bogo\n      0.034535\n      -0.382530\n      0.020408\n      0.564491\n      0.008544\n      -0.096284\n      -0.270397\n      -0.087753\n      0.181347\n      0.082079\n    \n    \n      discount\n      -0.131470\n      0.563949\n      0.031534\n      -0.172596\n      -0.004933\n      0.034859\n      0.157231\n      0.140846\n      -0.063367\n      -0.327625\n    \n    \n      informational\n      0.144968\n      -0.277401\n      -0.076936\n      -0.572614\n      -0.005212\n      0.089601\n      0.163296\n      -0.080720\n      -0.172167\n      0.367116\n    \n  \n\n\n\n\n ## Prediction modelling\n\n\nTrain the baseline model for Random Forest\n\n%%time\nrfc = RandomForestClassifier()\nrfc.fit(X_train_scaled_pca, y_train)\ndisplay(rfc.score(X_train_scaled_pca, y_train))\n\n1.0\n\n\nCPU times: user 19 s, sys: 35 ms, total: 19 s\nWall time: 19.4 s\n\n\n ## Gradient Boosting Algorithm\n ## Hyperparameter Tuning\n\n\nHyperparameter Tuning Round 1: RandomSearchCV\nWe will be tuning these hyperparameters: * n_estimators: the number of “trees” in our Random Forest. * max_features: the number of features at each split. * max_depth: the max number of “splits”each tree can have. * min_samples_split: the minimum number of observations required before a node of a tree can split itself. * min_samples_leaf: the minimum number of observations required at each leaf at the ends of each tree. * bootstrap: whether to use bootstrapping or not to provide data to each tree in the Random Forest. (Bootstrapping is a random sampling from the dataset with replacement.)\n\n%%time\nn_estimators = [int(x) for x in np.linspace(start = 100, stop = 1000, num = 10)]\nmax_features = ['log2', 'sqrt']\n\nmax_depth = [int(x) for x in np.linspace(start = 1, stop = 15, num = 15)]\n\nmin_samples_split = [int(x) for x in np.linspace(start = 2, stop = 50, num = 10)]\n\nmin_samples_leaf = [int(x) for x in np.linspace(start = 2, stop = 50, num = 10)]\n\nbootstrap = [True, False]\n\nparam_dist = {'n_estimators': n_estimators,\n               'max_features': max_features,\n               'max_depth': max_depth,\n               'min_samples_split': min_samples_split,\n               'min_samples_leaf': min_samples_leaf,\n               'bootstrap': bootstrap}\n\nrs = RandomizedSearchCV(rfc, \n                        param_dist, \n                        n_iter = 100, \n                        cv = 3, \n                        verbose = 1, \n                        n_jobs=3, \n                        random_state=0)\n\nCPU times: user 2.04 ms, sys: 0 ns, total: 2.04 ms\nWall time: 17 ms\n\n\n\n%%time\nrs.fit(X_train_scaled_pca, y_train)\nrs.best_params_\n\nFitting 3 folds for each of 100 candidates, totalling 300 fits\nCPU times: user 1min 53s, sys: 380 ms, total: 1min 53s\nWall time: 1h 53min 42s\n\n\n{'n_estimators': 500,\n 'min_samples_split': 12,\n 'min_samples_leaf': 18,\n 'max_features': 'sqrt',\n 'max_depth': 13,\n 'bootstrap': False}\n\n\nWith n_iter = 100 and cv = 3, we created 300 Random Forest models, randomly sampling combinations of the hyperparameters input above. We can call “best_params_” to get the best performing model’s parameters. However, “best_params_” at this stage may not give us the best insight to get a range of parameters to try for the next round of hyperparameter tuning. To get a good range of values to try next, we can easily get a dataframe of our RandomSearchCV results\n\nrs_df = pd.DataFrame(rs.cv_results_).sort_values('rank_test_score').reset_index(drop=True)\nrs_df = rs_df.drop([\n            'mean_fit_time', \n            'std_fit_time', \n            'mean_score_time',\n            'std_score_time', \n            'params', \n            'split0_test_score', \n            'split1_test_score', \n            'split2_test_score', \n            'std_test_score'],\n            axis=1)\nrs_df.head(10)\n\n\n\n\n\n  \n    \n      \n      param_n_estimators\n      param_min_samples_split\n      param_min_samples_leaf\n      param_max_features\n      param_max_depth\n      param_bootstrap\n      mean_test_score\n      rank_test_score\n    \n  \n  \n    \n      0\n      500\n      12\n      18\n      sqrt\n      13\n      False\n      0.886116\n      1\n    \n    \n      1\n      700\n      12\n      2\n      sqrt\n      13\n      False\n      0.886053\n      2\n    \n    \n      2\n      400\n      23\n      2\n      sqrt\n      14\n      False\n      0.885593\n      3\n    \n    \n      3\n      300\n      28\n      7\n      log2\n      13\n      True\n      0.885551\n      4\n    \n    \n      4\n      700\n      2\n      2\n      log2\n      11\n      True\n      0.885530\n      5\n    \n    \n      5\n      600\n      50\n      23\n      sqrt\n      14\n      False\n      0.885321\n      6\n    \n    \n      6\n      800\n      28\n      12\n      sqrt\n      14\n      True\n      0.885154\n      7\n    \n    \n      7\n      600\n      23\n      2\n      sqrt\n      15\n      False\n      0.885091\n      8\n    \n    \n      8\n      300\n      2\n      23\n      log2\n      14\n      False\n      0.885070\n      9\n    \n    \n      9\n      300\n      18\n      18\n      sqrt\n      13\n      True\n      0.885050\n      10\n    \n  \n\n\n\n\n\nfig, axs = plt.subplots(ncols=3, nrows=2)\nsns.set(style=\"whitegrid\", color_codes=True, font_scale = 2)\nfig.set_size_inches(30,25)\n\nsns.barplot(x='param_n_estimators', y='mean_test_score', data=rs_df, ax=axs[0,0], color='lightgrey')\naxs[0,0].set_ylim([.83,.93])\naxs[0,0].set_title(label = 'n_estimators', size=30, weight='bold')\n\nsns.barplot(x='param_min_samples_split', y='mean_test_score', data=rs_df, ax=axs[0,1], color='coral')\naxs[0,1].set_ylim([.85,.93])\naxs[0,1].set_title(label = 'min_samples_split', size=30, weight='bold')\n\nsns.barplot(x='param_min_samples_leaf', y='mean_test_score', data=rs_df, ax=axs[0,2], color='lightgreen')\naxs[0,2].set_ylim([.80,.93])\naxs[0,2].set_title(label = 'min_samples_leaf', size=30, weight='bold')\n\nsns.barplot(x='param_max_features', y='mean_test_score', data=rs_df, ax=axs[1,0], color='wheat')\naxs[1,0].set_ylim([.88,.92])\naxs[1,0].set_title(label = 'max_features', size=30, weight='bold')\n\nsns.barplot(x='param_max_depth', y='mean_test_score', data=rs_df, ax=axs[1,1], color='lightpink')\naxs[1,1].set_ylim([.80,.93])\naxs[1,1].set_title(label = 'max_depth', size=30, weight='bold')\n\nsns.barplot(x='param_bootstrap',y='mean_test_score', data=rs_df, ax=axs[1,2], color='skyblue')\naxs[1,2].set_ylim([.88,.92])\naxs[1,2].set_title(label = 'bootstrap', size=30, weight='bold')\nplt.show()\n\n\n\n\nLooking at the plots above, we can extract insights about how well each value for each hyperparameter performed on average.\nn_estimators: 300, 500, 700, 900 seem to have the highest average scores.\nmin_samples_split: There are high scores at 23and 44\nmin_samples_leaf: We can try values between 2,7,18,34.\nmax_features: “sqrt” has the highest average score.\nmax_depth: values of 8-15 seem to do well.\nbootstrap: “False” has the highest average score.\nSo now we can take these insights and move into the second round of hyperparameter tuning to further narrow our selections.\n\n\nHyperparameter Tuning Round 2: GridSearchCV\n\n%%time\n## Tune this after the analysis from above\nn_estimators = [500,700,900]\n\nmax_depth = [8,9,10,11,12,13,14,15]\nmin_samples_split = [23,44]\nmin_samples_leaf = [2,18,34]\n\nparam_grid = {'n_estimators': n_estimators,\n               \n               'max_depth': max_depth,\n               'min_samples_split': min_samples_split,\n               'min_samples_leaf': min_samples_leaf,}\ngs = GridSearchCV(rfc, param_grid, cv = 3, verbose = 1, n_jobs=3)\ngs.fit(X_train_scaled_pca, y_train)\nrfc_3 = gs.best_estimator_\ngs.best_params_\n\nFitting 3 folds for each of 144 candidates, totalling 432 fits\nCPU times: user 2min 10s, sys: 587 ms, total: 2min 10s\nWall time: 3h 38min 32s\n\n\n{'max_depth': 13,\n 'min_samples_leaf': 2,\n 'min_samples_split': 23,\n 'n_estimators': 900}\n\n\n\nx_test_scaled_df=pd.DataFrame(X_test_scaled,columns=feature_names)\n\n\nx_test_scaled_df\n\n\n\n\n\n  \n    \n      \n      income\n      spent_required\n      money_gained\n      age\n      channel_social\n      channel_email\n      channel_mobile\n      channel_web\n      offer_duration_days\n      days_of_membership\n      gender_F\n      gender_M\n      gender_O\n      bogo\n      discount\n      informational\n    \n  \n  \n    \n      0\n      0.480289\n      0.308519\n      -0.570975\n      0.836877\n      0.872210\n      0.326346\n      0.421475\n      -1.453699\n      0.498934\n      -0.250415\n      1.150423\n      -1.117482\n      -0.120439\n      1.197087\n      -0.92360\n      -0.384232\n    \n    \n      1\n      -0.303513\n      -1.582487\n      -0.570975\n      -0.785519\n      -1.026961\n      -0.700134\n      -0.493049\n      -0.360391\n      -1.112714\n      -0.571356\n      1.150423\n      -1.117482\n      -0.120439\n      -0.835361\n      -0.92360\n      2.602591\n    \n    \n      2\n      -0.026877\n      -0.258783\n      -0.570975\n      -0.576696\n      0.872210\n      0.326346\n      0.421475\n      0.732917\n      0.498934\n      1.569288\n      1.150423\n      -1.117482\n      -0.120439\n      -0.835361\n      1.08272\n      -0.384232\n    \n    \n      3\n      0.618607\n      0.308519\n      2.948957\n      -0.062669\n      -0.077375\n      -0.700134\n      -0.493049\n      -1.453699\n      -0.629219\n      -0.218217\n      1.150423\n      -1.117482\n      -0.120439\n      1.197087\n      -0.92360\n      -0.384232\n    \n    \n      4\n      -0.441831\n      2.199524\n      1.188991\n      -0.383936\n      -1.026961\n      -0.700134\n      -1.407573\n      -0.360391\n      -0.145725\n      -0.563047\n      1.150423\n      -1.117482\n      -0.120439\n      -0.835361\n      1.08272\n      -0.384232\n    \n    \n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n    \n    \n      23557\n      0.295865\n      0.308519\n      0.133011\n      -0.303619\n      -0.077375\n      -0.700134\n      -0.493049\n      -0.360391\n      -0.145725\n      -0.390632\n      -0.869245\n      0.894869\n      -0.120439\n      -0.835361\n      1.08272\n      -0.384232\n    \n    \n      23558\n      2.416740\n      0.308519\n      -0.570975\n      0.997511\n      0.872210\n      0.326346\n      0.421475\n      0.732917\n      -0.145725\n      -0.451912\n      1.150423\n      -1.117482\n      -0.120439\n      1.197087\n      -0.92360\n      -0.384232\n    \n    \n      23559\n      -0.580149\n      -0.258783\n      0.485004\n      -0.753392\n      -0.077375\n      -0.700134\n      -0.493049\n      -0.360391\n      -0.629219\n      0.571152\n      -0.869245\n      0.894869\n      -0.120439\n      -0.835361\n      1.08272\n      -0.384232\n    \n    \n      23560\n      0.203653\n      0.308519\n      0.133011\n      0.451357\n      0.872210\n      1.352827\n      1.335999\n      1.826225\n      2.594077\n      2.261024\n      1.150423\n      -1.117482\n      -0.120439\n      -0.835361\n      1.08272\n      -0.384232\n    \n    \n      23561\n      -1.502269\n      0.308519\n      2.948957\n      -0.239366\n      -0.077375\n      -0.700134\n      -0.493049\n      -0.360391\n      -0.951549\n      -0.633674\n      1.150423\n      -1.117482\n      -0.120439\n      1.197087\n      -0.92360\n      -0.384232\n    \n  \n\n23562 rows × 16 columns\n\n\n\n\nx_test_scaled_df.drop(columns=['bogo','discount','informational','gender_M','gender_F','gender_O'],axis=1,inplace=True)"
  },
  {
    "objectID": "posts/2021-07-14-Starbucks-Optimising-Customer-Segmentation-with-Random-Forest-and-Gradient-Boosting.html#evaluate-performance-of-models-on-test-data",
    "href": "posts/2021-07-14-Starbucks-Optimising-Customer-Segmentation-with-Random-Forest-and-Gradient-Boosting.html#evaluate-performance-of-models-on-test-data",
    "title": "blog",
    "section": "Evaluate Performance Of Models On Test Data",
    "text": "Evaluate Performance Of Models On Test Data\nNow, we can evaluate each of the models that we have made on our test data. Remember that we are testing 3 models:\n1. Baseline Random Forest\n2. Baseline Random Forest With PCA Reduced Dimensionality\n3. Baseline Random Forest With PCA Reduced Dimensionality & Hyperparameter Tuning\n\ny_pred = rfc.predict(x_test_scaled_df)\ny_pred_pca = rfc.predict(X_test_scaled_pca)\ny_pred_gs = gs.best_estimator_.predict(X_test_scaled_pca)\n\n\nfrom sklearn.metrics import confusion_matrix\nconf_matrix_baseline = pd.DataFrame(confusion_matrix(y_test, y_pred), index = ['actual 0', 'actual 1','actual 2'], columns = ['predicted 0', 'predicted 1','predicted 2'])\nconf_matrix_baseline_pca = pd.DataFrame(confusion_matrix(y_test, y_pred_pca), index = ['actual 0', 'actual 1','actual 2'], columns = ['predicted 0', 'predicted 1','predicted 2'])\nconf_matrix_tuned_pca = pd.DataFrame(confusion_matrix(y_test, y_pred_gs), index = ['actual 0', 'actual 1','actual 2'], columns = ['predicted 0', 'predicted 1','predicted 2'])\ndisplay(conf_matrix_baseline)\n\ndisplay('Baseline Random Forest recall score', recall_score(y_test, y_pred, average='weighted'))\ndisplay(conf_matrix_baseline_pca)\n\ndisplay('Baseline Random Forest With PCA recall score', recall_score(y_test, y_pred_pca,average='weighted'))\ndisplay(conf_matrix_tuned_pca)\n\ndisplay('Hyperparameter Tuned Random Forest With PCA Reduced Dimensionality recall score', recall_score(y_test, y_pred_gs,average='weighted'))\n\n\n\n\n\n  \n    \n      \n      predicted 0\n      predicted 1\n      predicted 2\n    \n  \n  \n    \n      actual 0\n      8226\n      1303\n      1007\n    \n    \n      actual 1\n      1966\n      610\n      3840\n    \n    \n      actual 2\n      5044\n      855\n      711\n    \n  \n\n\n\n\n'Baseline Random Forest recall score'\n\n\n0.4051863169510228\n\n\n\n\n\n\n  \n    \n      \n      predicted 0\n      predicted 1\n      predicted 2\n    \n  \n  \n    \n      actual 0\n      8724\n      1040\n      772\n    \n    \n      actual 1\n      643\n      5773\n      0\n    \n    \n      actual 2\n      395\n      12\n      6203\n    \n  \n\n\n\n\n'Baseline Random Forest With PCA recall score'\n\n\n0.878533231474408\n\n\n\n\n\n\n  \n    \n      \n      predicted 0\n      predicted 1\n      predicted 2\n    \n  \n  \n    \n      actual 0\n      8644\n      1000\n      892\n    \n    \n      actual 1\n      541\n      5874\n      1\n    \n    \n      actual 2\n      204\n      29\n      6377\n    \n  \n\n\n\n\n'Hyperparameter Tuned Random Forest With PCA Reduced Dimensionality recall score'\n\n\n0.8868092691622104\n\n\nFrom this our result, our best perfoming model is our hyper parameter tund Random Forest model\n\ndef evaluate_model_performance(clf, X_train, y_train):\n    '''Prints a model's accuracy and F1-score\n    INPUT:\n    clf - Model object\n    X_train - Training data matrix\n    y_train - Expected model output vector\n\n    OUTPUT:\n    clf_accuracy: Model accuracy\n    clf_f1_score: Model F1-score\n    '''\n    \n    class_name = re.sub(\"[<>']\", '', str(clf.__class__))\n    class_name = class_name.split(' ')[1]\n    class_name = class_name.split('.')[-1]\n\n    y_pred_rf = clf.predict(X_train)\n\n    clf_accuracy = accuracy_score(y_train, y_pred_rf)\n    clf_f1_score = f1_score(y_train, y_pred_rf,average='weighted')\n    \n    print(\"%s model accuracy: %.3f\" % (class_name, clf_accuracy))\n    print(\"%s model f1-score: %.3f\" % (class_name, clf_f1_score))\n    \n    return clf_accuracy, clf_f1_score\n\n\n# Evaluate random forest classifier model's performance\nevaluate_model_performance(gs.best_estimator_, X_train_scaled_pca, y_train)\n\nRandomForestClassifier model accuracy: 0.916\nRandomForestClassifier model f1-score: 0.915\n\n\n(0.9159454826706802, 0.9153190471092886)\n\n\n\nFeature importance\n\n# Define variables\n# https://machinelearningmastery.com/calculate-feature-importance-with-python/\nrelative_importance = gs.best_estimator_.feature_importances_\nrelative_importance = relative_importance / np.sum(relative_importance)\n\nfeature_importance =\\\n    pd.DataFrame(list(zip(feature_names,\n                          relative_importance)),\n                 columns=['feature', 'relativeimportance'])\n\nfeature_importance = feature_importance.sort_values('relativeimportance',\n                                                    ascending=False)\n\nfeature_importance = feature_importance.reset_index(drop=True)\n\npalette = sns.color_palette(\"Blues_r\", feature_importance.shape[0])\n\n# Plot Estimated Feature Importance\nplt.figure(figsize=(8, 8))\nsns.barplot(x='relativeimportance',\n            y='feature',\n            data=feature_importance,\n            palette=palette)\nplt.xlabel('Relative Importance')\nplt.ylabel('Feature')\nplt.title('Estimated Feature Importance Based on Random Forest')\n\nText(0.5, 1.0, 'Estimated Feature Importance Based on Random Forest')\n\n\n\n\n\n\nfeature_importance.head(n=10)\n\n\n\n\n\n  \n    \n      \n      feature\n      relativeimportance\n    \n  \n  \n    \n      0\n      income\n      0.242512\n    \n    \n      1\n      age\n      0.188434\n    \n    \n      2\n      offer_duration_days\n      0.174120\n    \n    \n      3\n      channel_mobile\n      0.143021\n    \n    \n      4\n      spent_required\n      0.093982\n    \n    \n      5\n      channel_web\n      0.062092\n    \n    \n      6\n      days_of_membership\n      0.042789\n    \n    \n      7\n      money_gained\n      0.020546\n    \n    \n      8\n      channel_email\n      0.016501\n    \n    \n      9\n      channel_social\n      0.016003\n    \n  \n\n\n\n\nAccording to our model, the 10 most important features that determine whether a customer will ignore, make an order or not make an order are: * Income which contributes the most- 24% * Age which contributes-18% * Duration of offer-17% * Offer sent on mobile-14% * The spend required to complete the offer-9% * If offer was sent on web-6% * How long a customer has been a member-4% * The reward to be gained-2% * Offer sent via email-1.6% * Offer sent via social media-1.6%\n\nWhich means demographics contribute 42% of the decision. The channel used to communicate the offer contributes 23.2%. The details of the offer contribute 11%. How long the customer has been a member contributes 4%.\n\nPrint the best model’s hyperparameters\n\nprint(gs.best_estimator_)\n\nRandomForestClassifier(max_depth=13, min_samples_leaf=2, min_samples_split=23,\n                       n_estimators=900)\n\n\n\nfrom sklearn.metrics import classification_report\n\nlabels = [\"no view\", \"no order\", \"possible order\"]\nprint(classification_report(y_test,y_pred, target_names=labels))\n\n                precision    recall  f1-score   support\n\n       no view       0.54      0.78      0.64     10536\n      no order       0.22      0.10      0.13      6416\npossible order       0.13      0.11      0.12      6610\n\n      accuracy                           0.41     23562\n     macro avg       0.30      0.33      0.30     23562\n  weighted avg       0.34      0.41      0.35     23562\n\n\n\n\nrf=RandomForestClassifier(max_depth=13, min_samples_leaf=2, min_samples_split=23,\n                       n_estimators=900)\n\n\n%%time\nrf.fit(X_train_scaled_pca, y_train)\ndisplay(rf.score(X_train_scaled_pca, y_train))\n\n0.9167398302604624\n\n\nCPU times: user 2min 20s, sys: 69.6 ms, total: 2min 20s\nWall time: 2min 21s\n\n\n\n%%time\ny_pred_test = rf.predict(x_test_scaled_df)\n\nCPU times: user 2.93 s, sys: 0 ns, total: 2.93 s\nWall time: 2.95 s\n\n\n ## Conclusion\n\n\nTest on new data\n\nprediction=y_pred_test\nframes=x_test_scaled_df\nframes['Prediction'] = prediction\nframes.head()\n\n\n\n\n\n  \n    \n      \n      income\n      spent_required\n      money_gained\n      age\n      channel_social\n      channel_email\n      channel_mobile\n      channel_web\n      offer_duration_days\n      days_of_membership\n      Prediction\n    \n  \n  \n    \n      0\n      0.480289\n      0.308519\n      -0.570975\n      0.836877\n      0.872210\n      0.326346\n      0.421475\n      -1.453699\n      0.498934\n      -0.250415\n      0.0\n    \n    \n      1\n      -0.303513\n      -1.582487\n      -0.570975\n      -0.785519\n      -1.026961\n      -0.700134\n      -0.493049\n      -0.360391\n      -1.112714\n      -0.571356\n      0.0\n    \n    \n      2\n      -0.026877\n      -0.258783\n      -0.570975\n      -0.576696\n      0.872210\n      0.326346\n      0.421475\n      0.732917\n      0.498934\n      1.569288\n      0.0\n    \n    \n      3\n      0.618607\n      0.308519\n      2.948957\n      -0.062669\n      -0.077375\n      -0.700134\n      -0.493049\n      -1.453699\n      -0.629219\n      -0.218217\n      0.0\n    \n    \n      4\n      -0.441831\n      2.199524\n      1.188991\n      -0.383936\n      -1.026961\n      -0.700134\n      -1.407573\n      -0.360391\n      -0.145725\n      -0.563047\n      0.0\n    \n  \n\n\n\n\n\nframes['Prediction'] = frames['Prediction'].map({0: 'no view', 1: 'no order', 2: 'possible order'})\n\n\nframes.Prediction.value_counts()\n\nno view           12565\npossible order     6387\nno order           4610\nName: Prediction, dtype: int64\n\n\n\nframes.head()\n\n\n\n\n\n  \n    \n      \n      income\n      spent_required\n      money_gained\n      age\n      channel_social\n      channel_email\n      channel_mobile\n      channel_web\n      offer_duration_days\n      days_of_membership\n      Prediction\n    \n  \n  \n    \n      0\n      0.480289\n      0.308519\n      -0.570975\n      0.836877\n      0.872210\n      0.326346\n      0.421475\n      -1.453699\n      0.498934\n      -0.250415\n      no view\n    \n    \n      1\n      -0.303513\n      -1.582487\n      -0.570975\n      -0.785519\n      -1.026961\n      -0.700134\n      -0.493049\n      -0.360391\n      -1.112714\n      -0.571356\n      no view\n    \n    \n      2\n      -0.026877\n      -0.258783\n      -0.570975\n      -0.576696\n      0.872210\n      0.326346\n      0.421475\n      0.732917\n      0.498934\n      1.569288\n      no view\n    \n    \n      3\n      0.618607\n      0.308519\n      2.948957\n      -0.062669\n      -0.077375\n      -0.700134\n      -0.493049\n      -1.453699\n      -0.629219\n      -0.218217\n      no view\n    \n    \n      4\n      -0.441831\n      2.199524\n      1.188991\n      -0.383936\n      -1.026961\n      -0.700134\n      -1.407573\n      -0.360391\n      -0.145725\n      -0.563047\n      no view\n    \n  \n\n\n\n\n\nsns.countplot(frames['Prediction'])\n\n<AxesSubplot:xlabel='Prediction', ylabel='count'>\n\n\n\n\n\n ## Summary of Key Findings\nStarbucks Customer Demographics:\n58.6 % of customers are male, 39.8% are female and 1.4% prefer not to specify gender. While men are the largest population, females are the highest earners and spenders. Most men are in the low_to_mid and mid income bracket.\nThere’s an almost equal distribution of male and females among the mid to high income bracket. Middle income and low_to_mid income earners occupy a huge proportion of the population, with mid income earners being the dorminant. Low earners are fewer, they are the least.\nStarbucks Customer spending behavior:\nFemales are the highest spenders, they spend on average 0.23USD per day followed by gender O who spend 0.21USD per day and least spenders are males who spent on average 0.16USD.\nThe elderly, that is those above 60 are the highest age group spending an average of 0.21USD per day. Adults, those aged 35-60 are the second highest spenders on average, spending 0.19USD per day. Ages 17-34 are the least spenders, spending roughly 0.14USD per day\nAs expected, high income earners have the highest average spend. Spending on average, 0.28USD per day, mid to high earners also spend highly with 0.23USD per day. Low and low to mid income earners spend right around the same amount. They spend about 0.11US per day\nNew members have the highest average daily spend followed by regular members. Loyal members, those who have been members for over 3 years are no longer daily spenders\nSummary of average daily spending has revealed that: * High earning elderly females who are new members have the highest daily average spend i.e Female members who are over 60 years earning over 90K and have been members for at least 1200 days\nStarbucks Offers: * 41 395 new customers received offers. Of those that received offers, only 41.5% viewed the offer and did not complete it and 37.5% completed the offer.\n\n40 539 new customers made transactions on the app, new members made the highest number of transactions of all the members. Regular members also made a sizeable amount of transactions on the app, they made 30 036 transactions. Loyal members had the least number of transactions, making 12 299 transactions\nRegular members were the second highest to receive offers, receiving 19 223 offers but only 24% viewing the offers and 60% completing the offers. Most regular members completed the offers without viewing them.\n5785 loyal customers received offers, of this number, 38.2% viewed the offers and 41% completed the offers.\n\nPerfomance of Offers on different members: * On new customers:\n* 39.88% of new customers received BOGO offer, 41.4% of those that received the BOGO viewed it, which constituted 39.8% of all offer views by new customers. 45% of those new customers that received the BOGO completed it, accounting for 48.8% of all new customers that completed offers.\n\n* 40% of new customers received the discount offer, 27.5% of those that received this offer viewed the offer, accounting for 26.6% of all offer views by new customers. 47.8% of new customers who received the discount offer completed it, which accounts for 51.1% of all offers completed by new customers.\n\n * 20% of new customers received informational offers, 69.5% of them viewed it, which accounts for 33.5% of views by new customers.\n\nOn regular customers:\n\n39.77% of regular customers received the BOGO offer, of these only 18% viewed it. This means that 29.4% of all views of BOGO offer were done by regular customers. 74% of regular customers who received the BOGO offer completed it. This accounts for 48.6% of all offers completed by regular customers\n40.3% of regular customers received the discount offer, of these only 7% of them viewed it. This means that 12.1% of offer views by regular customers were viewing discount offer. 77.1% of regular customers who received discount offer completed it. This means 51.4% of all offers completed by regular customers was on discount offers.\n19.91% of regular customers received the informational offer, of these 71.6% of them viewed it. 23.5% of all views made by regular customers were on informational offers.\n\nOn loyal customers:\n\n40.3% of loyal customers received the BOGO offer, of these 46% of them viewed it. This means that, 48.85% of all loyal customer views were on BOGO. 40.5% of loyal customers who received BOGO completed it. This accounts for 39.86% of all offers completed by loyal customers.\n39.6% of loyal customers received discount offer, 13.2% viewed it. This means that 13.7% of all views by loyal customers was on discount offer.62.28% of loyal customers who received the discount offer completed it. This accounts for 60% of all offers completed by loyal customers.\nThe bogo_3 is the most succesful offer with 29% success. The discount offers perfomed pretty well averaging 27%.\n\n\nPefomance of Offers on different Genders: * Female BOGO offer:\n* 10 975 females received the BOGO offers, 1368 viewed it but did not complete it. 7566 received and completed it. Only 995 of them auto completed it.\n\nFemale Discount offer:\n\n10 943 females received the Discount offers, 1267 viewed but did not complete. 6369 received and completed it.1360 of them auto completed it.\n\nFemale Informational offer:\n\n5538 females received the informational offer, 1242 viewed but did not complete the offer. 2668 received and completed the offer.\n\nMale BOGO offer:\n\n15 208 males received the BOGO offer. Of these 2534 viewed the offer but did not complete it. 9785 received and completed the offer. 963 completed the offer automatically.\n\nMale Discount offer:\n\n15 354 males received the discount offer. Of these 2201 males only viewed the offer. 8049 received and completed the offer. 1271 auto completed the offer\n\nMale Informational offer:\n\n7567 males received the informational offer. 1480 males viewed the offer without completing it. 3809 received and completed it\n\nGender unspecified BOGO offer:\n\n354 of these customers received the offer. 56 only viewed the offer. 253 received and completed the offer while 20 auto completed it.\nMid income earners received and completed the most offers and made the most transactions.\nLow to mid income earners were the second highest in terms of offers received and completed.\n\n\nCustomer Clusters There are 4 types clusters/Segments of customers. * Cluster 0: * Clusters 0 has mostly mid to high and high earners and has mostly elderly and young adults. This cluster liked and responded to all three offers though they spent the least of all 4 clusters. Cluster 0 had a few outliers but most customers in that cluster did not complete offers, a large number of them made casual purchases and or ignored the offers. Cluster O also like all 3 offers with Informational being the most popular,followed by discount and last BOGO offers\n\nCluster 1:\n\nThis cluster has mostly mid to high income earners. Cluster 1 liked and spent the most on informational offers spending between 2.5 and 10 USD on them. They spent about the same on BOGO and Discount spending on average between 1 to 7.5 USD. In general, this cluster spent the least amount on all offers.\n\nCluster 2:\n\nCluster 2 made the highest transactions. Cluster 2 has a normal distribution from between low to mid to high income earners with most members in the higher income bracket. Cluster 2 has mostly new and regular members. The prevalent ages being adults and teenagers with an even distribution among males and females. Informational offers were not popular among cluster 2, they did not spent on it. Only a few outliers completed this offer. They spent quite a lot on discount and BOGO offers spending an average of 10USD on both which was the second highest spend on offers among the clusters.\n\nCluster 3:\n\nCluster 3 is mostly skewed towards high income earners. Cluster 3 has the highest average money spent for both transactions and completed offers. Followed closely by cluster 2. In terms of member type it is evenly distributed between new and regular members with very few loyal members, same even distribution among males and females and very very few other genders. This cluster is filled with adults and the elderly which is consistent with what we have been finding. Cluster 3 customers spent a lot on Informational offers, more than 50% of them spend above average (10USD) on it. They also spend the highest on average on Discount offers, most of them spending between 7.5 to 12.5USD. They also spent a lot on BOGO offers though not the most popular offer among this cluster. They spent a minimum of 5USD which is higher than the minimum spend for all other clusters. Most of them spent an average of 9USD on BOGO offers.\n\n\n\n\nFindings from the model\nAccording to our model, the 10 most important features that determine whether a customer will ignore, make an order or not make an order are: * Income which contributes the most- 24% * Age which contributes-18% * Duration of offer-17% * Offer sent on mobile-14% * The spend required to complete the offer-9% * If offer was sent on web-6% * How long a customer has been a member-4% * The reward to be gained-2% * Offer sent via email-1.6% * Offer sent via social media-1.6%\n\nWhich means demographics contribute 42% of the decision. The channel used to communicate the offer contributes 23.2%. The details of the offer contribute 11%. How long the customer has been a member contributes 4%.\n\n ## Recommendations\nOffers: BOGO and Discount offers perfomed very well accross all demographics and had a lot of money spent on them. Starbucks should keep rolling these out. Informational offers did not perform very well and are also difficult to monitor.There is also no way to track whether informational offers are redeemed (can only see if user received or opened informational offer). We have to assume they were influenced by the informational offer if they viewed it. Offer duration is also very significant factor in whether customers respond to offers, it contributes 17% to the decision of completing and not completing an offer. More money was spent for offers that lasted longer, on average 2USD more was spent on offers that lasted more than 5 days and more. The spent required is also a good measure, generally customers will spend at most under 7 dollars for spent required above 7.\nTarget Groups: Females on average spend the most on all offers. Adult and elderly women who are mid to high earners are the most profitable group. They respond to offers and spend a lot on them.\nIn general, the higher the income the more customers spend on offers.\nAdults and the elderly on average spend more on offers than all other groups.\n42% of the decision to complete an offer or not is influenced by demographics i.e age and income.\nClusters 2 and 3 should be targeted more because they are high spenders, they are newer members, adults and have good income.\nChannel of sending offers: Channels sent via mobile received the highest spend and were the most completed. Most people who received offer via mobile completed it. It seems that mobile is the most important channel. According to the model, receiving the offer via mobile contributes 14% to the response on the offer. Probably because the rewards app is a mobile app. Other media do contribute like the web (6%), other channels contribute 1.6% each.\nModel: Starbucks should use the random forest classifier model, it can handle large amount of training data and is good for the multiclassification problem. By tuning it using random search and grid search, its best parameters can be found."
  },
  {
    "objectID": "posts/post-with-code/index.html",
    "href": "posts/post-with-code/index.html",
    "title": "Post With Code",
    "section": "",
    "text": "This is a post with executable code."
  },
  {
    "objectID": "posts/pumpkins_knime/a_year_of_pumpkins.html",
    "href": "posts/pumpkins_knime/a_year_of_pumpkins.html",
    "title": "A Year of Pumpkins: Regression Analysis with Pumpkin prices and KNIME Analytics platform",
    "section": "",
    "text": "The dataset is actually made up of multiple datasets, each for a separate city. Using the CSV Reader node, all 13 files could be read at once. However, because some of the files had more columns, an option to catch the error had to be relaxed. The columns are as below:\n\nThe last 4, are not in most of the other csv files, and so had to be removed using the Column Filter node. Other columns with no valuable information were also removed, as well as those with over 40% missing values with Missing Value Column Filter node.\nColumn Date was transformed into datetime, using Pandas. Knime can integrate python (and other languages including R and Java). The date was then used to access, using dt, week, month and week information which might be useful in determining price levels. Also the average price was calculated from low and high for the day.\n\nThe linear regression is a base line to benchmark the performance. The data was split 70:30 using the Partitioning node, and a Linear Regression Learner and Linear Regression Predictor were used to train and predict on the test set. The regression was run on 11 columns.\n\nResults of the linear regression, including R-squared for model fit and RMSE for performance.\nLinear correlation was used to remove corelated features. 2 columns were removed and training and predict done.\n\nRemoving the correlated features resulted in a slight improvement in the RMSE, falling to 41.293 from 42.04.\n Whole workflow\nOther ideas to explore: 1. H2o regression and tree regression - to explore feature importances 2. Regularisation methods for regresssion - LASSO, Ridge 3. SVM 4. Packaging - there are different packages measurements, see if they can be standardised. 5. Visualisations"
  },
  {
    "objectID": "posts/welcome/index.html",
    "href": "posts/welcome/index.html",
    "title": "Welcome To My Blog",
    "section": "",
    "text": "Since this post doesn’t specify an explicit image, the first image in the post will be used in the listing page of posts."
  }
]